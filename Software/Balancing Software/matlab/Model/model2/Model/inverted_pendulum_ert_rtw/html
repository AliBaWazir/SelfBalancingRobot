<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="./js/coder_app.js"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="./rtwreport_utils.js"></script>
<script type="text/javascript" src="./rtwannotate.js"></script>
<link rel="stylesheet" type="text/css" href="./css/coder_app.css"/>
</head>
<body onload="srcFileOnload();">
<pre id="code">
<table class="code" id="codeTbl">
<tr name="1" id="1">
<td>1</td><td><span class="pp">#include "inverted_pendulum.h"</span></td></tr>
<tr name="2" id="2">
<td>2</td><td><span class="pp">#include "mw_force_no_optimization.h"</span></td></tr>
<tr name="3" id="3">
<td>3</td><td><span class="pp">#include "arm_cortex_m_multitasking.h"</span></td></tr>
<tr name="4" id="4">
<td>4</td><td><span class="ct">/* Re-entrant function for multi-tasking: arm_cortex_m_call_thread_with_context_switch*/</span></td></tr>
<tr name="5" id="5">
<td>5</td><td></td></tr>
<tr name="6" id="6">
<td>6</td><td><a id="6c1" class="tk">__attribute__</a> ((<a id="6c17" class="tk">naked</a>)) <span class="kw">void</span> <a id="6c30" class="tk">arm_cortex_m_call_thread_with_context_switch</a>(<span class="kw">void</span> (* <a id="6c83" class="tk">isr_routine_ptr</a>)(<span class="kw">void</span>)) <span class="br">{</span></td></tr>
<tr name="7" id="7">
<td>7</td><td><span class="pp">#if</span> (<a id="7c6" class="tk">defined</a>(<a id="7c14" class="tk">__FPU_PRESENT</a>) &amp;&amp; (<a id="7c33" class="tk">__FPU_PRESENT</a> == 1)) &amp;&amp; (<a id="7c58" class="tk">defined</a>(<a id="7c66" class="tk">__FPU_USED</a>) &amp;&amp; (<a id="7c82" class="tk">__FPU_USED</a> == 1))</td></tr>
<tr name="8" id="8">
<td>8</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     TST  LR, #0x10");</td></tr>
<tr name="9" id="9">
<td>9</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     IT EQ");</td></tr>
<tr name="10" id="10">
<td>10</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     VMOVEQ S0, S0");</td></tr>
<tr name="11" id="11">
<td>11</td><td><span class="pp">#endif</span></td></tr>
<tr name="12" id="12">
<td>12</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     PUSH {R0, R1}");</td></tr>
<tr name="13" id="13">
<td>13</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     SUB SP, SP, #0x20");</td></tr>
<tr name="14" id="14">
<td>14</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ADR R0,Call_isr_routine_in_thread_mode");</td></tr>
<tr name="15" id="15">
<td>15</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     STR R0,[SP, #24]");</td></tr>
<tr name="16" id="16">
<td>16</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     MOV R0,#0x01000000");</td></tr>
<tr name="17" id="17">
<td>17</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     STR R0,[SP, #28]");</td></tr>
<tr name="18" id="18">
<td>18</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     MVNS R0,#0x6");</td></tr>
<tr name="19" id="19">
<td>19</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     MOV LR, R0");</td></tr>
<tr name="20" id="20">
<td>20</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     BX LR");</td></tr>
<tr name="21" id="21">
<td>21</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("Call_isr_routine_in_thread_mode:");</td></tr>
<tr name="22" id="22">
<td>22</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     POP {R0, R1}");</td></tr>
<tr name="23" id="23">
<td>23</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     BLX R0");</td></tr>
<tr name="24" id="24">
<td>24</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ISB");</td></tr>
<tr name="25" id="25">
<td>25</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     SVC #0");</td></tr>
<tr name="26" id="26">
<td>26</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("Unknown_Execution:");</td></tr>
<tr name="27" id="27">
<td>27</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     B Unknown_Execution");</td></tr>
<tr name="28" id="28">
<td>28</td><td><span class="br">}</span></td></tr>
<tr name="29" id="29">
<td>29</td><td><span class="ct">/* SVC Interrupt service routine to restore the context: SVC_Handler*/</span></td></tr>
<tr name="30" id="30">
<td>30</td><td></td></tr>
<tr name="31" id="31">
<td>31</td><td><a id="31c1" class="tk">__attribute__</a> ((<a id="31c17" class="tk">naked</a>)) <span class="kw">void</span> <a id="31c30" class="tk">SVC_Handler</a>(<span class="kw">void</span>) <span class="br">{</span></td></tr>
<tr name="32" id="32">
<td>32</td><td><span class="pp">#if</span> (<a id="32c6" class="tk">defined</a>(<a id="32c14" class="tk">__FPU_PRESENT</a>) &amp;&amp; (<a id="32c33" class="tk">__FPU_PRESENT</a> == 1)) &amp;&amp; (<a id="32c58" class="tk">defined</a>(<a id="32c66" class="tk">__FPU_USED</a>) &amp;&amp; (<a id="32c82" class="tk">__FPU_USED</a> == 1))</td></tr>
<tr name="33" id="33">
<td>33</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     TST  LR, #0x10");</td></tr>
<tr name="34" id="34">
<td>34</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     IT EQ");</td></tr>
<tr name="35" id="35">
<td>35</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     VMOVEQ S0, S0");</td></tr>
<tr name="36" id="36">
<td>36</td><td><span class="pp">#endif</span></td></tr>
<tr name="37" id="37">
<td>37</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     TST LR, #0x4");</td></tr>
<tr name="38" id="38">
<td>38</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ITE EQ");</td></tr>
<tr name="39" id="39">
<td>39</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     MRSEQ R0, MSP");</td></tr>
<tr name="40" id="40">
<td>40</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     MRSNE R0, PSP");</td></tr>
<tr name="41" id="41">
<td>41</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     LDR R1, [R0, #24]");</td></tr>
<tr name="42" id="42">
<td>42</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     LDRB.W R0, [R1, #-2]");</td></tr>
<tr name="43" id="43">
<td>43</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     CBZ R0, svc_service_0");</td></tr>
<tr name="44" id="44">
<td>44</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     B Unknown_SVC_Request");</td></tr>
<tr name="45" id="45">
<td>45</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("svc_service_0:");</td></tr>
<tr name="46" id="46">
<td>46</td><td><span class="pp">#if</span> (<a id="46c6" class="tk">defined</a>(<a id="46c14" class="tk">__FPU_PRESENT</a>) &amp;&amp; (<a id="46c33" class="tk">__FPU_PRESENT</a> == 1)) &amp;&amp; (<a id="46c58" class="tk">defined</a>(<a id="46c66" class="tk">__FPU_USED</a>) &amp;&amp; (<a id="46c82" class="tk">__FPU_USED</a> == 1))</td></tr>
<tr name="47" id="47">
<td>47</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     TST LR, #0x10");</td></tr>
<tr name="48" id="48">
<td>48</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ITE EQ");</td></tr>
<tr name="49" id="49">
<td>49</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ADDEQ SP, SP, #104");</td></tr>
<tr name="50" id="50">
<td>50</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ADDNE SP, SP, #32");</td></tr>
<tr name="51" id="51">
<td>51</td><td><span class="pp">#else</span></td></tr>
<tr name="52" id="52">
<td>52</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     ADD SP, SP, #32");</td></tr>
<tr name="53" id="53">
<td>53</td><td><span class="pp">#endif</span></td></tr>
<tr name="54" id="54">
<td>54</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     POP {R0, R1}");</td></tr>
<tr name="55" id="55">
<td>55</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     MSR APSR_nzcvq, R0");</td></tr>
<tr name="56" id="56">
<td>56</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     BX R1");</td></tr>
<tr name="57" id="57">
<td>57</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("Unknown_SVC_Request:");</td></tr>
<tr name="58" id="58">
<td>58</td><td>     <span class="kw">__asm</span> <span class="kw">volatile</span> ("     B Unknown_SVC_Request");</td></tr>
<tr name="59" id="59">
<td>59</td><td><span class="br">}</span></td></tr>
<tr name="60" id="60">
<td>60</td><td></td></tr>
</table>
</pre>
</body>
</html>
MATLAB 5.0 MAT-file, Platform: PCWIN64, Created on: Thu Jan 28 21:02:14 2016                                        Ê        IM   ^   xú„c``Xƒl@ÃƒÇ¿ƒ‹@úúüíÍõZRîô\gauˆ…KqQIπHM.Dçû3öz> ˆ@2üj>+îœµã*‚K@òwôê‰@ƒ ˆ‰Ã   Â  xúÏMo5‘ªŸÜ§¥iJ∏å⁄
P•¶I[‚BöM”Dd€êM$FlΩ3ﬁ¨ïœ»ˆ¥ªU+Â∆@Bä8ıà8!q©ÑƒÖ«^∏s‰'‡ÁÒÏ:≥€›4[ï’íÂ˜Ï˜ﬁºÁ˜¸¸1S°π:B„™ùPu•Âà¡Ä‘M´J—‡®∞ZpJ’;∏À_Ï√ü’¥ø§«
Ü¶RæYÕ‰ÃXrNfunction CodeDefine() { 
this.def = new Array();
this.def["IsrOverrun"] = {file: "ert_main_c.html",line:19,type:"var"};
this.def["isRateRunning"] = {file: "ert_main_c.html",line:20,type:"var"};
this.def["need2runFlags"] = {file: "ert_main_c.html",line:22,type:"var"};
this.def["rt_OneStep"] = {file: "ert_main_c.html",line:24,type:"fcn"};
this.def["main"] = {file: "ert_main_c.html",line:86,type:"fcn"};
this.def["inverted_pendulum_P"] = {file: "inverted_pendulum_c.html",line:36,type:"var"};
this.def["inverted_pendulum_B"] = {file: "inverted_pendulum_c.html",line:60,type:"var"};
this.def["inverted_pendulum_X"] = {file: "inverted_pendulum_c.html",line:63,type:"var"};
this.def["inverted_pendulum_Y"] = {file: "inverted_pendulum_c.html",line:66,type:"var"};
this.def["inverted_pendulum_M_"] = {file: "inverted_pendulum_c.html",line:69,type:"var"};
this.def["inverted_pendulum_M"] = {file: "inverted_pendulum_c.html",line:70,type:"var"};
this.def["inverted_pendulum_SetEventsForThisBaseStep"] = {file: "inverted_pendulum_c.html",line:82,type:"fcn"};
this.def["rate_monotonic_scheduler"] = {file: "inverted_pendulum_c.html",line:96,type:"fcn"};
this.def["rt_ertODEUpdateContinuousStates"] = {file: "inverted_pendulum_c.html",line:123,type:"fcn"};
this.def["inverted_pendulum_step0"] = {file: "inverted_pendulum_c.html",line:201,type:"fcn"};
this.def["inverted_pendulum_derivatives"] = {file: "inverted_pendulum_c.html",line:260,type:"fcn"};
this.def["inverted_pendulum_step2"] = {file: "inverted_pendulum_c.html",line:285,type:"fcn"};
this.def["inverted_pendulum_initialize"] = {file: "inverted_pendulum_c.html",line:292,type:"fcn"};
this.def["inverted_pendulum_terminate"] = {file: "inverted_pendulum_c.html",line:357,type:"fcn"};
this.def["RT_MODEL_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:64,type:"type"};
this.def["B_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:69,type:"type"};
this.def["X_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:74,type:"type"};
this.def["XDot_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:79,type:"type"};
this.def["XDis_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:84,type:"type"};
this.def["ODE3_IntgData"] = {file: "inverted_pendulum_h.html",line:93,type:"type"};
this.def["ExtY_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:100,type:"type"};
this.def["P_inverted_pendulum_T"] = {file: "inverted_pendulum_h.html",line:122,type:"type"};
this.def["int8_T"] = {file: "rtwtypes_h.html",line:47,type:"type"};
this.def["uint8_T"] = {file: "rtwtypes_h.html",line:48,type:"type"};
this.def["int16_T"] = {file: "rtwtypes_h.html",line:49,type:"type"};
this.def["uint16_T"] = {file: "rtwtypes_h.html",line:50,type:"type"};
this.def["int32_T"] = {file: "rtwtypes_h.html",line:51,type:"type"};
this.def["uint32_T"] = {file: "rtwtypes_h.html",line:52,type:"type"};
this.def["real32_T"] = {file: "rtwtypes_h.html",line:53,type:"type"};
this.def["real64_T"] = {file: "rtwtypes_h.html",line:54,type:"type"};
this.def["real_T"] = {file: "rtwtypes_h.html",line:60,type:"type"};
this.def["time_T"] = {file: "rtwtypes_h.html",line:61,type:"type"};
this.def["boolean_T"] = {file: "rtwtypes_h.html",line:62,type:"type"};
this.def["int_T"] = {file: "rtwtypes_h.html",line:63,type:"type"};
this.def["uint_T"] = {file: "rtwtypes_h.html",line:64,type:"type"};
this.def["ulong_T"] = {file: "rtwtypes_h.html",line:65,type:"type"};
this.def["char_T"] = {file: "rtwtypes_h.html",line:66,type:"type"};
this.def["uchar_T"] = {file: "rtwtypes_h.html",line:67,type:"type"};
this.def["byte_T"] = {file: "rtwtypes_h.html",line:68,type:"type"};
this.def["creal32_T"] = {file: "rtwtypes_h.html",line:78,type:"type"};
this.def["creal64_T"] = {file: "rtwtypes_h.html",line:83,type:"type"};
this.def["creal_T"] = {file: "rtwtypes_h.html",line:88,type:"type"};
this.def["cint8_T"] = {file: "rtwtypes_h.html",line:95,type:"type"};
this.def["cuint8_T"] = {file: "rtwtypes_h.html",line:102,type:"type"};
this.def["cint16_T"] = {file: "rtwtypes_h.html",line:109,type:"type"};
this.def["cuint16_T"] = {file: "rtwtypes_h.html",line:116,type:"type"};
this.def["cint32_T"] = {file: "rtwtypes_h.html",line:123,type:"type"};
this.def["cuint32_T"] = {file: "rtwtypes_h.html",line:130,type:"type"};
this.def["pointer_T"] = {file: "rtwtypes_h.html",line:148,type:"type"};
this.def["arm_cortex_m_call_thread_with_context_switch"] = {file: "arm_cortex_m_multitasking_c.html",line:6,type:"fcn"};
this.def["SVC_Handler"] = {file: "arm_cortex_m_multitasking_c.html",line:31,type:"fcn"};
}
CodeDefine.instance = new CodeDefine();
var testHarnessInfo = {OwnerFileName: "", HarnessOwner: "", HarnessName: "", IsTestHarness: "0"};
function Html2SrcLink() {
	this.html2SrcPath = new Array;
	this.html2Root = new Array;
	this.html2SrcPath["ert_main_c.html"] = "../ert_main.c";
	this.html2Root["ert_main_c.html"] = "ert_main_c.html";
	this.html2SrcPath["inverted_pendulum_c.html"] = "../inverted_pendulum.c";
	this.html2Root["inverted_pendulum_c.html"] = "inverted_pendulum_c.html";
	this.html2SrcPath["inverted_pendulum_h.html"] = "../inverted_pendulum.h";
	this.html2Root["inverted_pendulum_h.html"] = "inverted_pendulum_h.html";
	this.html2SrcPath["rtwtypes_h.html"] = "../rtwtypes.h";
	this.html2Root["rtwtypes_h.html"] = "rtwtypes_h.html";
	this.html2SrcPath["MW_target_hardware_resources_h.html"] = "../MW_target_hardware_resources.h";
	this.html2Root["MW_target_hardware_resources_h.html"] = "MW_target_hardware_resources_h.html";
	this.html2SrcPath["arm_cortex_m_multitasking_c.html"] = "../arm_cortex_m_multitasking.c";
	this.html2Root["arm_cortex_m_multitasking_c.html"] = "arm_cortex_m_multitasking_c.html";
	this.getLink2Src = function (htmlFileName) {
		 if (this.html2SrcPath[htmlFileName])
			 return this.html2SrcPath[htmlFileName];
		 else
			 return null;
	}
	this.getLinkFromRoot = function (htmlFileName) {
		 if (this.html2Root[htmlFileName])
			 return this.html2Root[htmlFileName];
		 else
			 return null;
	}
}
Html2SrcLink.instance = new Html2SrcLink();
var fileList = [
"ert_main_c.html","inverted_pendulum_c.html","inverted_pendulum_h.html","rtwtypes_h.html","MW_target_hardware_resources_h.html","arm_cortex_m_multitasking_c.html"];
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="./js/coder_app.js"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="./rtwreport_utils.js"></script>
<script type="text/javascript" src="./rtwannotate.js"></script>
<link rel="stylesheet" type="text/css" href="./css/coder_app.css"/>
</head>
<body onload="srcFileOnload();">
<pre id="code">
<table class="code" id="codeTbl">
<tr name="1" id="1">
<td>1</td><td><span class="ct">/*</span></td></tr>
<tr name="2" id="2">
<td>2</td><td><span class="ct"> * File: ert_main.c</span></td></tr>
<tr name="3" id="3">
<td>3</td><td><span class="ct"> *</span></td></tr>
<tr name="4" id="4">
<td>4</td><td><span class="ct"> * Code generated for Simulink model 'inverted_pendulum'.</span></td></tr>
<tr name="5" id="5">
<td>5</td><td><span class="ct"> *</span></td></tr>
<tr name="6" id="6">
<td>6</td><td><span class="ct"> * Model version                  : 1.48</span></td></tr>
<tr name="7" id="7">
<td>7</td><td><span class="ct"> * Simulink Coder version         : 8.8 (R2015a) 09-Feb-2015</span></td></tr>
<tr name="8" id="8">
<td>8</td><td><span class="ct"> * C/C++ source code generated on : Thu Jan 28 21:02:07 2016</span></td></tr>
<tr name="9" id="9">
<td>9</td><td><span class="ct"> *</span></td></tr>
<tr name="10" id="10">
<td>10</td><td><span class="ct"> * Target selection: ert.tlc</span></td></tr>
<tr name="11" id="11">
<td>11</td><td><span class="ct"> * Embedded hardware selection: ARM Compatible-&gt;ARM Cortex</span></td></tr>
<tr name="12" id="12">
<td>12</td><td><span class="ct"> * Code generation objectives: Unspecified</span></td></tr>
<tr name="13" id="13">
<td>13</td><td><span class="ct"> * Validation result: Not run</span></td></tr>
<tr name="14" id="14">
<td>14</td><td><span class="ct"> */</span></td></tr>
<tr name="15" id="15">
<td>15</td><td></td></tr>
<tr name="16" id="16">
<td>16</td><td><span class="pp">#include "inverted_pendulum.h"</span></td></tr>
<tr name="17" id="17">
<td>17</td><td><span class="pp">#include "rtwtypes.h"</span></td></tr>
<tr name="18" id="18">
<td>18</td><td></td></tr>
<tr name="19" id="19">
<td>19</td><td><span class="kw">volatile</span> <span class="kw">int</span> <a id="19c14" class="tk">IsrOverrun</a> = 0;</td></tr>
<tr name="20" id="20">
<td>20</td><td><a id="20c1" class="tk">boolean_T</a> <a id="20c11" class="tk">isRateRunning</a>[3] = <span class="br">{</span> 0, 0, 0 <span class="br">}</span>;</td></tr>
<tr name="21" id="21">
<td>21</td><td></td></tr>
<tr name="22" id="22">
<td>22</td><td><a id="22c1" class="tk">boolean_T</a> <a id="22c11" class="tk">need2runFlags</a>[3] = <span class="br">{</span> 0, 0, 0 <span class="br">}</span>;</td></tr>
<tr name="23" id="23">
<td>23</td><td></td></tr>
<tr name="24" id="24">
<td>24</td><td><span class="kw">void</span> <a id="24c6" class="tk">rt_OneStep</a>(<span class="kw">void</span>)</td></tr>
<tr name="25" id="25">
<td>25</td><td><span class="br">{</span></td></tr>
<tr name="26" id="26">
<td>26</td><td>  <a id="26c3" class="tk">boolean_T</a> <a id="26c13" class="tk">eventFlags</a>[3];</td></tr>
<tr name="27" id="27">
<td>27</td><td></td></tr>
<tr name="28" id="28">
<td>28</td><td>  <span class="ct">/* Check base rate for overrun */</span></td></tr>
<tr name="29" id="29">
<td>29</td><td>  <span class="kw">if</span> (<a id="29c7" class="tk">isRateRunning</a>[0]++) <span class="br">{</span></td></tr>
<tr name="30" id="30">
<td>30</td><td>    <a id="30c5" class="tk">IsrOverrun</a> = 1;</td></tr>
<tr name="31" id="31">
<td>31</td><td>    <a id="31c5" class="tk">isRateRunning</a>[0]--;                <span class="ct">/* allow future iterations to succeed*/</span></td></tr>
<tr name="32" id="32">
<td>32</td><td>    <span class="kw">return</span>;</td></tr>
<tr name="33" id="33">
<td>33</td><td>  <span class="br">}</span></td></tr>
<tr name="34" id="34">
<td>34</td><td></td></tr>
<tr name="35" id="35">
<td>35</td><td>  <span class="ct">/*</span></td></tr>
<tr name="36" id="36">
<td>36</td><td><span class="ct">   * For a bare-board target (i.e., no operating system), the rates</span></td></tr>
<tr name="37" id="37">
<td>37</td><td><span class="ct">   * that execute this base step are buffered locally to allow for</span></td></tr>
<tr name="38" id="38">
<td>38</td><td><span class="ct">   * overlapping preemption.  The generated code includes function</span></td></tr>
<tr name="39" id="39">
<td>39</td><td><span class="ct">   * writeCodeInfoFcn() which sets the rates</span></td></tr>
<tr name="40" id="40">
<td>40</td><td><span class="ct">   * that need to run this time step.  The return values are 1 and 0</span></td></tr>
<tr name="41" id="41">
<td>41</td><td><span class="ct">   * for true and false, respectively.</span></td></tr>
<tr name="42" id="42">
<td>42</td><td><span class="ct">   */</span></td></tr>
<tr name="43" id="43">
<td>43</td><td>  <a id="43c3" class="tk">inverted_pendulum_SetEventsForThisBaseStep</a>(<a id="43c46" class="tk">eventFlags</a>);</td></tr>
<tr name="44" id="44">
<td>44</td><td>  <a id="44c3" class="tk">__enable_irq</a>();</td></tr>
<tr name="45" id="45">
<td>45</td><td>  <a id="45c3" class="tk">inverted_pendulum_step0</a>();</td></tr>
<tr name="46" id="46">
<td>46</td><td></td></tr>
<tr name="47" id="47">
<td>47</td><td>  <span class="ct">/* Get model outputs here */</span></td></tr>
<tr name="48" id="48">
<td>48</td><td>  <a id="48c3" class="tk">__disable_irq</a>();</td></tr>
<tr name="49" id="49">
<td>49</td><td>  <a id="49c3" class="tk">isRateRunning</a>[0]--;</td></tr>
<tr name="50" id="50">
<td>50</td><td>  <span class="kw">if</span> (<a id="50c7" class="tk">eventFlags</a>[2]) <span class="br">{</span></td></tr>
<tr name="51" id="51">
<td>51</td><td>    <span class="kw">if</span> (<a id="51c9" class="tk">need2runFlags</a>[2]++) <span class="br">{</span></td></tr>
<tr name="52" id="52">
<td>52</td><td>      <a id="52c7" class="tk">IsrOverrun</a> = 1;</td></tr>
<tr name="53" id="53">
<td>53</td><td>      <a id="53c7" class="tk">need2runFlags</a>[2]--;              <span class="ct">/* allow future iterations to succeed*/</span></td></tr>
<tr name="54" id="54">
<td>54</td><td>      <span class="kw">return</span>;</td></tr>
<tr name="55" id="55">
<td>55</td><td>    <span class="br">}</span></td></tr>
<tr name="56" id="56">
<td>56</td><td>  <span class="br">}</span></td></tr>
<tr name="57" id="57">
<td>57</td><td></td></tr>
<tr name="58" id="58">
<td>58</td><td>  <span class="kw">if</span> (<a id="58c7" class="tk">need2runFlags</a>[2]) <span class="br">{</span></td></tr>
<tr name="59" id="59">
<td>59</td><td>    <span class="kw">if</span> (<a id="59c9" class="tk">isRateRunning</a>[1]) <span class="br">{</span></td></tr>
<tr name="60" id="60">
<td>60</td><td>      <span class="ct">/* Yield to higher priority*/</span></td></tr>
<tr name="61" id="61">
<td>61</td><td>      <span class="kw">return</span>;</td></tr>
<tr name="62" id="62">
<td>62</td><td>    <span class="br">}</span></td></tr>
<tr name="63" id="63">
<td>63</td><td></td></tr>
<tr name="64" id="64">
<td>64</td><td>    <a id="64c5" class="tk">isRateRunning</a>[2]++;</td></tr>
<tr name="65" id="65">
<td>65</td><td>    <a id="65c5" class="tk">__enable_irq</a>();</td></tr>
<tr name="66" id="66">
<td>66</td><td></td></tr>
<tr name="67" id="67">
<td>67</td><td>    <span class="ct">/* Step the model for subrate "2" */</span></td></tr>
<tr name="68" id="68">
<td>68</td><td>    <span class="kw">switch</span> (2)</td></tr>
<tr name="69" id="69">
<td>69</td><td>    <span class="br">{</span></td></tr>
<tr name="70" id="70">
<td>70</td><td>     <span class="kw">case</span> 2 :</td></tr>
<tr name="71" id="71">
<td>71</td><td>      <a id="71c7" class="tk">inverted_pendulum_step2</a>();</td></tr>
<tr name="72" id="72">
<td>72</td><td></td></tr>
<tr name="73" id="73">
<td>73</td><td>      <span class="ct">/* Get model outputs here */</span></td></tr>
<tr name="74" id="74">
<td>74</td><td>      <span class="kw">break</span>;</td></tr>
<tr name="75" id="75">
<td>75</td><td></td></tr>
<tr name="76" id="76">
<td>76</td><td>     <span class="kw">default</span> :</td></tr>
<tr name="77" id="77">
<td>77</td><td>      <span class="kw">break</span>;</td></tr>
<tr name="78" id="78">
<td>78</td><td>    <span class="br">}</span></td></tr>
<tr name="79" id="79">
<td>79</td><td></td></tr>
<tr name="80" id="80">
<td>80</td><td>    <a id="80c5" class="tk">__disable_irq</a>();</td></tr>
<tr name="81" id="81">
<td>81</td><td>    <a id="81c5" class="tk">need2runFlags</a>[2]--;</td></tr>
<tr name="82" id="82">
<td>82</td><td>    <a id="82c5" class="tk">isRateRunning</a>[2]--;</td></tr>
<tr name="83" id="83">
<td>83</td><td>  <span class="br">}</span></td></tr>
<tr name="84" id="84">
<td>84</td><td><span class="br">}</span></td></tr>
<tr name="85" id="85">
<td>85</td><td></td></tr>
<tr name="86" id="86">
<td>86</td><td><span class="kw">int</span> <a id="86c5" class="tk">main</a>(<span class="kw">void</span>)</td></tr>
<tr name="87" id="87">
<td>87</td><td><span class="br">{</span></td></tr>
<tr name="88" id="88">
<td>88</td><td>  <span class="kw">volatile</span> <a id="88c12" class="tk">boolean_T</a> <a id="88c22" class="tk">runModel</a> = 1;</td></tr>
<tr name="89" id="89">
<td>89</td><td>  <span class="kw">float</span> <a id="89c9" class="tk">modelBaseRate</a> = 0.1;</td></tr>
<tr name="90" id="90">
<td>90</td><td>  <span class="kw">float</span> <a id="90c9" class="tk">systemClock</a> = 168;</td></tr>
<tr name="91" id="91">
<td>91</td><td></td></tr>
<tr name="92" id="92">
<td>92</td><td><span class="pp">#ifndef</span> <a id="92c9" class="tk">USE_RTX</a></td></tr>
<tr name="93" id="93">
<td>93</td><td></td></tr>
<tr name="94" id="94">
<td>94</td><td>  <a id="94c3" class="tk">__disable_irq</a>();</td></tr>
<tr name="95" id="95">
<td>95</td><td></td></tr>
<tr name="96" id="96">
<td>96</td><td><span class="pp">#endif</span></td></tr>
<tr name="97" id="97">
<td>97</td><td></td></tr>
<tr name="98" id="98">
<td>98</td><td>  ;</td></tr>
<tr name="99" id="99">
<td>99</td><td>  <a id="99c3" class="tk">stm32f4xx_init_board</a>();</td></tr>
<tr name="100" id="100">
<td>100</td><td>  <a id="100c3" class="tk">SystemCoreClockUpdate</a>();</td></tr>
<tr name="101" id="101">
<td>101</td><td>  <a id="101c3" class="tk">rtmSetErrorStatus</a>(<a id="101c21" class="tk">inverted_pendulum_M</a>, 0);</td></tr>
<tr name="102" id="102">
<td>102</td><td>  <a id="102c3" class="tk">inverted_pendulum_initialize</a>();</td></tr>
<tr name="103" id="103">
<td>103</td><td>  <a id="103c3" class="tk">ARMCM_SysTick_Config</a>(<a id="103c24" class="tk">modelBaseRate</a>);</td></tr>
<tr name="104" id="104">
<td>104</td><td>  <a id="104c3" class="tk">runModel</a> =</td></tr>
<tr name="105" id="105">
<td>105</td><td>    (<a id="105c6" class="tk">rtmGetErrorStatus</a>(<a id="105c24" class="tk">inverted_pendulum_M</a>) == (<a id="105c49" class="tk">NULL</a>)) &amp;&amp; !<a id="105c60" class="tk">rtmGetStopRequested</a></td></tr>
<tr name="106" id="106">
<td>106</td><td>    (<a id="106c6" class="tk">inverted_pendulum_M</a>);</td></tr>
<tr name="107" id="107">
<td>107</td><td>  <a id="107c3" class="tk">__enable_irq</a>();</td></tr>
<tr name="108" id="108">
<td>108</td><td>  <a id="108c3" class="tk">__enable_irq</a>();</td></tr>
<tr name="109" id="109">
<td>109</td><td>  <span class="kw">while</span> (<a id="109c10" class="tk">runModel</a>) <span class="br">{</span></td></tr>
<tr name="110" id="110">
<td>110</td><td>    <a id="110c5" class="tk">runModel</a> =</td></tr>
<tr name="111" id="111">
<td>111</td><td>      (<a id="111c8" class="tk">rtmGetErrorStatus</a>(<a id="111c26" class="tk">inverted_pendulum_M</a>) == (<a id="111c51" class="tk">NULL</a>)) &amp;&amp; !<a id="111c62" class="tk">rtmGetStopRequested</a></td></tr>
<tr name="112" id="112">
<td>112</td><td>      (<a id="112c8" class="tk">inverted_pendulum_M</a>);</td></tr>
<tr name="113" id="113">
<td>113</td><td>  <span class="br">}</span></td></tr>
<tr name="114" id="114">
<td>114</td><td></td></tr>
<tr name="115" id="115">
<td>115</td><td>  <span class="ct">/* Disable rt_OneStep() here */</span></td></tr>
<tr name="116" id="116">
<td>116</td><td></td></tr>
<tr name="117" id="117">
<td>117</td><td>  <span class="ct">/* Terminate model */</span></td></tr>
<tr name="118" id="118">
<td>118</td><td>  <a id="118c3" class="tk">inverted_pendulum_terminate</a>();</td></tr>
<tr name="119" id="119">
<td>119</td><td>  <a id="119c3" class="tk">__disable_irq</a>();</td></tr>
<tr name="120" id="120">
<td>120</td><td>  <span class="kw">return</span> 0;</td></tr>
<tr name="121" id="121">
<td>121</td><td><span class="br">}</span></td></tr>
<tr name="122" id="122">
<td>122</td><td></td></tr>
<tr name="123" id="123">
<td>123</td><td><span class="ct">/*</span></td></tr>
<tr name="124" id="124">
<td>124</td><td><span class="ct"> * File trailer for generated code.</span></td></tr>
<tr name="125" id="125">
<td>125</td><td><span class="ct"> *</span></td></tr>
<tr name="126" id="126">
<td>126</td><td><span class="ct"> * [EOF]</span></td></tr>
<tr name="127" id="127">
<td>127</td><td><span class="ct"> */</span></td></tr>
<tr name="128" id="128">
<td>128</td><td></td></tr>
</table>
</pre>
</body>
</html>
âPNG
<!DOCTYPE html>
<html>
<head>
 <link rel="stylesheet" type="text/css" href="rtwreport.css" />    
 <link rel="stylesheet" type="text/css" href="css/coder_app.css" />    
 <style type="text/css">
   div#popup_window {
       position: relative;
       background-color: ghostwhite;
       border-radius: 0px;
       -moz-box-shadow: none;
       -webkit-box-shadow: none;
       box-shadow: none;
   }
   div#popup_window a {
       text-decoration: underline;
       color: blue;
   }
   div#token_usage_nav {
       border-bottom: none;
   }
 </style>
</head>
<body class="inspect_body" onresize="top.resize_Inspect_frame();">
<table width="100%">
  <col style="width: 95%;"><col style="width: 5%">
  <tr><td><div id="popup_window"></div></td>
    <td align="right"><div><a onclick="top.closeInspectWindow();" class="closeButton">x</a></div></td>
  </tr>
</table></body></html>

<!-- LocalWords:  ghostwhite
-->
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="./js/coder_app.js"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="./rtwreport_utils.js"></script>
<script type="text/javascript" src="./rtwannotate.js"></script>
<link rel="stylesheet" type="text/css" href="./css/coder_app.css"/>
</head>
<body onload="srcFileOnload();">
<pre id="code">
<table class="code" id="codeTbl">
<tr name="1" id="1">
<td>1</td><td><span class="ct">/*</span></td></tr>
<tr name="2" id="2">
<td>2</td><td><span class="ct"> * File: inverted_pendulum.c</span></td></tr>
<tr name="3" id="3">
<td>3</td><td><span class="ct"> *</span></td></tr>
<tr name="4" id="4">
<td>4</td><td><span class="ct"> * Code generated for Simulink model 'inverted_pendulum'.</span></td></tr>
<tr name="5" id="5">
<td>5</td><td><span class="ct"> *</span></td></tr>
<tr name="6" id="6">
<td>6</td><td><span class="ct"> * Model version                  : 1.48</span></td></tr>
<tr name="7" id="7">
<td>7</td><td><span class="ct"> * Simulink Coder version         : 8.8 (R2015a) 09-Feb-2015</span></td></tr>
<tr name="8" id="8">
<td>8</td><td><span class="ct"> * C/C++ source code generated on : Thu Jan 28 21:02:07 2016</span></td></tr>
<tr name="9" id="9">
<td>9</td><td><span class="ct"> *</span></td></tr>
<tr name="10" id="10">
<td>10</td><td><span class="ct"> * Target selection: ert.tlc</span></td></tr>
<tr name="11" id="11">
<td>11</td><td><span class="ct"> * Embedded hardware selection: ARM Compatible-&gt;ARM Cortex</span></td></tr>
<tr name="12" id="12">
<td>12</td><td><span class="ct"> * Code generation objectives: Unspecified</span></td></tr>
<tr name="13" id="13">
<td>13</td><td><span class="ct"> * Validation result: Not run</span></td></tr>
<tr name="14" id="14">
<td>14</td><td><span class="ct"> */</span></td></tr>
<tr name="15" id="15">
<td>15</td><td></td></tr>
<tr name="16" id="16">
<td>16</td><td><span class="pp">#include "inverted_pendulum.h"</span></td></tr>
<tr name="17" id="17">
<td>17</td><td></td></tr>
<tr name="18" id="18">
<td>18</td><td><span class="ct">/* Private macros used by the generated code to access rtModel */</span></td></tr>
<tr name="19" id="19">
<td>19</td><td><span class="pp">#ifndef</span> <a id="19c9" class="tk">rtmIsMajorTimeStep</a></td></tr>
<tr name="20" id="20">
<td>20</td><td><span class="pp"># define</span> <a id="20c10" class="tk">rtmIsMajorTimeStep</a>(<a id="20c29" class="tk">rtm</a>)       (((<a id="20c43" class="tk">rtm</a>)-&gt;<a id="20c49" class="tk">Timing</a>.<a id="20c56" class="tk">simTimeStep</a>) == <a id="20c72" class="tk">MAJOR_TIME_STEP</a>)</td></tr>
<tr name="21" id="21">
<td>21</td><td><span class="pp">#endif</span></td></tr>
<tr name="22" id="22">
<td>22</td><td></td></tr>
<tr name="23" id="23">
<td>23</td><td><span class="pp">#ifndef</span> <a id="23c9" class="tk">rtmIsMinorTimeStep</a></td></tr>
<tr name="24" id="24">
<td>24</td><td><span class="pp"># define</span> <a id="24c10" class="tk">rtmIsMinorTimeStep</a>(<a id="24c29" class="tk">rtm</a>)       (((<a id="24c43" class="tk">rtm</a>)-&gt;<a id="24c49" class="tk">Timing</a>.<a id="24c56" class="tk">simTimeStep</a>) == <a id="24c72" class="tk">MINOR_TIME_STEP</a>)</td></tr>
<tr name="25" id="25">
<td>25</td><td><span class="pp">#endif</span></td></tr>
<tr name="26" id="26">
<td>26</td><td></td></tr>
<tr name="27" id="27">
<td>27</td><td><span class="pp">#ifndef</span> <a id="27c9" class="tk">rtmGetTPtr</a></td></tr>
<tr name="28" id="28">
<td>28</td><td><span class="pp"># define</span> <a id="28c10" class="tk">rtmGetTPtr</a>(<a id="28c21" class="tk">rtm</a>)               ((<a id="28c42" class="tk">rtm</a>)-&gt;<a id="28c48" class="tk">Timing</a>.<a id="28c55" class="tk">t</a>)</td></tr>
<tr name="29" id="29">
<td>29</td><td><span class="pp">#endif</span></td></tr>
<tr name="30" id="30">
<td>30</td><td></td></tr>
<tr name="31" id="31">
<td>31</td><td><span class="pp">#ifndef</span> <a id="31c9" class="tk">rtmSetTPtr</a></td></tr>
<tr name="32" id="32">
<td>32</td><td><span class="pp"># define</span> <a id="32c10" class="tk">rtmSetTPtr</a>(<a id="32c21" class="tk">rtm</a>, <a id="32c26" class="tk">val</a>)          ((<a id="32c42" class="tk">rtm</a>)-&gt;<a id="32c48" class="tk">Timing</a>.<a id="32c55" class="tk">t</a> = (<a id="32c60" class="tk">val</a>))</td></tr>
<tr name="33" id="33">
<td>33</td><td><span class="pp">#endif</span></td></tr>
<tr name="34" id="34">
<td>34</td><td></td></tr>
<tr name="35" id="35">
<td>35</td><td><span class="ct">/* Block parameters (auto storage) */</span></td></tr>
<tr name="36" id="36">
<td>36</td><td><a id="36c1" class="tk">P_inverted_pendulum_T</a> <a id="36c23" class="tk">inverted_pendulum_P</a> = <span class="br">{</span></td></tr>
<tr name="37" id="37">
<td>37</td><td>  <span class="ct">/*  Computed Parameter: AngleController_A</span></td></tr>
<tr name="38" id="38">
<td>38</td><td><span class="ct">   * Referenced by: '<a class="ct blk" blk_line="38">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="39" id="39">
<td>39</td><td><span class="ct">   */</span></td></tr>
<tr name="40" id="40">
<td>40</td><td>  <span class="br">{</span> 15.4898634340509, 26.4858841705556, -3.0704117154182, -136.900629246653 <span class="br">}</span>,</td></tr>
<tr name="41" id="41">
<td>41</td><td></td></tr>
<tr name="42" id="42">
<td>42</td><td>  <span class="ct">/*  Computed Parameter: AngleController_B</span></td></tr>
<tr name="43" id="43">
<td>43</td><td><span class="ct">   * Referenced by: '<a class="ct blk" blk_line="43">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="44" id="44">
<td>44</td><td><span class="ct">   */</span></td></tr>
<tr name="45" id="45">
<td>45</td><td>  <span class="br">{</span> 124.240427443766, -262.107188254329 <span class="br">}</span>,</td></tr>
<tr name="46" id="46">
<td>46</td><td></td></tr>
<tr name="47" id="47">
<td>47</td><td>  <span class="ct">/*  Computed Parameter: AngleController_C</span></td></tr>
<tr name="48" id="48">
<td>48</td><td><span class="ct">   * Referenced by: '<a class="ct blk" blk_line="48">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="49" id="49">
<td>49</td><td><span class="ct">   */</span></td></tr>
<tr name="50" id="50">
<td>50</td><td>  <span class="br">{</span> -88.8990856237622, -699.794525555653 <span class="br">}</span>,</td></tr>
<tr name="51" id="51">
<td>51</td><td>  -1656.81755505379,                   <span class="ct">/* Computed Parameter: AngleController_D</span></td></tr>
<tr name="52" id="52">
<td>52</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="52">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="53" id="53">
<td>53</td><td><span class="ct">                                        */</span></td></tr>
<tr name="54" id="54">
<td>54</td><td>  0.0                                  <span class="ct">/* Expression: 0</span></td></tr>
<tr name="55" id="55">
<td>55</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="55">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="56" id="56">
<td>56</td><td><span class="ct">                                        */</span></td></tr>
<tr name="57" id="57">
<td>57</td><td><span class="br">}</span>;</td></tr>
<tr name="58" id="58">
<td>58</td><td></td></tr>
<tr name="59" id="59">
<td>59</td><td><span class="ct">/* Block signals (auto storage) */</span></td></tr>
<tr name="60" id="60">
<td>60</td><td><a id="60c1" class="tk">B_inverted_pendulum_T</a> <a id="60c23" class="tk">inverted_pendulum_B</a>;</td></tr>
<tr name="61" id="61">
<td>61</td><td></td></tr>
<tr name="62" id="62">
<td>62</td><td><span class="ct">/* Continuous states */</span></td></tr>
<tr name="63" id="63">
<td>63</td><td><a id="63c1" class="tk">X_inverted_pendulum_T</a> <a id="63c23" class="tk">inverted_pendulum_X</a>;</td></tr>
<tr name="64" id="64">
<td>64</td><td></td></tr>
<tr name="65" id="65">
<td>65</td><td><span class="ct">/* External outputs (root outports fed by signals with auto storage) */</span></td></tr>
<tr name="66" id="66">
<td>66</td><td><a id="66c1" class="tk">ExtY_inverted_pendulum_T</a> <a id="66c26" class="tk">inverted_pendulum_Y</a>;</td></tr>
<tr name="67" id="67">
<td>67</td><td></td></tr>
<tr name="68" id="68">
<td>68</td><td><span class="ct">/* Real-time model */</span></td></tr>
<tr name="69" id="69">
<td>69</td><td><a id="69c1" class="tk">RT_MODEL_inverted_pendulum_T</a> <a id="69c30" class="tk">inverted_pendulum_M_</a>;</td></tr>
<tr name="70" id="70">
<td>70</td><td><a id="70c1" class="tk">RT_MODEL_inverted_pendulum_T</a> *<span class="kw">const</span> <a id="70c37" class="tk">inverted_pendulum_M</a> = &amp;<a id="70c60" class="tk">inverted_pendulum_M_</a>;</td></tr>
<tr name="71" id="71">
<td>71</td><td></td></tr>
<tr name="72" id="72">
<td>72</td><td><span class="ct">/* private model entry point functions */</span></td></tr>
<tr name="73" id="73">
<td>73</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="73c13" class="tk">inverted_pendulum_derivatives</a>(<span class="kw">void</span>);</td></tr>
<tr name="74" id="74">
<td>74</td><td><span class="kw">static</span> <span class="kw">void</span> <a id="74c13" class="tk">rate_monotonic_scheduler</a>(<span class="kw">void</span>);</td></tr>
<tr name="75" id="75">
<td>75</td><td></td></tr>
<tr name="76" id="76">
<td>76</td><td><span class="ct">/*</span></td></tr>
<tr name="77" id="77">
<td>77</td><td><span class="ct"> * Set which subrates need to run this base step (base rate always runs).</span></td></tr>
<tr name="78" id="78">
<td>78</td><td><span class="ct"> * This function must be called prior to calling the model step function</span></td></tr>
<tr name="79" id="79">
<td>79</td><td><span class="ct"> * in order to "remember" which rates need to run this base step.  The</span></td></tr>
<tr name="80" id="80">
<td>80</td><td><span class="ct"> * buffering of events allows for overlapping preemption.</span></td></tr>
<tr name="81" id="81">
<td>81</td><td><span class="ct"> */</span></td></tr>
<tr name="82" id="82">
<td>82</td><td><span class="kw">void</span> <a id="82c6" class="tk">inverted_pendulum_SetEventsForThisBaseStep</a>(<a id="82c49" class="tk">boolean_T</a> *<a id="82c60" class="tk">eventFlags</a>)</td></tr>
<tr name="83" id="83">
<td>83</td><td><span class="br">{</span></td></tr>
<tr name="84" id="84">
<td>84</td><td>  <span class="ct">/* Task runs when its counter is zero, computed via rtmStepTask macro */</span></td></tr>
<tr name="85" id="85">
<td>85</td><td>  <a id="85c3" class="tk">eventFlags</a>[2] = ((<a id="85c21" class="tk">boolean_T</a>)<a id="85c31" class="tk">rtmStepTask</a>(<a id="85c43" class="tk">inverted_pendulum_M</a>, 2));</td></tr>
<tr name="86" id="86">
<td>86</td><td><span class="br">}</span></td></tr>
<tr name="87" id="87">
<td>87</td><td></td></tr>
<tr name="88" id="88">
<td>88</td><td><span class="ct">/*</span></td></tr>
<tr name="89" id="89">
<td>89</td><td><span class="ct"> *   This function updates active task flag for each subrate</span></td></tr>
<tr name="90" id="90">
<td>90</td><td><span class="ct"> * and rate transition flags for tasks that exchange data.</span></td></tr>
<tr name="91" id="91">
<td>91</td><td><span class="ct"> * The function assumes rate-monotonic multitasking scheduler.</span></td></tr>
<tr name="92" id="92">
<td>92</td><td><span class="ct"> * The function must be called at model base rate so that</span></td></tr>
<tr name="93" id="93">
<td>93</td><td><span class="ct"> * the generated code self-manages all its subrates and rate</span></td></tr>
<tr name="94" id="94">
<td>94</td><td><span class="ct"> * transition flags.</span></td></tr>
<tr name="95" id="95">
<td>95</td><td><span class="ct"> */</span></td></tr>
<tr name="96" id="96">
<td>96</td><td><span class="kw">static</span> <span class="kw">void</span> <a id="96c13" class="tk">rate_monotonic_scheduler</a>(<span class="kw">void</span>)</td></tr>
<tr name="97" id="97">
<td>97</td><td><span class="br">{</span></td></tr>
<tr name="98" id="98">
<td>98</td><td>  <span class="ct">/* To ensure a deterministic data transfer between two rates,</span></td></tr>
<tr name="99" id="99">
<td>99</td><td><span class="ct">   * data is transferred at the priority of a fast task and the frequency</span></td></tr>
<tr name="100" id="100">
<td>100</td><td><span class="ct">   * of the slow task.  The following flags indicate when the data transfer</span></td></tr>
<tr name="101" id="101">
<td>101</td><td><span class="ct">   * happens.  That is, a rate interaction flag is set true when both rates</span></td></tr>
<tr name="102" id="102">
<td>102</td><td><span class="ct">   * will run, and false otherwise.</span></td></tr>
<tr name="103" id="103">
<td>103</td><td><span class="ct">   */</span></td></tr>
<tr name="104" id="104">
<td>104</td><td></td></tr>
<tr name="105" id="105">
<td>105</td><td>  <span class="ct">/* tid 0 shares data with slower tid rate: 2 */</span></td></tr>
<tr name="106" id="106">
<td>106</td><td>  <a id="106c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="106c24" class="tk">Timing</a>.<a id="106c31" class="tk">RateInteraction</a>.<a id="106c47" class="tk">TID0_2</a> =</td></tr>
<tr name="107" id="107">
<td>107</td><td>    (<a id="107c6" class="tk">inverted_pendulum_M</a>-&gt;<a id="107c27" class="tk">Timing</a>.<a id="107c34" class="tk">TaskCounters</a>.<a id="107c47" class="tk">TID</a>[2] == 0);</td></tr>
<tr name="108" id="108">
<td>108</td><td></td></tr>
<tr name="109" id="109">
<td>109</td><td>  <span class="ct">/* Compute which subrates run during the next base time step.  Subrates</span></td></tr>
<tr name="110" id="110">
<td>110</td><td><span class="ct">   * are an integer multiple of the base rate counter.  Therefore, the subtask</span></td></tr>
<tr name="111" id="111">
<td>111</td><td><span class="ct">   * counter is reset when it reaches its limit (zero means run).</span></td></tr>
<tr name="112" id="112">
<td>112</td><td><span class="ct">   */</span></td></tr>
<tr name="113" id="113">
<td>113</td><td>  (<a id="113c4" class="tk">inverted_pendulum_M</a>-&gt;<a id="113c25" class="tk">Timing</a>.<a id="113c32" class="tk">TaskCounters</a>.<a id="113c45" class="tk">TID</a>[2])++;</td></tr>
<tr name="114" id="114">
<td>114</td><td>  <span class="kw">if</span> ((<a id="114c8" class="tk">inverted_pendulum_M</a>-&gt;<a id="114c29" class="tk">Timing</a>.<a id="114c36" class="tk">TaskCounters</a>.<a id="114c49" class="tk">TID</a>[2]) &gt; 9) <span class="br">{</span><span class="ct">/* Sample time: [1.0s, 0.0s] */</span></td></tr>
<tr name="115" id="115">
<td>115</td><td>    <a id="115c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="115c26" class="tk">Timing</a>.<a id="115c33" class="tk">TaskCounters</a>.<a id="115c46" class="tk">TID</a>[2] = 0;</td></tr>
<tr name="116" id="116">
<td>116</td><td>  <span class="br">}</span></td></tr>
<tr name="117" id="117">
<td>117</td><td><span class="br">}</span></td></tr>
<tr name="118" id="118">
<td>118</td><td></td></tr>
<tr name="119" id="119">
<td>119</td><td><span class="ct">/*</span></td></tr>
<tr name="120" id="120">
<td>120</td><td><span class="ct"> * This function updates continuous states using the ODE3 fixed-step</span></td></tr>
<tr name="121" id="121">
<td>121</td><td><span class="ct"> * solver algorithm</span></td></tr>
<tr name="122" id="122">
<td>122</td><td><span class="ct"> */</span></td></tr>
<tr name="123" id="123">
<td>123</td><td><span class="kw">static</span> <span class="kw">void</span> <a id="123c13" class="tk">rt_ertODEUpdateContinuousStates</a>(<a id="123c45" class="tk">RTWSolverInfo</a> *<a id="123c60" class="tk">si</a> )</td></tr>
<tr name="124" id="124">
<td>124</td><td><span class="br">{</span></td></tr>
<tr name="125" id="125">
<td>125</td><td>  <span class="ct">/* Solver Matrices */</span></td></tr>
<tr name="126" id="126">
<td>126</td><td>  <span class="kw">static</span> <span class="kw">const</span> <a id="126c16" class="tk">real_T</a> <a id="126c23" class="tk">rt_ODE3_A</a>[3] = <span class="br">{</span></td></tr>
<tr name="127" id="127">
<td>127</td><td>    1.0/2.0, 3.0/4.0, 1.0</td></tr>
<tr name="128" id="128">
<td>128</td><td>  <span class="br">}</span>;</td></tr>
<tr name="129" id="129">
<td>129</td><td></td></tr>
<tr name="130" id="130">
<td>130</td><td>  <span class="kw">static</span> <span class="kw">const</span> <a id="130c16" class="tk">real_T</a> <a id="130c23" class="tk">rt_ODE3_B</a>[3][3] = <span class="br">{</span></td></tr>
<tr name="131" id="131">
<td>131</td><td>    <span class="br">{</span> 1.0/2.0, 0.0, 0.0 <span class="br">}</span>,</td></tr>
<tr name="132" id="132">
<td>132</td><td></td></tr>
<tr name="133" id="133">
<td>133</td><td>    <span class="br">{</span> 0.0, 3.0/4.0, 0.0 <span class="br">}</span>,</td></tr>
<tr name="134" id="134">
<td>134</td><td></td></tr>
<tr name="135" id="135">
<td>135</td><td>    <span class="br">{</span> 2.0/9.0, 1.0/3.0, 4.0/9.0 <span class="br">}</span></td></tr>
<tr name="136" id="136">
<td>136</td><td>  <span class="br">}</span>;</td></tr>
<tr name="137" id="137">
<td>137</td><td></td></tr>
<tr name="138" id="138">
<td>138</td><td>  <a id="138c3" class="tk">time_T</a> <a id="138c10" class="tk">t</a> = <a id="138c14" class="tk">rtsiGetT</a>(<a id="138c23" class="tk">si</a>);</td></tr>
<tr name="139" id="139">
<td>139</td><td>  <a id="139c3" class="tk">time_T</a> <a id="139c10" class="tk">tnew</a> = <a id="139c17" class="tk">rtsiGetSolverStopTime</a>(<a id="139c39" class="tk">si</a>);</td></tr>
<tr name="140" id="140">
<td>140</td><td>  <a id="140c3" class="tk">time_T</a> <a id="140c10" class="tk">h</a> = <a id="140c14" class="tk">rtsiGetStepSize</a>(<a id="140c30" class="tk">si</a>);</td></tr>
<tr name="141" id="141">
<td>141</td><td>  <a id="141c3" class="tk">real_T</a> *<a id="141c11" class="tk">x</a> = <a id="141c15" class="tk">rtsiGetContStates</a>(<a id="141c33" class="tk">si</a>);</td></tr>
<tr name="142" id="142">
<td>142</td><td>  <a id="142c3" class="tk">ODE3_IntgData</a> *<a id="142c18" class="tk">id</a> = (<a id="142c24" class="tk">ODE3_IntgData</a> *)<a id="142c40" class="tk">rtsiGetSolverData</a>(<a id="142c58" class="tk">si</a>);</td></tr>
<tr name="143" id="143">
<td>143</td><td>  <a id="143c3" class="tk">real_T</a> *<a id="143c11" class="tk">y</a> = <a id="143c15" class="tk">id</a>-&gt;<a id="143c19" class="tk">y</a>;</td></tr>
<tr name="144" id="144">
<td>144</td><td>  <a id="144c3" class="tk">real_T</a> *<a id="144c11" class="tk">f0</a> = <a id="144c16" class="tk">id</a>-&gt;<a id="144c20" class="tk">f</a>[0];</td></tr>
<tr name="145" id="145">
<td>145</td><td>  <a id="145c3" class="tk">real_T</a> *<a id="145c11" class="tk">f1</a> = <a id="145c16" class="tk">id</a>-&gt;<a id="145c20" class="tk">f</a>[1];</td></tr>
<tr name="146" id="146">
<td>146</td><td>  <a id="146c3" class="tk">real_T</a> *<a id="146c11" class="tk">f2</a> = <a id="146c16" class="tk">id</a>-&gt;<a id="146c20" class="tk">f</a>[2];</td></tr>
<tr name="147" id="147">
<td>147</td><td>  <a id="147c3" class="tk">real_T</a> <a id="147c10" class="tk">hB</a>[3];</td></tr>
<tr name="148" id="148">
<td>148</td><td>  <a id="148c3" class="tk">int_T</a> <a id="148c9" class="tk">i</a>;</td></tr>
<tr name="149" id="149">
<td>149</td><td>  <a id="149c3" class="tk">int_T</a> <a id="149c9" class="tk">nXc</a> = 2;</td></tr>
<tr name="150" id="150">
<td>150</td><td>  <a id="150c3" class="tk">rtsiSetSimTimeStep</a>(<a id="150c22" class="tk">si</a>,<a id="150c25" class="tk">MINOR_TIME_STEP</a>);</td></tr>
<tr name="151" id="151">
<td>151</td><td></td></tr>
<tr name="152" id="152">
<td>152</td><td>  <span class="ct">/* Save the state values at time t in y, we'll use x as ynew. */</span></td></tr>
<tr name="153" id="153">
<td>153</td><td>  (<span class="kw">void</span>) <a id="153c10" class="tk">memcpy</a>(<a id="153c17" class="tk">y</a>, <a id="153c20" class="tk">x</a>,</td></tr>
<tr name="154" id="154">
<td>154</td><td>                (<a id="154c18" class="tk">uint_T</a>)<a id="154c25" class="tk">nXc</a>*<span class="kw">sizeof</span>(<a id="154c36" class="tk">real_T</a>));</td></tr>
<tr name="155" id="155">
<td>155</td><td></td></tr>
<tr name="156" id="156">
<td>156</td><td>  <span class="ct">/* Assumes that rtsiSetT and ModelOutputs are up-to-date */</span></td></tr>
<tr name="157" id="157">
<td>157</td><td>  <span class="ct">/* f0 = f(t,y) */</span></td></tr>
<tr name="158" id="158">
<td>158</td><td>  <a id="158c3" class="tk">rtsiSetdX</a>(<a id="158c13" class="tk">si</a>, <a id="158c17" class="tk">f0</a>);</td></tr>
<tr name="159" id="159">
<td>159</td><td>  <a id="159c3" class="tk">inverted_pendulum_derivatives</a>();</td></tr>
<tr name="160" id="160">
<td>160</td><td></td></tr>
<tr name="161" id="161">
<td>161</td><td>  <span class="ct">/* f(:,2) = feval(odefile, t + hA(1), y + f*hB(:,1), args(:)(*)); */</span></td></tr>
<tr name="162" id="162">
<td>162</td><td>  <a id="162c3" class="tk">hB</a>[0] = <a id="162c11" class="tk">h</a> * <a id="162c15" class="tk">rt_ODE3_B</a>[0][0];</td></tr>
<tr name="163" id="163">
<td>163</td><td>  <span class="kw">for</span> (<a id="163c8" class="tk">i</a> = 0; <a id="163c15" class="tk">i</a> &lt; <a id="163c19" class="tk">nXc</a>; <a id="163c24" class="tk">i</a>++) <span class="br">{</span></td></tr>
<tr name="164" id="164">
<td>164</td><td>    <a id="164c5" class="tk">x</a>[<a id="164c7" class="tk">i</a>] = <a id="164c12" class="tk">y</a>[<a id="164c14" class="tk">i</a>] + (<a id="164c20" class="tk">f0</a>[<a id="164c23" class="tk">i</a>]*<a id="164c26" class="tk">hB</a>[0]);</td></tr>
<tr name="165" id="165">
<td>165</td><td>  <span class="br">}</span></td></tr>
<tr name="166" id="166">
<td>166</td><td></td></tr>
<tr name="167" id="167">
<td>167</td><td>  <a id="167c3" class="tk">rtsiSetT</a>(<a id="167c12" class="tk">si</a>, <a id="167c16" class="tk">t</a> + <a id="167c20" class="tk">h</a>*<a id="167c22" class="tk">rt_ODE3_A</a>[0]);</td></tr>
<tr name="168" id="168">
<td>168</td><td>  <a id="168c3" class="tk">rtsiSetdX</a>(<a id="168c13" class="tk">si</a>, <a id="168c17" class="tk">f1</a>);</td></tr>
<tr name="169" id="169">
<td>169</td><td>  <a id="169c3" class="tk">inverted_pendulum_step0</a>();</td></tr>
<tr name="170" id="170">
<td>170</td><td>  <a id="170c3" class="tk">inverted_pendulum_derivatives</a>();</td></tr>
<tr name="171" id="171">
<td>171</td><td></td></tr>
<tr name="172" id="172">
<td>172</td><td>  <span class="ct">/* f(:,3) = feval(odefile, t + hA(2), y + f*hB(:,2), args(:)(*)); */</span></td></tr>
<tr name="173" id="173">
<td>173</td><td>  <span class="kw">for</span> (<a id="173c8" class="tk">i</a> = 0; <a id="173c15" class="tk">i</a> &lt;= 1; <a id="173c23" class="tk">i</a>++) <span class="br">{</span></td></tr>
<tr name="174" id="174">
<td>174</td><td>    <a id="174c5" class="tk">hB</a>[<a id="174c8" class="tk">i</a>] = <a id="174c13" class="tk">h</a> * <a id="174c17" class="tk">rt_ODE3_B</a>[1][<a id="174c30" class="tk">i</a>];</td></tr>
<tr name="175" id="175">
<td>175</td><td>  <span class="br">}</span></td></tr>
<tr name="176" id="176">
<td>176</td><td></td></tr>
<tr name="177" id="177">
<td>177</td><td>  <span class="kw">for</span> (<a id="177c8" class="tk">i</a> = 0; <a id="177c15" class="tk">i</a> &lt; <a id="177c19" class="tk">nXc</a>; <a id="177c24" class="tk">i</a>++) <span class="br">{</span></td></tr>
<tr name="178" id="178">
<td>178</td><td>    <a id="178c5" class="tk">x</a>[<a id="178c7" class="tk">i</a>] = <a id="178c12" class="tk">y</a>[<a id="178c14" class="tk">i</a>] + (<a id="178c20" class="tk">f0</a>[<a id="178c23" class="tk">i</a>]*<a id="178c26" class="tk">hB</a>[0] + <a id="178c34" class="tk">f1</a>[<a id="178c37" class="tk">i</a>]*<a id="178c40" class="tk">hB</a>[1]);</td></tr>
<tr name="179" id="179">
<td>179</td><td>  <span class="br">}</span></td></tr>
<tr name="180" id="180">
<td>180</td><td></td></tr>
<tr name="181" id="181">
<td>181</td><td>  <a id="181c3" class="tk">rtsiSetT</a>(<a id="181c12" class="tk">si</a>, <a id="181c16" class="tk">t</a> + <a id="181c20" class="tk">h</a>*<a id="181c22" class="tk">rt_ODE3_A</a>[1]);</td></tr>
<tr name="182" id="182">
<td>182</td><td>  <a id="182c3" class="tk">rtsiSetdX</a>(<a id="182c13" class="tk">si</a>, <a id="182c17" class="tk">f2</a>);</td></tr>
<tr name="183" id="183">
<td>183</td><td>  <a id="183c3" class="tk">inverted_pendulum_step0</a>();</td></tr>
<tr name="184" id="184">
<td>184</td><td>  <a id="184c3" class="tk">inverted_pendulum_derivatives</a>();</td></tr>
<tr name="185" id="185">
<td>185</td><td></td></tr>
<tr name="186" id="186">
<td>186</td><td>  <span class="ct">/* tnew = t + hA(3);</span></td></tr>
<tr name="187" id="187">
<td>187</td><td><span class="ct">     ynew = y + f*hB(:,3); */</span></td></tr>
<tr name="188" id="188">
<td>188</td><td>  <span class="kw">for</span> (<a id="188c8" class="tk">i</a> = 0; <a id="188c15" class="tk">i</a> &lt;= 2; <a id="188c23" class="tk">i</a>++) <span class="br">{</span></td></tr>
<tr name="189" id="189">
<td>189</td><td>    <a id="189c5" class="tk">hB</a>[<a id="189c8" class="tk">i</a>] = <a id="189c13" class="tk">h</a> * <a id="189c17" class="tk">rt_ODE3_B</a>[2][<a id="189c30" class="tk">i</a>];</td></tr>
<tr name="190" id="190">
<td>190</td><td>  <span class="br">}</span></td></tr>
<tr name="191" id="191">
<td>191</td><td></td></tr>
<tr name="192" id="192">
<td>192</td><td>  <span class="kw">for</span> (<a id="192c8" class="tk">i</a> = 0; <a id="192c15" class="tk">i</a> &lt; <a id="192c19" class="tk">nXc</a>; <a id="192c24" class="tk">i</a>++) <span class="br">{</span></td></tr>
<tr name="193" id="193">
<td>193</td><td>    <a id="193c5" class="tk">x</a>[<a id="193c7" class="tk">i</a>] = <a id="193c12" class="tk">y</a>[<a id="193c14" class="tk">i</a>] + (<a id="193c20" class="tk">f0</a>[<a id="193c23" class="tk">i</a>]*<a id="193c26" class="tk">hB</a>[0] + <a id="193c34" class="tk">f1</a>[<a id="193c37" class="tk">i</a>]*<a id="193c40" class="tk">hB</a>[1] + <a id="193c48" class="tk">f2</a>[<a id="193c51" class="tk">i</a>]*<a id="193c54" class="tk">hB</a>[2]);</td></tr>
<tr name="194" id="194">
<td>194</td><td>  <span class="br">}</span></td></tr>
<tr name="195" id="195">
<td>195</td><td></td></tr>
<tr name="196" id="196">
<td>196</td><td>  <a id="196c3" class="tk">rtsiSetT</a>(<a id="196c12" class="tk">si</a>, <a id="196c16" class="tk">tnew</a>);</td></tr>
<tr name="197" id="197">
<td>197</td><td>  <a id="197c3" class="tk">rtsiSetSimTimeStep</a>(<a id="197c22" class="tk">si</a>,<a id="197c25" class="tk">MAJOR_TIME_STEP</a>);</td></tr>
<tr name="198" id="198">
<td>198</td><td><span class="br">}</span></td></tr>
<tr name="199" id="199">
<td>199</td><td></td></tr>
<tr name="200" id="200">
<td>200</td><td><span class="ct">/* Model step function for TID0 */</span></td></tr>
<tr name="201" id="201">
<td>201</td><td><span class="kw">void</span> <a id="201c6" class="tk">inverted_pendulum_step0</a>(<span class="kw">void</span>)     <span class="ct">/* Sample time: [0.0s, 0.0s] */</span></td></tr>
<tr name="202" id="202">
<td>202</td><td><span class="br">{</span></td></tr>
<tr name="203" id="203">
<td>203</td><td>  <span class="kw">if</span> (<a id="203c7" class="tk">rtmIsMajorTimeStep</a>(<a id="203c26" class="tk">inverted_pendulum_M</a>)) <span class="br">{</span></td></tr>
<tr name="204" id="204">
<td>204</td><td>    <span class="ct">/* set solver stop time */</span></td></tr>
<tr name="205" id="205">
<td>205</td><td>    <a id="205c5" class="tk">rtsiSetSolverStopTime</a>(&amp;<a id="205c28" class="tk">inverted_pendulum_M</a>-&gt;<a id="205c49" class="tk">solverInfo</a>,</td></tr>
<tr name="206" id="206">
<td>206</td><td>                          ((<a id="206c29" class="tk">inverted_pendulum_M</a>-&gt;<a id="206c50" class="tk">Timing</a>.<a id="206c57" class="tk">clockTick0</a>+1)*</td></tr>
<tr name="207" id="207">
<td>207</td><td>      <a id="207c7" class="tk">inverted_pendulum_M</a>-&gt;<a id="207c28" class="tk">Timing</a>.<a id="207c35" class="tk">stepSize0</a>));</td></tr>
<tr name="208" id="208">
<td>208</td><td></td></tr>
<tr name="209" id="209">
<td>209</td><td>    <span class="br">{</span>                                  <span class="ct">/* Sample time: [0.0s, 0.0s] */</span></td></tr>
<tr name="210" id="210">
<td>210</td><td>      <a id="210c7" class="tk">rate_monotonic_scheduler</a>();</td></tr>
<tr name="211" id="211">
<td>211</td><td>    <span class="br">}</span></td></tr>
<tr name="212" id="212">
<td>212</td><td>  <span class="br">}</span>                                    <span class="ct">/* end MajorTimeStep */</span></td></tr>
<tr name="213" id="213">
<td>213</td><td></td></tr>
<tr name="214" id="214">
<td>214</td><td>  <span class="ct">/* Update absolute time of base rate at minor time step */</span></td></tr>
<tr name="215" id="215">
<td>215</td><td>  <span class="kw">if</span> (<a id="215c7" class="tk">rtmIsMinorTimeStep</a>(<a id="215c26" class="tk">inverted_pendulum_M</a>)) <span class="br">{</span></td></tr>
<tr name="216" id="216">
<td>216</td><td>    <a id="216c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="216c26" class="tk">Timing</a>.<a id="216c33" class="tk">t</a>[0] = <a id="216c40" class="tk">rtsiGetT</a>(&amp;<a id="216c50" class="tk">inverted_pendulum_M</a>-&gt;<a id="216c71" class="tk">solverInfo</a>);</td></tr>
<tr name="217" id="217">
<td>217</td><td>  <span class="br">}</span></td></tr>
<tr name="218" id="218">
<td>218</td><td></td></tr>
<tr name="219" id="219">
<td>219</td><td>  <span class="ct">/* StateSpace: '<a class="ct blk" blk_line="219">&lt;Root&gt;/Angle Controller</a>' incorporates:</span></td></tr>
<tr name="220" id="220">
<td>220</td><td><span class="ct">   *  Inport: '<a class="ct blk" blk_line="220">&lt;Root&gt;/angle</a>'</span></td></tr>
<tr name="221" id="221">
<td>221</td><td><span class="ct">   */</span></td></tr>
<tr name="222" id="222">
<td>222</td><td>  <a id="222c3" class="tk">F</a> = 0.0;</td></tr>
<tr name="223" id="223">
<td>223</td><td>  <a id="223c3" class="tk">F</a> += <a id="223c8" class="tk">inverted_pendulum_P</a>.<a id="223c28" class="tk">AngleController_C</a>[0] *</td></tr>
<tr name="224" id="224">
<td>224</td><td>    <a id="224c5" class="tk">inverted_pendulum_X</a>.<a id="224c25" class="tk">AngleController_CSTATE</a>[0];</td></tr>
<tr name="225" id="225">
<td>225</td><td>  <a id="225c3" class="tk">F</a> += <a id="225c8" class="tk">inverted_pendulum_P</a>.<a id="225c28" class="tk">AngleController_C</a>[1] *</td></tr>
<tr name="226" id="226">
<td>226</td><td>    <a id="226c5" class="tk">inverted_pendulum_X</a>.<a id="226c25" class="tk">AngleController_CSTATE</a>[1];</td></tr>
<tr name="227" id="227">
<td>227</td><td>  <a id="227c3" class="tk">F</a> += <a id="227c8" class="tk">inverted_pendulum_P</a>.<a id="227c28" class="tk">AngleController_D</a> * <a id="227c48" class="tk">Theta</a>;</td></tr>
<tr name="228" id="228">
<td>228</td><td></td></tr>
<tr name="229" id="229">
<td>229</td><td>  <span class="ct">/* ZeroOrderHold: '<a class="ct blk" blk_line="229">&lt;Root&gt;/Zero-Order Hold</a>' */</span></td></tr>
<tr name="230" id="230">
<td>230</td><td>  <span class="kw">if</span> (<a id="230c7" class="tk">rtmIsMajorTimeStep</a>(<a id="230c26" class="tk">inverted_pendulum_M</a>) &amp;&amp;</td></tr>
<tr name="231" id="231">
<td>231</td><td>      <a id="231c7" class="tk">inverted_pendulum_M</a>-&gt;<a id="231c28" class="tk">Timing</a>.<a id="231c35" class="tk">RateInteraction</a>.<a id="231c51" class="tk">TID0_2</a>) <span class="br">{</span></td></tr>
<tr name="232" id="232">
<td>232</td><td>    <a id="232c5" class="tk">inverted_pendulum_B</a>.<a id="232c25" class="tk">ZeroOrderHold</a> = <a id="232c41" class="tk">F</a>;</td></tr>
<tr name="233" id="233">
<td>233</td><td>  <span class="br">}</span></td></tr>
<tr name="234" id="234">
<td>234</td><td></td></tr>
<tr name="235" id="235">
<td>235</td><td>  <span class="ct">/* End of ZeroOrderHold: '<a class="ct blk" blk_line="235">&lt;Root&gt;/Zero-Order Hold</a>' */</span></td></tr>
<tr name="236" id="236">
<td>236</td><td>  <span class="kw">if</span> (<a id="236c7" class="tk">rtmIsMajorTimeStep</a>(<a id="236c26" class="tk">inverted_pendulum_M</a>)) <span class="br">{</span></td></tr>
<tr name="237" id="237">
<td>237</td><td>    <a id="237c5" class="tk">rt_ertODEUpdateContinuousStates</a>(&amp;<a id="237c38" class="tk">inverted_pendulum_M</a>-&gt;<a id="237c59" class="tk">solverInfo</a>);</td></tr>
<tr name="238" id="238">
<td>238</td><td></td></tr>
<tr name="239" id="239">
<td>239</td><td>    <span class="ct">/* Update absolute time */</span></td></tr>
<tr name="240" id="240">
<td>240</td><td>    <span class="ct">/* The "clockTick0" counts the number of times the code of this task has</span></td></tr>
<tr name="241" id="241">
<td>241</td><td><span class="ct">     * been executed. The absolute time is the multiplication of "clockTick0"</span></td></tr>
<tr name="242" id="242">
<td>242</td><td><span class="ct">     * and "Timing.stepSize0". Size of "clockTick0" ensures timer will not</span></td></tr>
<tr name="243" id="243">
<td>243</td><td><span class="ct">     * overflow during the application lifespan selected.</span></td></tr>
<tr name="244" id="244">
<td>244</td><td><span class="ct">     */</span></td></tr>
<tr name="245" id="245">
<td>245</td><td>    ++<a id="245c7" class="tk">inverted_pendulum_M</a>-&gt;<a id="245c28" class="tk">Timing</a>.<a id="245c35" class="tk">clockTick0</a>;</td></tr>
<tr name="246" id="246">
<td>246</td><td>    <a id="246c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="246c26" class="tk">Timing</a>.<a id="246c33" class="tk">t</a>[0] = <a id="246c40" class="tk">rtsiGetSolverStopTime</a></td></tr>
<tr name="247" id="247">
<td>247</td><td>      (&amp;<a id="247c9" class="tk">inverted_pendulum_M</a>-&gt;<a id="247c30" class="tk">solverInfo</a>);</td></tr>
<tr name="248" id="248">
<td>248</td><td></td></tr>
<tr name="249" id="249">
<td>249</td><td>    <span class="ct">/* Update absolute time */</span></td></tr>
<tr name="250" id="250">
<td>250</td><td>    <span class="ct">/* The "clockTick1" counts the number of times the code of this task has</span></td></tr>
<tr name="251" id="251">
<td>251</td><td><span class="ct">     * been executed. The resolution of this integer timer is 0.1, which is the step size</span></td></tr>
<tr name="252" id="252">
<td>252</td><td><span class="ct">     * of the task. Size of "clockTick1" ensures timer will not overflow during the</span></td></tr>
<tr name="253" id="253">
<td>253</td><td><span class="ct">     * application lifespan selected.</span></td></tr>
<tr name="254" id="254">
<td>254</td><td><span class="ct">     */</span></td></tr>
<tr name="255" id="255">
<td>255</td><td>    <a id="255c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="255c26" class="tk">Timing</a>.<a id="255c33" class="tk">clockTick1</a>++;</td></tr>
<tr name="256" id="256">
<td>256</td><td>  <span class="br">}</span>                                    <span class="ct">/* end MajorTimeStep */</span></td></tr>
<tr name="257" id="257">
<td>257</td><td><span class="br">}</span></td></tr>
<tr name="258" id="258">
<td>258</td><td></td></tr>
<tr name="259" id="259">
<td>259</td><td><span class="ct">/* Derivatives for root system: '<a class="ct blk" blk_line="259">&lt;Root&gt;</a>' */</span></td></tr>
<tr name="260" id="260">
<td>260</td><td><span class="kw">void</span> <a id="260c6" class="tk">inverted_pendulum_derivatives</a>(<span class="kw">void</span>)</td></tr>
<tr name="261" id="261">
<td>261</td><td><span class="br">{</span></td></tr>
<tr name="262" id="262">
<td>262</td><td>  <a id="262c3" class="tk">XDot_inverted_pendulum_T</a> *<a id="262c29" class="tk">_rtXdot</a>;</td></tr>
<tr name="263" id="263">
<td>263</td><td>  <a id="263c3" class="tk">_rtXdot</a> = ((<a id="263c15" class="tk">XDot_inverted_pendulum_T</a> *) <a id="263c43" class="tk">inverted_pendulum_M</a>-&gt;<a id="263c64" class="tk">ModelData</a>.<a id="263c74" class="tk">derivs</a>);</td></tr>
<tr name="264" id="264">
<td>264</td><td></td></tr>
<tr name="265" id="265">
<td>265</td><td>  <span class="ct">/* Derivatives for StateSpace: '<a class="ct blk" blk_line="265">&lt;Root&gt;/Angle Controller</a>' incorporates:</span></td></tr>
<tr name="266" id="266">
<td>266</td><td><span class="ct">   *  Derivatives for Inport: '<a class="ct blk" blk_line="266">&lt;Root&gt;/angle</a>'</span></td></tr>
<tr name="267" id="267">
<td>267</td><td><span class="ct">   */</span></td></tr>
<tr name="268" id="268">
<td>268</td><td>  <a id="268c3" class="tk">_rtXdot</a>-&gt;<a id="268c12" class="tk">AngleController_CSTATE</a>[0] = 0.0;</td></tr>
<tr name="269" id="269">
<td>269</td><td>  <a id="269c3" class="tk">_rtXdot</a>-&gt;<a id="269c12" class="tk">AngleController_CSTATE</a>[1] = 0.0;</td></tr>
<tr name="270" id="270">
<td>270</td><td>  <a id="270c3" class="tk">_rtXdot</a>-&gt;<a id="270c12" class="tk">AngleController_CSTATE</a>[0] += <a id="270c41" class="tk">inverted_pendulum_P</a>.<a id="270c61" class="tk">AngleController_A</a>[0]</td></tr>
<tr name="271" id="271">
<td>271</td><td>    * <a id="271c7" class="tk">inverted_pendulum_X</a>.<a id="271c27" class="tk">AngleController_CSTATE</a>[0];</td></tr>
<tr name="272" id="272">
<td>272</td><td>  <a id="272c3" class="tk">_rtXdot</a>-&gt;<a id="272c12" class="tk">AngleController_CSTATE</a>[0] += <a id="272c41" class="tk">inverted_pendulum_P</a>.<a id="272c61" class="tk">AngleController_A</a>[1]</td></tr>
<tr name="273" id="273">
<td>273</td><td>    * <a id="273c7" class="tk">inverted_pendulum_X</a>.<a id="273c27" class="tk">AngleController_CSTATE</a>[1];</td></tr>
<tr name="274" id="274">
<td>274</td><td>  <a id="274c3" class="tk">_rtXdot</a>-&gt;<a id="274c12" class="tk">AngleController_CSTATE</a>[1] += <a id="274c41" class="tk">inverted_pendulum_P</a>.<a id="274c61" class="tk">AngleController_A</a>[2]</td></tr>
<tr name="275" id="275">
<td>275</td><td>    * <a id="275c7" class="tk">inverted_pendulum_X</a>.<a id="275c27" class="tk">AngleController_CSTATE</a>[0];</td></tr>
<tr name="276" id="276">
<td>276</td><td>  <a id="276c3" class="tk">_rtXdot</a>-&gt;<a id="276c12" class="tk">AngleController_CSTATE</a>[1] += <a id="276c41" class="tk">inverted_pendulum_P</a>.<a id="276c61" class="tk">AngleController_A</a>[3]</td></tr>
<tr name="277" id="277">
<td>277</td><td>    * <a id="277c7" class="tk">inverted_pendulum_X</a>.<a id="277c27" class="tk">AngleController_CSTATE</a>[1];</td></tr>
<tr name="278" id="278">
<td>278</td><td>  <a id="278c3" class="tk">_rtXdot</a>-&gt;<a id="278c12" class="tk">AngleController_CSTATE</a>[0] += <a id="278c41" class="tk">inverted_pendulum_P</a>.<a id="278c61" class="tk">AngleController_B</a>[0]</td></tr>
<tr name="279" id="279">
<td>279</td><td>    * <a id="279c7" class="tk">Theta</a>;</td></tr>
<tr name="280" id="280">
<td>280</td><td>  <a id="280c3" class="tk">_rtXdot</a>-&gt;<a id="280c12" class="tk">AngleController_CSTATE</a>[1] += <a id="280c41" class="tk">inverted_pendulum_P</a>.<a id="280c61" class="tk">AngleController_B</a>[1]</td></tr>
<tr name="281" id="281">
<td>281</td><td>    * <a id="281c7" class="tk">Theta</a>;</td></tr>
<tr name="282" id="282">
<td>282</td><td><span class="br">}</span></td></tr>
<tr name="283" id="283">
<td>283</td><td></td></tr>
<tr name="284" id="284">
<td>284</td><td><span class="ct">/* Model step function for TID2 */</span></td></tr>
<tr name="285" id="285">
<td>285</td><td><span class="kw">void</span> <a id="285c6" class="tk">inverted_pendulum_step2</a>(<span class="kw">void</span>)     <span class="ct">/* Sample time: [1.0s, 0.0s] */</span></td></tr>
<tr name="286" id="286">
<td>286</td><td><span class="br">{</span></td></tr>
<tr name="287" id="287">
<td>287</td><td>  <span class="ct">/* Outport: '<a class="ct blk" blk_line="287">&lt;Root&gt;/accel</a>' */</span></td></tr>
<tr name="288" id="288">
<td>288</td><td>  <a id="288c3" class="tk">inverted_pendulum_Y</a>.<a id="288c23" class="tk">accel</a> = <a id="288c31" class="tk">inverted_pendulum_B</a>.<a id="288c51" class="tk">ZeroOrderHold</a>;</td></tr>
<tr name="289" id="289">
<td>289</td><td><span class="br">}</span></td></tr>
<tr name="290" id="290">
<td>290</td><td></td></tr>
<tr name="291" id="291">
<td>291</td><td><span class="ct">/* Model initialize function */</span></td></tr>
<tr name="292" id="292">
<td>292</td><td><span class="kw">void</span> <a id="292c6" class="tk">inverted_pendulum_initialize</a>(<span class="kw">void</span>)</td></tr>
<tr name="293" id="293">
<td>293</td><td><span class="br">{</span></td></tr>
<tr name="294" id="294">
<td>294</td><td>  <span class="ct">/* Registration code */</span></td></tr>
<tr name="295" id="295">
<td>295</td><td></td></tr>
<tr name="296" id="296">
<td>296</td><td>  <span class="ct">/* initialize real-time model */</span></td></tr>
<tr name="297" id="297">
<td>297</td><td>  (<span class="kw">void</span>) <a id="297c10" class="tk">memset</a>((<span class="kw">void</span> *)<a id="297c25" class="tk">inverted_pendulum_M</a>, 0,</td></tr>
<tr name="298" id="298">
<td>298</td><td>                <span class="kw">sizeof</span>(<a id="298c24" class="tk">RT_MODEL_inverted_pendulum_T</a>));</td></tr>
<tr name="299" id="299">
<td>299</td><td></td></tr>
<tr name="300" id="300">
<td>300</td><td>  <span class="br">{</span></td></tr>
<tr name="301" id="301">
<td>301</td><td>    <span class="ct">/* Setup solver object */</span></td></tr>
<tr name="302" id="302">
<td>302</td><td>    <a id="302c5" class="tk">rtsiSetSimTimeStepPtr</a>(&amp;<a id="302c28" class="tk">inverted_pendulum_M</a>-&gt;<a id="302c49" class="tk">solverInfo</a>,</td></tr>
<tr name="303" id="303">
<td>303</td><td>                          &amp;<a id="303c28" class="tk">inverted_pendulum_M</a>-&gt;<a id="303c49" class="tk">Timing</a>.<a id="303c56" class="tk">simTimeStep</a>);</td></tr>
<tr name="304" id="304">
<td>304</td><td>    <a id="304c5" class="tk">rtsiSetTPtr</a>(&amp;<a id="304c18" class="tk">inverted_pendulum_M</a>-&gt;<a id="304c39" class="tk">solverInfo</a>, &amp;<a id="304c52" class="tk">rtmGetTPtr</a></td></tr>
<tr name="305" id="305">
<td>305</td><td>                (<a id="305c18" class="tk">inverted_pendulum_M</a>));</td></tr>
<tr name="306" id="306">
<td>306</td><td>    <a id="306c5" class="tk">rtsiSetStepSizePtr</a>(&amp;<a id="306c25" class="tk">inverted_pendulum_M</a>-&gt;<a id="306c46" class="tk">solverInfo</a>,</td></tr>
<tr name="307" id="307">
<td>307</td><td>                       &amp;<a id="307c25" class="tk">inverted_pendulum_M</a>-&gt;<a id="307c46" class="tk">Timing</a>.<a id="307c53" class="tk">stepSize0</a>);</td></tr>
<tr name="308" id="308">
<td>308</td><td>    <a id="308c5" class="tk">rtsiSetdXPtr</a>(&amp;<a id="308c19" class="tk">inverted_pendulum_M</a>-&gt;<a id="308c40" class="tk">solverInfo</a>,</td></tr>
<tr name="309" id="309">
<td>309</td><td>                 &amp;<a id="309c19" class="tk">inverted_pendulum_M</a>-&gt;<a id="309c40" class="tk">ModelData</a>.<a id="309c50" class="tk">derivs</a>);</td></tr>
<tr name="310" id="310">
<td>310</td><td>    <a id="310c5" class="tk">rtsiSetContStatesPtr</a>(&amp;<a id="310c27" class="tk">inverted_pendulum_M</a>-&gt;<a id="310c48" class="tk">solverInfo</a>, (<a id="310c61" class="tk">real_T</a> **)</td></tr>
<tr name="311" id="311">
<td>311</td><td>                         &amp;<a id="311c27" class="tk">inverted_pendulum_M</a>-&gt;<a id="311c48" class="tk">ModelData</a>.<a id="311c58" class="tk">contStates</a>);</td></tr>
<tr name="312" id="312">
<td>312</td><td>    <a id="312c5" class="tk">rtsiSetNumContStatesPtr</a>(&amp;<a id="312c30" class="tk">inverted_pendulum_M</a>-&gt;<a id="312c51" class="tk">solverInfo</a>,</td></tr>
<tr name="313" id="313">
<td>313</td><td>      &amp;<a id="313c8" class="tk">inverted_pendulum_M</a>-&gt;<a id="313c29" class="tk">Sizes</a>.<a id="313c35" class="tk">numContStates</a>);</td></tr>
<tr name="314" id="314">
<td>314</td><td>    <a id="314c5" class="tk">rtsiSetErrorStatusPtr</a>(&amp;<a id="314c28" class="tk">inverted_pendulum_M</a>-&gt;<a id="314c49" class="tk">solverInfo</a>, (&amp;<a id="314c63" class="tk">rtmGetErrorStatus</a></td></tr>
<tr name="315" id="315">
<td>315</td><td>      (<a id="315c8" class="tk">inverted_pendulum_M</a>)));</td></tr>
<tr name="316" id="316">
<td>316</td><td>    <a id="316c5" class="tk">rtsiSetRTModelPtr</a>(&amp;<a id="316c24" class="tk">inverted_pendulum_M</a>-&gt;<a id="316c45" class="tk">solverInfo</a>, <a id="316c57" class="tk">inverted_pendulum_M</a>);</td></tr>
<tr name="317" id="317">
<td>317</td><td>  <span class="br">}</span></td></tr>
<tr name="318" id="318">
<td>318</td><td></td></tr>
<tr name="319" id="319">
<td>319</td><td>  <a id="319c3" class="tk">rtsiSetSimTimeStep</a>(&amp;<a id="319c23" class="tk">inverted_pendulum_M</a>-&gt;<a id="319c44" class="tk">solverInfo</a>, <a id="319c56" class="tk">MAJOR_TIME_STEP</a>);</td></tr>
<tr name="320" id="320">
<td>320</td><td>  <a id="320c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="320c24" class="tk">ModelData</a>.<a id="320c34" class="tk">intgData</a>.<a id="320c43" class="tk">y</a> =</td></tr>
<tr name="321" id="321">
<td>321</td><td>    <a id="321c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="321c26" class="tk">ModelData</a>.<a id="321c36" class="tk">odeY</a>;</td></tr>
<tr name="322" id="322">
<td>322</td><td>  <a id="322c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="322c24" class="tk">ModelData</a>.<a id="322c34" class="tk">intgData</a>.<a id="322c43" class="tk">f</a>[0] =</td></tr>
<tr name="323" id="323">
<td>323</td><td>    <a id="323c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="323c26" class="tk">ModelData</a>.<a id="323c36" class="tk">odeF</a>[0];</td></tr>
<tr name="324" id="324">
<td>324</td><td>  <a id="324c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="324c24" class="tk">ModelData</a>.<a id="324c34" class="tk">intgData</a>.<a id="324c43" class="tk">f</a>[1] =</td></tr>
<tr name="325" id="325">
<td>325</td><td>    <a id="325c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="325c26" class="tk">ModelData</a>.<a id="325c36" class="tk">odeF</a>[1];</td></tr>
<tr name="326" id="326">
<td>326</td><td>  <a id="326c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="326c24" class="tk">ModelData</a>.<a id="326c34" class="tk">intgData</a>.<a id="326c43" class="tk">f</a>[2] =</td></tr>
<tr name="327" id="327">
<td>327</td><td>    <a id="327c5" class="tk">inverted_pendulum_M</a>-&gt;<a id="327c26" class="tk">ModelData</a>.<a id="327c36" class="tk">odeF</a>[2];</td></tr>
<tr name="328" id="328">
<td>328</td><td>  <a id="328c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="328c24" class="tk">ModelData</a>.<a id="328c34" class="tk">contStates</a> = ((<a id="328c49" class="tk">X_inverted_pendulum_T</a> *)</td></tr>
<tr name="329" id="329">
<td>329</td><td>    &amp;<a id="329c6" class="tk">inverted_pendulum_X</a>);</td></tr>
<tr name="330" id="330">
<td>330</td><td>  <a id="330c3" class="tk">rtsiSetSolverData</a>(&amp;<a id="330c22" class="tk">inverted_pendulum_M</a>-&gt;<a id="330c43" class="tk">solverInfo</a>, (<span class="kw">void</span> *)</td></tr>
<tr name="331" id="331">
<td>331</td><td>                    &amp;<a id="331c22" class="tk">inverted_pendulum_M</a>-&gt;<a id="331c43" class="tk">ModelData</a>.<a id="331c53" class="tk">intgData</a>);</td></tr>
<tr name="332" id="332">
<td>332</td><td>  <a id="332c3" class="tk">rtsiSetSolverName</a>(&amp;<a id="332c22" class="tk">inverted_pendulum_M</a>-&gt;<a id="332c43" class="tk">solverInfo</a>,"ode3");</td></tr>
<tr name="333" id="333">
<td>333</td><td>  <a id="333c3" class="tk">rtmSetTPtr</a>(<a id="333c14" class="tk">inverted_pendulum_M</a>, &amp;<a id="333c36" class="tk">inverted_pendulum_M</a>-&gt;<a id="333c57" class="tk">Timing</a>.<a id="333c64" class="tk">tArray</a>[0]);</td></tr>
<tr name="334" id="334">
<td>334</td><td>  <a id="334c3" class="tk">inverted_pendulum_M</a>-&gt;<a id="334c24" class="tk">Timing</a>.<a id="334c31" class="tk">stepSize0</a> = 0.1;</td></tr>
<tr name="335" id="335">
<td>335</td><td></td></tr>
<tr name="336" id="336">
<td>336</td><td>  <span class="ct">/* block I/O */</span></td></tr>
<tr name="337" id="337">
<td>337</td><td>  (<span class="kw">void</span>) <a id="337c10" class="tk">memset</a>(((<span class="kw">void</span> *) &amp;<a id="337c28" class="tk">inverted_pendulum_B</a>), 0,</td></tr>
<tr name="338" id="338">
<td>338</td><td>                <span class="kw">sizeof</span>(<a id="338c24" class="tk">B_inverted_pendulum_T</a>));</td></tr>
<tr name="339" id="339">
<td>339</td><td></td></tr>
<tr name="340" id="340">
<td>340</td><td>  <span class="ct">/* states (continuous) */</span></td></tr>
<tr name="341" id="341">
<td>341</td><td>  <span class="br">{</span></td></tr>
<tr name="342" id="342">
<td>342</td><td>    (<span class="kw">void</span>) <a id="342c12" class="tk">memset</a>((<span class="kw">void</span> *)&amp;<a id="342c28" class="tk">inverted_pendulum_X</a>, 0,</td></tr>
<tr name="343" id="343">
<td>343</td><td>                  <span class="kw">sizeof</span>(<a id="343c26" class="tk">X_inverted_pendulum_T</a>));</td></tr>
<tr name="344" id="344">
<td>344</td><td>  <span class="br">}</span></td></tr>
<tr name="345" id="345">
<td>345</td><td></td></tr>
<tr name="346" id="346">
<td>346</td><td>  <span class="ct">/* external outputs */</span></td></tr>
<tr name="347" id="347">
<td>347</td><td>  <a id="347c3" class="tk">inverted_pendulum_Y</a>.<a id="347c23" class="tk">accel</a> = 0.0;</td></tr>
<tr name="348" id="348">
<td>348</td><td></td></tr>
<tr name="349" id="349">
<td>349</td><td>  <span class="ct">/* InitializeConditions for StateSpace: '<a class="ct blk" blk_line="349">&lt;Root&gt;/Angle Controller</a>' */</span></td></tr>
<tr name="350" id="350">
<td>350</td><td>  <a id="350c3" class="tk">inverted_pendulum_X</a>.<a id="350c23" class="tk">AngleController_CSTATE</a>[0] =</td></tr>
<tr name="351" id="351">
<td>351</td><td>    <a id="351c5" class="tk">inverted_pendulum_P</a>.<a id="351c25" class="tk">AngleController_X0</a>;</td></tr>
<tr name="352" id="352">
<td>352</td><td>  <a id="352c3" class="tk">inverted_pendulum_X</a>.<a id="352c23" class="tk">AngleController_CSTATE</a>[1] =</td></tr>
<tr name="353" id="353">
<td>353</td><td>    <a id="353c5" class="tk">inverted_pendulum_P</a>.<a id="353c25" class="tk">AngleController_X0</a>;</td></tr>
<tr name="354" id="354">
<td>354</td><td><span class="br">}</span></td></tr>
<tr name="355" id="355">
<td>355</td><td></td></tr>
<tr name="356" id="356">
<td>356</td><td><span class="ct">/* Model terminate function */</span></td></tr>
<tr name="357" id="357">
<td>357</td><td><span class="kw">void</span> <a id="357c6" class="tk">inverted_pendulum_terminate</a>(<span class="kw">void</span>)</td></tr>
<tr name="358" id="358">
<td>358</td><td><span class="br">{</span></td></tr>
<tr name="359" id="359">
<td>359</td><td>  <span class="ct">/* (no terminate code required) */</span></td></tr>
<tr name="360" id="360">
<td>360</td><td><span class="br">}</span></td></tr>
<tr name="361" id="361">
<td>361</td><td></td></tr>
<tr name="362" id="362">
<td>362</td><td><span class="ct">/*</span></td></tr>
<tr name="363" id="363">
<td>363</td><td><span class="ct"> * File trailer for generated code.</span></td></tr>
<tr name="364" id="364">
<td>364</td><td><span class="ct"> *</span></td></tr>
<tr name="365" id="365">
<td>365</td><td><span class="ct"> * [EOF]</span></td></tr>
<tr name="366" id="366">
<td>366</td><td><span class="ct"> */</span></td></tr>
<tr name="367" id="367">
<td>367</td><td></td></tr>
</table>
</pre>
</body>
</html>
<html>
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge" ><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><script language="JavaScript" type="text/javascript" src="rtwhilite.js"></script><script language="JavaScript" type="text/javascript" src="rtwshrink.js"></script><script language="JavaScript" type="text/javascript">var reportModel = "inverted_pendulum"; </script><script language="JavaScript" type="text/javascript" src="inverted_pendulum_traceInfo.js"></script><script language="JavaScript" type="text/javascript" src="requirements.js"></script><script language="JavaScript" type="text/javascript" src="inverted_pendulum_sid_map.js"></script><script language="JavaScript" type="text/javascript" src="define.js"></script><script language="JavaScript" type="text/javascript" src="traceInfo_flag.js"></script><title>
inverted_pendulum Code Generation Report
</title>

</head>
<frameset cols="25%,75%,0%" id="main" border="2">
<frame scrolling="auto" src="inverted_pendulum_contents.html" name="rtwreport_contents_frame" id="rtwreport_contents_frame">

</frame>
<frameset rows="0%,100%,0%" id="rtw_midFrame">
<frame scrolling="no" src="navToolbar.html" name="rtwreport_navToolbar_frame" id="rtwreport_navToolbar_frame" noresize="noresize">

</frame>
<frame scrolling="auto" name="rtwreport_document_frame" id="rtwreport_document_frame">

</frame>
<frame scrolling="no" src="inspect.html" name="rtwreport_inspect_frame" id="rtwreport_inspect_frame" noresize="noresize">

</frame>

</frameset>
<frame scrolling="no" src="nav.html" name="rtwreport_nav_frame" id="rtwreport_nav_frame" noresize="noresize">

</frame>

</frameset>
<body>

</body>

</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><script language="JavaScript" type="text/javascript" defer="defer">
    function rtwFileListShrink(o, category, numFiles)
    {
        var indent = document.getElementById(category + "_indent");
        var fileTable = document.getElementById(category + "_table");
        var catName = document.getElementById(category + "_name");
        if (fileTable.style.display == "none") {
            fileTable.style.display = "";
            indent.style.display = "";
            o.innerHTML = '<span style="font-family:monospace" id = "' + category + '_button">[-]</span>';
            catName.innerHTML = "<b>" + category + "</b>";
        } else {
            fileTable.style.display = "none";
            indent.style.display = "none";
            o.innerHTML = '<span style="font-family:monospace" id = "' + category + '_button">[+]</span>';
            catName.innerHTML = "<b>" + category + " (" + numFiles + ")" + "</b>";
        }
    }
</script>

</head>
<body bgcolor="#eeeeee" link="#0033cc" vlink="#666666" rightmargin="0">
<table class="toc" border="1">
<tr>
<td align="left" valign="top">
<b>
Contents
</b>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="rtwmsg.html" id="rtwIdMsgFileLink" style="display: none" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Block-to-code Message
</a>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="inverted_pendulum_survey.html" id="rtwIdSummaryPage" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Summary
</a>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="inverted_pendulum_subsystems.html" id="rtwIdSubsystem" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Subsystem Report
</a>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="inverted_pendulum_interface.html" id="rtwIdCodeInterface" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Code Interface Report
</a>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="inverted_pendulum_trace.html" id="rtwIdTraceability" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Traceability Report
</a>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="inverted_pendulum_metrics.html" id="rtwIdCodeMetrics" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Static Code Metrics Report
</a>

</td>

</tr>
<tr>
<td align="left" valign="top">
<a href="inverted_pendulum_replacements.html" id="rtwIdCodeReplacements" target="rtwreport_document_frame" onclick="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, true);" name="TOC_List">
Code Replacements Report
</a>

</td>

</tr>

</table>
<!--ADD_CODE_PROFILE_REPORT_LINK_HERE--><hr /><table cellspacing="0" cellpadding="4" width="100%" bgcolor="#ffffff" border="0">
<tr>
<td align="left" valign="top">
<b>
Generated Code
</b>

</td>

</tr>
<tr>
<td align="left" valign="top">
<table cellspacing="0" cellpadding="1" width="100%" bgcolor="#ffffff" id="Main file" border="0">
<tr>
<td width="0%" align="left" valign="top">
<span style="background-color:#ffffff;width:100%;cursor:pointer;white-space:nowrap" title="Click to shrink or expand category" onclick="rtwFileListShrink(this,'Main file','1')"><span style="font-family:monospace" id = "Main file_button">[-]</span></span>
</td>
<td width="100%" align="left" valign="top">
<span id="Main file_name"><b>Main file</b></span>
</td>

</tr>
<tr>
<td width="0%" align="left" valign="top">
<span id="Main file_indent"></span>
</td>
<td width="100%" align="left" valign="top">
<table cellspacing="0" cellpadding="4" width="100%" bgcolor="#ffffff" id="Main file_table" border="0">
<tr>
<td align="left" valign="top">
<A HREF="ert_main_c.html" TARGET="rtwreport_document_frame" ONCLICK="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, false);" ID="ert_main_c.html" NAME="rtwIdGenFileLinks">
ert_main.c
</A>
<span> </span>
</td>

</tr>

</table>

</td>

</tr>

</table>

</td>

</tr>
<tr>
<td align="left" valign="top">
<table cellspacing="0" cellpadding="1" width="100%" bgcolor="#ffffff" id="Model files" border="0">
<tr>
<td width="0%" align="left" valign="top">
<span style="background-color:#ffffff;width:100%;cursor:pointer;white-space:nowrap" title="Click to shrink or expand category" onclick="rtwFileListShrink(this,'Model files','2')"><span style="font-family:monospace" id = "Model files_button">[-]</span></span>
</td>
<td width="100%" align="left" valign="top">
<span id="Model files_name"><b>Model files</b></span>
</td>

</tr>
<tr>
<td width="0%" align="left" valign="top">
<span id="Model files_indent"></span>
</td>
<td width="100%" align="left" valign="top">
<table cellspacing="0" cellpadding="4" width="100%" bgcolor="#ffffff" id="Model files_table" border="0">
<tr>
<td align="left" valign="top">
<A HREF="inverted_pendulum_c.html" TARGET="rtwreport_document_frame" ONCLICK="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, false);" ID="inverted_pendulum_c.html" NAME="rtwIdGenFileLinks">
inverted_pendulum.c
</A>
<span> </span>
</td>

</tr>
<tr>
<td align="left" valign="top">
<A HREF="inverted_pendulum_h.html" TARGET="rtwreport_document_frame" ONCLICK="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, false);" ID="inverted_pendulum_h.html" NAME="rtwIdGenFileLinks">
inverted_pendulum.h
</A>
<span> </span>
</td>

</tr>

</table>

</td>

</tr>

</table>

</td>

</tr>
<tr>
<td align="left" valign="top">
<table cellspacing="0" cellpadding="1" width="100%" bgcolor="#ffffff" id="Utility files" border="0">
<tr>
<td width="0%" align="left" valign="top">
<span style="background-color:#ffffff;width:100%;cursor:pointer;white-space:nowrap" title="Click to shrink or expand category" onclick="rtwFileListShrink(this,'Utility files','1')"><span style="font-family:monospace" id = "Utility files_button">[+]</span></span>
</td>
<td width="100%" align="left" valign="top">
<span id="Utility files_name"><b>Utility files (1)</b></span>
</td>

</tr>
<tr>
<td width="0%" align="left" valign="top">
<span id="Utility files_indent"></span>
</td>
<td width="100%" align="left" valign="top">
<table cellspacing="0" cellpadding="4" width="100%" bgcolor="#ffffff" id="Utility files_table" style="display:none" border="0">
<tr>
<td align="left" valign="top">
<A HREF="rtwtypes_h.html" TARGET="rtwreport_document_frame" ONCLICK="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, false);" ID="rtwtypes_h.html" NAME="rtwIdGenFileLinks">
rtwtypes.h
</A>
<span> </span>
</td>

</tr>

</table>

</td>

</tr>

</table>

</td>

</tr>
<tr>
<td align="left" valign="top">
<table cellspacing="0" cellpadding="1" width="100%" bgcolor="#ffffff" id="Other files" border="0">
<tr>
<td width="0%" align="left" valign="top">
<span style="background-color:#ffffff;width:100%;cursor:pointer;white-space:nowrap" title="Click to shrink or expand category" onclick="rtwFileListShrink(this,'Other files','2')"><span style="font-family:monospace" id = "Other files_button">[+]</span></span>
</td>
<td width="100%" align="left" valign="top">
<span id="Other files_name"><b>Other files (2)</b></span>
</td>

</tr>
<tr>
<td width="0%" align="left" valign="top">
<span id="Other files_indent"></span>
</td>
<td width="100%" align="left" valign="top">
<table cellspacing="0" cellpadding="4" width="100%" bgcolor="#ffffff" id="Other files_table" style="display:none" border="0">
<tr>
<td align="left" valign="top">
<A HREF="MW_target_hardware_resources_h.html" TARGET="rtwreport_document_frame" ONCLICK="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, false);" ID="MW_target_hardware_resources_h.html" NAME="rtwIdGenFileLinks">
MW_target_hardware_resources.h
</A>
<span> </span>
</td>

</tr>
<tr>
<td align="left" valign="top">
<A HREF="arm_cortex_m_multitasking_c.html" TARGET="rtwreport_document_frame" ONCLICK="if (top) if (top.tocHiliteMe) top.tocHiliteMe(window, this, false);" ID="arm_cortex_m_multitasking_c.html" NAME="rtwIdGenFileLinks">
arm_cortex_m_multitasking.c
</A>
<span> </span>
</td>

</tr>

</table>

</td>

</tr>

</table>

</td>

</tr>

</table>
<hr />
</body>

</html>
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="./js/coder_app.js"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="./rtwreport_utils.js"></script>
<script type="text/javascript" src="./rtwannotate.js"></script>
<link rel="stylesheet" type="text/css" href="./css/coder_app.css"/>
</head>
<body onload="srcFileOnload();">
<pre id="code">
<table class="code" id="codeTbl">
<tr name="1" id="1">
<td>1</td><td><span class="ct">/*</span></td></tr>
<tr name="2" id="2">
<td>2</td><td><span class="ct"> * File: inverted_pendulum.h</span></td></tr>
<tr name="3" id="3">
<td>3</td><td><span class="ct"> *</span></td></tr>
<tr name="4" id="4">
<td>4</td><td><span class="ct"> * Code generated for Simulink model 'inverted_pendulum'.</span></td></tr>
<tr name="5" id="5">
<td>5</td><td><span class="ct"> *</span></td></tr>
<tr name="6" id="6">
<td>6</td><td><span class="ct"> * Model version                  : 1.48</span></td></tr>
<tr name="7" id="7">
<td>7</td><td><span class="ct"> * Simulink Coder version         : 8.8 (R2015a) 09-Feb-2015</span></td></tr>
<tr name="8" id="8">
<td>8</td><td><span class="ct"> * C/C++ source code generated on : Thu Jan 28 21:02:07 2016</span></td></tr>
<tr name="9" id="9">
<td>9</td><td><span class="ct"> *</span></td></tr>
<tr name="10" id="10">
<td>10</td><td><span class="ct"> * Target selection: ert.tlc</span></td></tr>
<tr name="11" id="11">
<td>11</td><td><span class="ct"> * Embedded hardware selection: ARM Compatible-&gt;ARM Cortex</span></td></tr>
<tr name="12" id="12">
<td>12</td><td><span class="ct"> * Code generation objectives: Unspecified</span></td></tr>
<tr name="13" id="13">
<td>13</td><td><span class="ct"> * Validation result: Not run</span></td></tr>
<tr name="14" id="14">
<td>14</td><td><span class="ct"> */</span></td></tr>
<tr name="15" id="15">
<td>15</td><td></td></tr>
<tr name="16" id="16">
<td>16</td><td><span class="pp">#ifndef</span> <a id="16c9" class="tk">RTW_HEADER_inverted_pendulum_h_</a></td></tr>
<tr name="17" id="17">
<td>17</td><td><span class="pp">#define</span> <a id="17c9" class="tk">RTW_HEADER_inverted_pendulum_h_</a></td></tr>
<tr name="18" id="18">
<td>18</td><td><span class="pp">#include "rtwtypes.h"</span></td></tr>
<tr name="19" id="19">
<td>19</td><td><span class="pp">#include &lt;string.h&gt;</span></td></tr>
<tr name="20" id="20">
<td>20</td><td><span class="pp">#include &lt;stddef.h&gt;</span></td></tr>
<tr name="21" id="21">
<td>21</td><td><span class="pp">#ifndef</span> <a id="21c9" class="tk">inverted_pendulum_COMMON_INCLUDES_</a></td></tr>
<tr name="22" id="22">
<td>22</td><td><span class="pp"># define</span> <a id="22c10" class="tk">inverted_pendulum_COMMON_INCLUDES_</a></td></tr>
<tr name="23" id="23">
<td>23</td><td><span class="pp">#include "rtwtypes.h"</span></td></tr>
<tr name="24" id="24">
<td>24</td><td><span class="pp">#include "rtw_continuous.h"</span></td></tr>
<tr name="25" id="25">
<td>25</td><td><span class="pp">#include "rtw_solver.h"</span></td></tr>
<tr name="26" id="26">
<td>26</td><td><span class="pp">#endif</span>                                 <span class="ct">/* inverted_pendulum_COMMON_INCLUDES_ */</span></td></tr>
<tr name="27" id="27">
<td>27</td><td></td></tr>
<tr name="28" id="28">
<td>28</td><td><span class="pp">#include "MW_target_hardware_resources.h"</span></td></tr>
<tr name="29" id="29">
<td>29</td><td></td></tr>
<tr name="30" id="30">
<td>30</td><td><span class="ct">/* Macros for accessing real-time model data structure */</span></td></tr>
<tr name="31" id="31">
<td>31</td><td><span class="pp">#ifndef</span> <a id="31c9" class="tk">rtmGetErrorStatus</a></td></tr>
<tr name="32" id="32">
<td>32</td><td><span class="pp"># define</span> <a id="32c10" class="tk">rtmGetErrorStatus</a>(<a id="32c28" class="tk">rtm</a>)        ((<a id="32c42" class="tk">rtm</a>)-&gt;<a id="32c48" class="tk">errorStatus</a>)</td></tr>
<tr name="33" id="33">
<td>33</td><td><span class="pp">#endif</span></td></tr>
<tr name="34" id="34">
<td>34</td><td></td></tr>
<tr name="35" id="35">
<td>35</td><td><span class="pp">#ifndef</span> <a id="35c9" class="tk">rtmSetErrorStatus</a></td></tr>
<tr name="36" id="36">
<td>36</td><td><span class="pp"># define</span> <a id="36c10" class="tk">rtmSetErrorStatus</a>(<a id="36c28" class="tk">rtm</a>, <a id="36c33" class="tk">val</a>)   ((<a id="36c42" class="tk">rtm</a>)-&gt;<a id="36c48" class="tk">errorStatus</a> = (<a id="36c63" class="tk">val</a>))</td></tr>
<tr name="37" id="37">
<td>37</td><td><span class="pp">#endif</span></td></tr>
<tr name="38" id="38">
<td>38</td><td></td></tr>
<tr name="39" id="39">
<td>39</td><td><span class="pp">#ifndef</span> <a id="39c9" class="tk">rtmStepTask</a></td></tr>
<tr name="40" id="40">
<td>40</td><td><span class="pp"># define</span> <a id="40c10" class="tk">rtmStepTask</a>(<a id="40c22" class="tk">rtm</a>, <a id="40c27" class="tk">idx</a>)         ((<a id="40c42" class="tk">rtm</a>)-&gt;<a id="40c48" class="tk">Timing</a>.<a id="40c55" class="tk">TaskCounters</a>.<a id="40c68" class="tk">TID</a>[(<a id="40c73" class="tk">idx</a>)] == 0)</td></tr>
<tr name="41" id="41">
<td>41</td><td><span class="pp">#endif</span></td></tr>
<tr name="42" id="42">
<td>42</td><td></td></tr>
<tr name="43" id="43">
<td>43</td><td><span class="pp">#ifndef</span> <a id="43c9" class="tk">rtmGetStopRequested</a></td></tr>
<tr name="44" id="44">
<td>44</td><td><span class="pp"># define</span> <a id="44c10" class="tk">rtmGetStopRequested</a>(<a id="44c30" class="tk">rtm</a>)      ((<a id="44c42" class="tk">rtm</a>)-&gt;<a id="44c48" class="tk">Timing</a>.<a id="44c55" class="tk">stopRequestedFlag</a>)</td></tr>
<tr name="45" id="45">
<td>45</td><td><span class="pp">#endif</span></td></tr>
<tr name="46" id="46">
<td>46</td><td></td></tr>
<tr name="47" id="47">
<td>47</td><td><span class="pp">#ifndef</span> <a id="47c9" class="tk">rtmSetStopRequested</a></td></tr>
<tr name="48" id="48">
<td>48</td><td><span class="pp"># define</span> <a id="48c10" class="tk">rtmSetStopRequested</a>(<a id="48c30" class="tk">rtm</a>, <a id="48c35" class="tk">val</a>) ((<a id="48c42" class="tk">rtm</a>)-&gt;<a id="48c48" class="tk">Timing</a>.<a id="48c55" class="tk">stopRequestedFlag</a> = (<a id="48c76" class="tk">val</a>))</td></tr>
<tr name="49" id="49">
<td>49</td><td><span class="pp">#endif</span></td></tr>
<tr name="50" id="50">
<td>50</td><td></td></tr>
<tr name="51" id="51">
<td>51</td><td><span class="pp">#ifndef</span> <a id="51c9" class="tk">rtmGetStopRequestedPtr</a></td></tr>
<tr name="52" id="52">
<td>52</td><td><span class="pp"># define</span> <a id="52c10" class="tk">rtmGetStopRequestedPtr</a>(<a id="52c33" class="tk">rtm</a>)   (&amp;((<a id="52c44" class="tk">rtm</a>)-&gt;<a id="52c50" class="tk">Timing</a>.<a id="52c57" class="tk">stopRequestedFlag</a>))</td></tr>
<tr name="53" id="53">
<td>53</td><td><span class="pp">#endif</span></td></tr>
<tr name="54" id="54">
<td>54</td><td></td></tr>
<tr name="55" id="55">
<td>55</td><td><span class="pp">#ifndef</span> <a id="55c9" class="tk">rtmGetT</a></td></tr>
<tr name="56" id="56">
<td>56</td><td><span class="pp"># define</span> <a id="56c10" class="tk">rtmGetT</a>(<a id="56c18" class="tk">rtm</a>)                  (<a id="56c41" class="tk">rtmGetTPtr</a>((<a id="56c53" class="tk">rtm</a>))[0])</td></tr>
<tr name="57" id="57">
<td>57</td><td><span class="pp">#endif</span></td></tr>
<tr name="58" id="58">
<td>58</td><td></td></tr>
<tr name="59" id="59">
<td>59</td><td><span class="pp">#ifndef</span> <a id="59c9" class="tk">rtmTaskCounter</a></td></tr>
<tr name="60" id="60">
<td>60</td><td><span class="pp"># define</span> <a id="60c10" class="tk">rtmTaskCounter</a>(<a id="60c25" class="tk">rtm</a>, <a id="60c30" class="tk">idx</a>)      ((<a id="60c42" class="tk">rtm</a>)-&gt;<a id="60c48" class="tk">Timing</a>.<a id="60c55" class="tk">TaskCounters</a>.<a id="60c68" class="tk">TID</a>[(<a id="60c73" class="tk">idx</a>)])</td></tr>
<tr name="61" id="61">
<td>61</td><td><span class="pp">#endif</span></td></tr>
<tr name="62" id="62">
<td>62</td><td></td></tr>
<tr name="63" id="63">
<td>63</td><td><span class="ct">/* Forward declaration for rtModel */</span></td></tr>
<tr name="64" id="64">
<td>64</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <a id="64c16" class="tk">tag_RTM_inverted_pendulum_T</a> <a id="64c44" class="tk">RT_MODEL_inverted_pendulum_T</a>;</td></tr>
<tr name="65" id="65">
<td>65</td><td></td></tr>
<tr name="66" id="66">
<td>66</td><td><span class="ct">/* Block signals (auto storage) */</span></td></tr>
<tr name="67" id="67">
<td>67</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="68" id="68">
<td>68</td><td>  <a id="68c3" class="tk">real_T</a> <a id="68c10" class="tk">ZeroOrderHold</a>;                <span class="ct">/* '<a class="ct blk" blk_line="68">&lt;Root&gt;/Zero-Order Hold</a>' */</span></td></tr>
<tr name="69" id="69">
<td>69</td><td><span class="br">}</span> <a id="69c3" class="tk">B_inverted_pendulum_T</a>;</td></tr>
<tr name="70" id="70">
<td>70</td><td></td></tr>
<tr name="71" id="71">
<td>71</td><td><span class="ct">/* Continuous states (auto storage) */</span></td></tr>
<tr name="72" id="72">
<td>72</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="73" id="73">
<td>73</td><td>  <a id="73c3" class="tk">real_T</a> <a id="73c10" class="tk">AngleController_CSTATE</a>[2];    <span class="ct">/* '<a class="ct blk" blk_line="73">&lt;Root&gt;/Angle Controller</a>' */</span></td></tr>
<tr name="74" id="74">
<td>74</td><td><span class="br">}</span> <a id="74c3" class="tk">X_inverted_pendulum_T</a>;</td></tr>
<tr name="75" id="75">
<td>75</td><td></td></tr>
<tr name="76" id="76">
<td>76</td><td><span class="ct">/* State derivatives (auto storage) */</span></td></tr>
<tr name="77" id="77">
<td>77</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="78" id="78">
<td>78</td><td>  <a id="78c3" class="tk">real_T</a> <a id="78c10" class="tk">AngleController_CSTATE</a>[2];    <span class="ct">/* '<a class="ct blk" blk_line="78">&lt;Root&gt;/Angle Controller</a>' */</span></td></tr>
<tr name="79" id="79">
<td>79</td><td><span class="br">}</span> <a id="79c3" class="tk">XDot_inverted_pendulum_T</a>;</td></tr>
<tr name="80" id="80">
<td>80</td><td></td></tr>
<tr name="81" id="81">
<td>81</td><td><span class="ct">/* State disabled  */</span></td></tr>
<tr name="82" id="82">
<td>82</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="83" id="83">
<td>83</td><td>  <a id="83c3" class="tk">boolean_T</a> <a id="83c13" class="tk">AngleController_CSTATE</a>[2]; <span class="ct">/* '<a class="ct blk" blk_line="83">&lt;Root&gt;/Angle Controller</a>' */</span></td></tr>
<tr name="84" id="84">
<td>84</td><td><span class="br">}</span> <a id="84c3" class="tk">XDis_inverted_pendulum_T</a>;</td></tr>
<tr name="85" id="85">
<td>85</td><td></td></tr>
<tr name="86" id="86">
<td>86</td><td><span class="pp">#ifndef</span> <a id="86c9" class="tk">ODE3_INTG</a></td></tr>
<tr name="87" id="87">
<td>87</td><td><span class="pp">#define</span> <a id="87c9" class="tk">ODE3_INTG</a></td></tr>
<tr name="88" id="88">
<td>88</td><td></td></tr>
<tr name="89" id="89">
<td>89</td><td><span class="ct">/* ODE3 Integration Data */</span></td></tr>
<tr name="90" id="90">
<td>90</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="91" id="91">
<td>91</td><td>  <a id="91c3" class="tk">real_T</a> *<a id="91c11" class="tk">y</a>;                           <span class="ct">/* output */</span></td></tr>
<tr name="92" id="92">
<td>92</td><td>  <a id="92c3" class="tk">real_T</a> *<a id="92c11" class="tk">f</a>[3];                        <span class="ct">/* derivatives */</span></td></tr>
<tr name="93" id="93">
<td>93</td><td><span class="br">}</span> <a id="93c3" class="tk">ODE3_IntgData</a>;</td></tr>
<tr name="94" id="94">
<td>94</td><td></td></tr>
<tr name="95" id="95">
<td>95</td><td><span class="pp">#endif</span></td></tr>
<tr name="96" id="96">
<td>96</td><td></td></tr>
<tr name="97" id="97">
<td>97</td><td><span class="ct">/* External outputs (root outports fed by signals with auto storage) */</span></td></tr>
<tr name="98" id="98">
<td>98</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="99" id="99">
<td>99</td><td>  <a id="99c3" class="tk">real_T</a> <a id="99c10" class="tk">accel</a>;                        <span class="ct">/* '<a class="ct blk" blk_line="99">&lt;Root&gt;/accel</a>' */</span></td></tr>
<tr name="100" id="100">
<td>100</td><td><span class="br">}</span> <a id="100c3" class="tk">ExtY_inverted_pendulum_T</a>;</td></tr>
<tr name="101" id="101">
<td>101</td><td></td></tr>
<tr name="102" id="102">
<td>102</td><td><span class="ct">/* Parameters (auto storage) */</span></td></tr>
<tr name="103" id="103">
<td>103</td><td><span class="kw">struct</span> <a id="103c8" class="tk">P_inverted_pendulum_T_</a> <span class="br">{</span></td></tr>
<tr name="104" id="104">
<td>104</td><td>  <a id="104c3" class="tk">real_T</a> <a id="104c10" class="tk">AngleController_A</a>[4];         <span class="ct">/* Computed Parameter: AngleController_A</span></td></tr>
<tr name="105" id="105">
<td>105</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="105">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="106" id="106">
<td>106</td><td><span class="ct">                                        */</span></td></tr>
<tr name="107" id="107">
<td>107</td><td>  <a id="107c3" class="tk">real_T</a> <a id="107c10" class="tk">AngleController_B</a>[2];         <span class="ct">/* Computed Parameter: AngleController_B</span></td></tr>
<tr name="108" id="108">
<td>108</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="108">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="109" id="109">
<td>109</td><td><span class="ct">                                        */</span></td></tr>
<tr name="110" id="110">
<td>110</td><td>  <a id="110c3" class="tk">real_T</a> <a id="110c10" class="tk">AngleController_C</a>[2];         <span class="ct">/* Computed Parameter: AngleController_C</span></td></tr>
<tr name="111" id="111">
<td>111</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="111">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="112" id="112">
<td>112</td><td><span class="ct">                                        */</span></td></tr>
<tr name="113" id="113">
<td>113</td><td>  <a id="113c3" class="tk">real_T</a> <a id="113c10" class="tk">AngleController_D</a>;            <span class="ct">/* Computed Parameter: AngleController_D</span></td></tr>
<tr name="114" id="114">
<td>114</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="114">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="115" id="115">
<td>115</td><td><span class="ct">                                        */</span></td></tr>
<tr name="116" id="116">
<td>116</td><td>  <a id="116c3" class="tk">real_T</a> <a id="116c10" class="tk">AngleController_X0</a>;           <span class="ct">/* Expression: 0</span></td></tr>
<tr name="117" id="117">
<td>117</td><td><span class="ct">                                        * Referenced by: '<a class="ct blk" blk_line="117">&lt;Root&gt;/Angle Controller</a>'</span></td></tr>
<tr name="118" id="118">
<td>118</td><td><span class="ct">                                        */</span></td></tr>
<tr name="119" id="119">
<td>119</td><td><span class="br">}</span>;</td></tr>
<tr name="120" id="120">
<td>120</td><td></td></tr>
<tr name="121" id="121">
<td>121</td><td><span class="ct">/* Parameters (auto storage) */</span></td></tr>
<tr name="122" id="122">
<td>122</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <a id="122c16" class="tk">P_inverted_pendulum_T_</a> <a id="122c39" class="tk">P_inverted_pendulum_T</a>;</td></tr>
<tr name="123" id="123">
<td>123</td><td></td></tr>
<tr name="124" id="124">
<td>124</td><td><span class="ct">/* Real-time Model Data Structure */</span></td></tr>
<tr name="125" id="125">
<td>125</td><td><span class="kw">struct</span> <a id="125c8" class="tk">tag_RTM_inverted_pendulum_T</a> <span class="br">{</span></td></tr>
<tr name="126" id="126">
<td>126</td><td>  <span class="kw">const</span> <a id="126c9" class="tk">char_T</a> *<a id="126c17" class="tk">errorStatus</a>;</td></tr>
<tr name="127" id="127">
<td>127</td><td>  <a id="127c3" class="tk">RTWSolverInfo</a> <a id="127c17" class="tk">solverInfo</a>;</td></tr>
<tr name="128" id="128">
<td>128</td><td></td></tr>
<tr name="129" id="129">
<td>129</td><td>  <span class="ct">/*</span></td></tr>
<tr name="130" id="130">
<td>130</td><td><span class="ct">   * ModelData:</span></td></tr>
<tr name="131" id="131">
<td>131</td><td><span class="ct">   * The following substructure contains information regarding</span></td></tr>
<tr name="132" id="132">
<td>132</td><td><span class="ct">   * the data used in the model.</span></td></tr>
<tr name="133" id="133">
<td>133</td><td><span class="ct">   */</span></td></tr>
<tr name="134" id="134">
<td>134</td><td>  <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="135" id="135">
<td>135</td><td>    <a id="135c5" class="tk">X_inverted_pendulum_T</a> *<a id="135c28" class="tk">contStates</a>;</td></tr>
<tr name="136" id="136">
<td>136</td><td>    <a id="136c5" class="tk">int_T</a> *<a id="136c12" class="tk">periodicContStateIndices</a>;</td></tr>
<tr name="137" id="137">
<td>137</td><td>    <a id="137c5" class="tk">real_T</a> *<a id="137c13" class="tk">periodicContStateRanges</a>;</td></tr>
<tr name="138" id="138">
<td>138</td><td>    <a id="138c5" class="tk">real_T</a> *<a id="138c13" class="tk">derivs</a>;</td></tr>
<tr name="139" id="139">
<td>139</td><td>    <a id="139c5" class="tk">boolean_T</a> *<a id="139c16" class="tk">contStateDisabled</a>;</td></tr>
<tr name="140" id="140">
<td>140</td><td>    <a id="140c5" class="tk">boolean_T</a> <a id="140c15" class="tk">zCCacheNeedsReset</a>;</td></tr>
<tr name="141" id="141">
<td>141</td><td>    <a id="141c5" class="tk">boolean_T</a> <a id="141c15" class="tk">derivCacheNeedsReset</a>;</td></tr>
<tr name="142" id="142">
<td>142</td><td>    <a id="142c5" class="tk">boolean_T</a> <a id="142c15" class="tk">blkStateChange</a>;</td></tr>
<tr name="143" id="143">
<td>143</td><td>    <a id="143c5" class="tk">real_T</a> <a id="143c12" class="tk">odeY</a>[2];</td></tr>
<tr name="144" id="144">
<td>144</td><td>    <a id="144c5" class="tk">real_T</a> <a id="144c12" class="tk">odeF</a>[3][2];</td></tr>
<tr name="145" id="145">
<td>145</td><td>    <a id="145c5" class="tk">ODE3_IntgData</a> <a id="145c19" class="tk">intgData</a>;</td></tr>
<tr name="146" id="146">
<td>146</td><td>  <span class="br">}</span> <a id="146c5" class="tk">ModelData</a>;</td></tr>
<tr name="147" id="147">
<td>147</td><td></td></tr>
<tr name="148" id="148">
<td>148</td><td>  <span class="ct">/*</span></td></tr>
<tr name="149" id="149">
<td>149</td><td><span class="ct">   * Sizes:</span></td></tr>
<tr name="150" id="150">
<td>150</td><td><span class="ct">   * The following substructure contains sizes information</span></td></tr>
<tr name="151" id="151">
<td>151</td><td><span class="ct">   * for many of the model attributes such as inputs, outputs,</span></td></tr>
<tr name="152" id="152">
<td>152</td><td><span class="ct">   * dwork, sample times, etc.</span></td></tr>
<tr name="153" id="153">
<td>153</td><td><span class="ct">   */</span></td></tr>
<tr name="154" id="154">
<td>154</td><td>  <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="155" id="155">
<td>155</td><td>    <a id="155c5" class="tk">int_T</a> <a id="155c11" class="tk">numContStates</a>;</td></tr>
<tr name="156" id="156">
<td>156</td><td>    <a id="156c5" class="tk">int_T</a> <a id="156c11" class="tk">numPeriodicContStates</a>;</td></tr>
<tr name="157" id="157">
<td>157</td><td>    <a id="157c5" class="tk">int_T</a> <a id="157c11" class="tk">numSampTimes</a>;</td></tr>
<tr name="158" id="158">
<td>158</td><td>  <span class="br">}</span> <a id="158c5" class="tk">Sizes</a>;</td></tr>
<tr name="159" id="159">
<td>159</td><td></td></tr>
<tr name="160" id="160">
<td>160</td><td>  <span class="ct">/*</span></td></tr>
<tr name="161" id="161">
<td>161</td><td><span class="ct">   * Timing:</span></td></tr>
<tr name="162" id="162">
<td>162</td><td><span class="ct">   * The following substructure contains information regarding</span></td></tr>
<tr name="163" id="163">
<td>163</td><td><span class="ct">   * the timing information for the model.</span></td></tr>
<tr name="164" id="164">
<td>164</td><td><span class="ct">   */</span></td></tr>
<tr name="165" id="165">
<td>165</td><td>  <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="166" id="166">
<td>166</td><td>    <a id="166c5" class="tk">uint32_T</a> <a id="166c14" class="tk">clockTick0</a>;</td></tr>
<tr name="167" id="167">
<td>167</td><td>    <a id="167c5" class="tk">time_T</a> <a id="167c12" class="tk">stepSize0</a>;</td></tr>
<tr name="168" id="168">
<td>168</td><td>    <a id="168c5" class="tk">uint32_T</a> <a id="168c14" class="tk">clockTick1</a>;</td></tr>
<tr name="169" id="169">
<td>169</td><td>    <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="170" id="170">
<td>170</td><td>      <a id="170c7" class="tk">uint8_T</a> <a id="170c15" class="tk">TID</a>[3];</td></tr>
<tr name="171" id="171">
<td>171</td><td>    <span class="br">}</span> <a id="171c7" class="tk">TaskCounters</a>;</td></tr>
<tr name="172" id="172">
<td>172</td><td></td></tr>
<tr name="173" id="173">
<td>173</td><td>    <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="174" id="174">
<td>174</td><td>      <a id="174c7" class="tk">boolean_T</a> <a id="174c17" class="tk">TID0_2</a>;</td></tr>
<tr name="175" id="175">
<td>175</td><td>    <span class="br">}</span> <a id="175c7" class="tk">RateInteraction</a>;</td></tr>
<tr name="176" id="176">
<td>176</td><td></td></tr>
<tr name="177" id="177">
<td>177</td><td>    <a id="177c5" class="tk">SimTimeStep</a> <a id="177c17" class="tk">simTimeStep</a>;</td></tr>
<tr name="178" id="178">
<td>178</td><td>    <a id="178c5" class="tk">boolean_T</a> <a id="178c15" class="tk">stopRequestedFlag</a>;</td></tr>
<tr name="179" id="179">
<td>179</td><td>    <a id="179c5" class="tk">time_T</a> *<a id="179c13" class="tk">t</a>;</td></tr>
<tr name="180" id="180">
<td>180</td><td>    <a id="180c5" class="tk">time_T</a> <a id="180c12" class="tk">tArray</a>[3];</td></tr>
<tr name="181" id="181">
<td>181</td><td>  <span class="br">}</span> <a id="181c5" class="tk">Timing</a>;</td></tr>
<tr name="182" id="182">
<td>182</td><td><span class="br">}</span>;</td></tr>
<tr name="183" id="183">
<td>183</td><td></td></tr>
<tr name="184" id="184">
<td>184</td><td><span class="ct">/* Imported (extern) block signals */</span></td></tr>
<tr name="185" id="185">
<td>185</td><td><span class="kw">extern</span> <a id="185c8" class="tk">real_T</a> <a id="185c15" class="tk">F</a>;                       <span class="ct">/* '<a class="ct blk" blk_line="185">&lt;Root&gt;/Angle Controller</a>' */</span></td></tr>
<tr name="186" id="186">
<td>186</td><td><span class="kw">extern</span> <a id="186c8" class="tk">real_T</a> <a id="186c15" class="tk">Theta</a>;                   <span class="ct">/* '<a class="ct blk" blk_line="186">&lt;Root&gt;/angle</a>' */</span></td></tr>
<tr name="187" id="187">
<td>187</td><td></td></tr>
<tr name="188" id="188">
<td>188</td><td><span class="ct">/* Block parameters (auto storage) */</span></td></tr>
<tr name="189" id="189">
<td>189</td><td><span class="kw">extern</span> <a id="189c8" class="tk">P_inverted_pendulum_T</a> <a id="189c30" class="tk">inverted_pendulum_P</a>;</td></tr>
<tr name="190" id="190">
<td>190</td><td></td></tr>
<tr name="191" id="191">
<td>191</td><td><span class="ct">/* Block signals (auto storage) */</span></td></tr>
<tr name="192" id="192">
<td>192</td><td><span class="kw">extern</span> <a id="192c8" class="tk">B_inverted_pendulum_T</a> <a id="192c30" class="tk">inverted_pendulum_B</a>;</td></tr>
<tr name="193" id="193">
<td>193</td><td></td></tr>
<tr name="194" id="194">
<td>194</td><td><span class="ct">/* Continuous states (auto storage) */</span></td></tr>
<tr name="195" id="195">
<td>195</td><td><span class="kw">extern</span> <a id="195c8" class="tk">X_inverted_pendulum_T</a> <a id="195c30" class="tk">inverted_pendulum_X</a>;</td></tr>
<tr name="196" id="196">
<td>196</td><td></td></tr>
<tr name="197" id="197">
<td>197</td><td><span class="ct">/* External outputs (root outports fed by signals with auto storage) */</span></td></tr>
<tr name="198" id="198">
<td>198</td><td><span class="kw">extern</span> <a id="198c8" class="tk">ExtY_inverted_pendulum_T</a> <a id="198c33" class="tk">inverted_pendulum_Y</a>;</td></tr>
<tr name="199" id="199">
<td>199</td><td></td></tr>
<tr name="200" id="200">
<td>200</td><td><span class="ct">/* External function called from main */</span></td></tr>
<tr name="201" id="201">
<td>201</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="201c13" class="tk">inverted_pendulum_SetEventsForThisBaseStep</a>(<a id="201c56" class="tk">boolean_T</a> *<a id="201c67" class="tk">eventFlags</a>);</td></tr>
<tr name="202" id="202">
<td>202</td><td></td></tr>
<tr name="203" id="203">
<td>203</td><td><span class="ct">/* Model entry point functions */</span></td></tr>
<tr name="204" id="204">
<td>204</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="204c13" class="tk">inverted_pendulum_SetEventsForThisBaseStep</a>(<a id="204c56" class="tk">boolean_T</a> *<a id="204c67" class="tk">eventFlags</a>);</td></tr>
<tr name="205" id="205">
<td>205</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="205c13" class="tk">inverted_pendulum_initialize</a>(<span class="kw">void</span>);</td></tr>
<tr name="206" id="206">
<td>206</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="206c13" class="tk">inverted_pendulum_step0</a>(<span class="kw">void</span>);</td></tr>
<tr name="207" id="207">
<td>207</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="207c13" class="tk">inverted_pendulum_step2</a>(<span class="kw">void</span>);</td></tr>
<tr name="208" id="208">
<td>208</td><td><span class="kw">extern</span> <span class="kw">void</span> <a id="208c13" class="tk">inverted_pendulum_terminate</a>(<span class="kw">void</span>);</td></tr>
<tr name="209" id="209">
<td>209</td><td></td></tr>
<tr name="210" id="210">
<td>210</td><td><span class="ct">/* Real-time Model object */</span></td></tr>
<tr name="211" id="211">
<td>211</td><td><span class="kw">extern</span> <a id="211c8" class="tk">RT_MODEL_inverted_pendulum_T</a> *<span class="kw">const</span> <a id="211c44" class="tk">inverted_pendulum_M</a>;</td></tr>
<tr name="212" id="212">
<td>212</td><td></td></tr>
<tr name="213" id="213">
<td>213</td><td><span class="ct">/*-</span></td></tr>
<tr name="214" id="214">
<td>214</td><td><span class="ct"> * The generated code includes comments that allow you to trace directly</span></td></tr>
<tr name="215" id="215">
<td>215</td><td><span class="ct"> * back to the appropriate location in the model.  The basic format</span></td></tr>
<tr name="216" id="216">
<td>216</td><td><span class="ct"> * is &lt;system&gt;/block_name, where system is the system number (uniquely</span></td></tr>
<tr name="217" id="217">
<td>217</td><td><span class="ct"> * assigned by Simulink) and block_name is the name of the block.</span></td></tr>
<tr name="218" id="218">
<td>218</td><td><span class="ct"> *</span></td></tr>
<tr name="219" id="219">
<td>219</td><td><span class="ct"> * Use the MATLAB hilite_system command to trace the generated code back</span></td></tr>
<tr name="220" id="220">
<td>220</td><td><span class="ct"> * to the model.  For example,</span></td></tr>
<tr name="221" id="221">
<td>221</td><td><span class="ct"> *</span></td></tr>
<tr name="222" id="222">
<td>222</td><td><span class="ct"> * hilite_system('<a class="ct blk" blk_line="222">&lt;S3&gt;</a>')    - opens system 3</span></td></tr>
<tr name="223" id="223">
<td>223</td><td><span class="ct"> * hilite_system('<a class="ct blk" blk_line="223">&lt;S3&gt;/Kp</a>') - opens and selects block Kp which resides in S3</span></td></tr>
<tr name="224" id="224">
<td>224</td><td><span class="ct"> *</span></td></tr>
<tr name="225" id="225">
<td>225</td><td><span class="ct"> * Here is the system hierarchy for this model</span></td></tr>
<tr name="226" id="226">
<td>226</td><td><span class="ct"> *</span></td></tr>
<tr name="227" id="227">
<td>227</td><td><span class="ct"> * '<a class="ct blk" blk_line="227">&lt;Root&gt;</a>' : 'inverted_pendulum'</span></td></tr>
<tr name="228" id="228">
<td>228</td><td><span class="ct"> * '<a class="ct blk" blk_line="228">&lt;S1&gt;</a>'   : 'inverted_pendulum/Disturbance'</span></td></tr>
<tr name="229" id="229">
<td>229</td><td><span class="ct"> * '<a class="ct blk" blk_line="229">&lt;S2&gt;</a>'   : 'inverted_pendulum/Plant'</span></td></tr>
<tr name="230" id="230">
<td>230</td><td><span class="ct"> * '<a class="ct blk" blk_line="230">&lt;S3&gt;</a>'   : 'inverted_pendulum/Position Controller'</span></td></tr>
<tr name="231" id="231">
<td>231</td><td><span class="ct"> * '<a class="ct blk" blk_line="231">&lt;S4&gt;</a>'   : 'inverted_pendulum/Plant/PS-Simulink Converter'</span></td></tr>
<tr name="232" id="232">
<td>232</td><td><span class="ct"> * '<a class="ct blk" blk_line="232">&lt;S5&gt;</a>'   : 'inverted_pendulum/Plant/PS-Simulink Converter1'</span></td></tr>
<tr name="233" id="233">
<td>233</td><td><span class="ct"> * '<a class="ct blk" blk_line="233">&lt;S6&gt;</a>'   : 'inverted_pendulum/Plant/Simulink-PS Converter'</span></td></tr>
<tr name="234" id="234">
<td>234</td><td><span class="ct"> * '<a class="ct blk" blk_line="234">&lt;S7&gt;</a>'   : 'inverted_pendulum/Plant/Simulink-PS Converter1'</span></td></tr>
<tr name="235" id="235">
<td>235</td><td><span class="ct"> * '<a class="ct blk" blk_line="235">&lt;S8&gt;</a>'   : 'inverted_pendulum/Plant/Solver Configuration'</span></td></tr>
<tr name="236" id="236">
<td>236</td><td><span class="ct"> * '<a class="ct blk" blk_line="236">&lt;S9&gt;</a>'   : 'inverted_pendulum/Plant/PS-Simulink Converter/EVAL_KEY'</span></td></tr>
<tr name="237" id="237">
<td>237</td><td><span class="ct"> * '<a class="ct blk" blk_line="237">&lt;S10&gt;</a>'  : 'inverted_pendulum/Plant/PS-Simulink Converter1/EVAL_KEY'</span></td></tr>
<tr name="238" id="238">
<td>238</td><td><span class="ct"> * '<a class="ct blk" blk_line="238">&lt;S11&gt;</a>'  : 'inverted_pendulum/Plant/Simulink-PS Converter/EVAL_KEY'</span></td></tr>
<tr name="239" id="239">
<td>239</td><td><span class="ct"> * '<a class="ct blk" blk_line="239">&lt;S12&gt;</a>'  : 'inverted_pendulum/Plant/Simulink-PS Converter1/EVAL_KEY'</span></td></tr>
<tr name="240" id="240">
<td>240</td><td><span class="ct"> * '<a class="ct blk" blk_line="240">&lt;S13&gt;</a>'  : 'inverted_pendulum/Plant/Solver Configuration/EVAL_KEY'</span></td></tr>
<tr name="241" id="241">
<td>241</td><td><span class="ct"> */</span></td></tr>
<tr name="242" id="242">
<td>242</td><td><span class="pp">#endif</span>                                 <span class="ct">/* RTW_HEADER_inverted_pendulum_h_ */</span></td></tr>
<tr name="243" id="243">
<td>243</td><td></td></tr>
<tr name="244" id="244">
<td>244</td><td><span class="ct">/*</span></td></tr>
<tr name="245" id="245">
<td>245</td><td><span class="ct"> * File trailer for generated code.</span></td></tr>
<tr name="246" id="246">
<td>246</td><td><span class="ct"> *</span></td></tr>
<tr name="247" id="247">
<td>247</td><td><span class="ct"> * [EOF]</span></td></tr>
<tr name="248" id="248">
<td>248</td><td><span class="ct"> */</span></td></tr>
<tr name="249" id="249">
<td>249</td><td></td></tr>
</table>
</pre>
</body>
</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><script language="JavaScript" type="text/javascript">function rtwTableShrink(o) {var t = o.nextSibling;if (t.nodeType != 1) {t = t.nextSibling;}if (t.style.display == "none") {t.style.display = "";o.innerHTML = "[-]"} else {t.style.display = "none";o.innerHTML = "[+] ... "}}</script><script language="JavaScript" type="text/javascript" src="rtwreport_utils.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>
Code Interface Report for inverted_pendulum
</title>

</head>
<body ONLOAD="try {if (top) {if (top.rtwPageOnLoad) top.rtwPageOnLoad('rtwIdCodeInterface'); else local_onload();}} catch(err) {};">
<h1>
Code Interface Report for inverted_pendulum
</h1>
<h3>
Table of Contents
</h3>
<ul>
<li>
<a href="#sec_Entry_Point_Functions">
Entry Point Functions
</a>

</li>
<li>
<a href="#sec_Inports">
Inports
</a>

</li>
<li>
<a href="#sec_Outports">
Outports
</a>

</li>
<li>
<a href="#sec_Interface_Parameters">
Interface Parameters
</a>

</li>
<li>
<a href="#sec_Data_Stores">
Data Stores
</a>

</li>

</ul>
<h3>
<a name="sec_Entry_Point_Functions">
Entry Point Functions
</a>

</h3>
<p>
Function: <a href="inverted_pendulum_c.html#fcn_inverted_pendulum_initialize">inverted_pendulum_initialize</a>
</p>
<table width="100%" class="AltRow" cellspacing="0">
<tr class="even">
<td width="25%" align="left" valign="top">
Prototype
</td>
<td width="75%" align="left" valign="top">
<b>
void inverted_pendulum_initialize(void)
</b>

</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Description
</td>
<td width="75%" align="left" valign="top">
Initialization entry point of generated code
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Timing
</td>
<td width="75%" align="left" valign="top">
Must be called exactly once
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Arguments
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Return value
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Header file
</td>
<td width="75%" align="left" valign="top">
<a href="inverted_pendulum_h.html">inverted_pendulum.h</a>
</td>

</tr>

</table>
<p>
Function: <a href="inverted_pendulum_c.html#fcn_inverted_pendulum_step0">inverted_pendulum_step0</a>
</p>
<table width="100%" class="AltRow" cellspacing="0">
<tr class="even">
<td width="25%" align="left" valign="top">
Prototype
</td>
<td width="75%" align="left" valign="top">
<b>
void inverted_pendulum_step0(void)
</b>

</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Description
</td>
<td width="75%" align="left" valign="top">
Output entry point of generated code
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Timing
</td>
<td width="75%" align="left" valign="top">
Must be called periodically, every 0.1 seconds
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Arguments
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Return value
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Header file
</td>
<td width="75%" align="left" valign="top">
<a href="inverted_pendulum_h.html">inverted_pendulum.h</a>
</td>

</tr>

</table>
<p>
Function: <a href="inverted_pendulum_c.html#fcn_inverted_pendulum_step2">inverted_pendulum_step2</a>
</p>
<table width="100%" class="AltRow" cellspacing="0">
<tr class="even">
<td width="25%" align="left" valign="top">
Prototype
</td>
<td width="75%" align="left" valign="top">
<b>
void inverted_pendulum_step2(void)
</b>

</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Description
</td>
<td width="75%" align="left" valign="top">
Output entry point of generated code
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Timing
</td>
<td width="75%" align="left" valign="top">
Must be called periodically, every 1 second
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Arguments
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Return value
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Header file
</td>
<td width="75%" align="left" valign="top">
<a href="inverted_pendulum_h.html">inverted_pendulum.h</a>
</td>

</tr>

</table>
<p>
Function: <a href="inverted_pendulum_c.html#fcn_inverted_pendulum_terminate">inverted_pendulum_terminate</a>
</p>
<table width="100%" class="AltRow" cellspacing="0">
<tr class="even">
<td width="25%" align="left" valign="top">
Prototype
</td>
<td width="75%" align="left" valign="top">
<b>
void inverted_pendulum_terminate(void)
</b>

</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Description
</td>
<td width="75%" align="left" valign="top">
Termination entry point of generated code
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Timing
</td>
<td width="75%" align="left" valign="top">
Must be called exactly once
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Arguments
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="even">
<td width="25%" align="left" valign="top">
Return value
</td>
<td width="75%" align="left" valign="top">
None
</td>

</tr>
<tr class="odd">
<td width="25%" align="left" valign="top">
Header file
</td>
<td width="75%" align="left" valign="top">
<a href="inverted_pendulum_h.html">inverted_pendulum.h</a>
</td>

</tr>

</table>
<h3>
<a name="sec_Inports">
Inports
</a>

</h3>
<table width="100%" class="AltRow FirstColumn" cellspacing="0">
<tr class="heading">
<th width="42%" align="left" valign="top">
<b>
Block Name
</b>

</th>
<th width="26%" align="left" valign="top">
<b>
Code Identifier
</b>

</th>
<th width="21%" align="left" valign="top">
<b>
Data Type
</b>

</th>
<th width="10%" align="right" valign="top">
<b>
Dimension
</b>

</th>

</tr>
<tr class="even">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:76')" name="code2model" class="code2model">&lt;Root&gt;/angle</a>
</td>
<td width="26%" align="left" valign="top">
<i>
Imported data:
</i>
Theta
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
1
</td>

</tr>

</table>
<h3>
<a name="sec_Outports">
Outports
</a>

</h3>
<table width="100%" class="AltRow FirstColumn" cellspacing="0">
<tr class="heading">
<th width="42%" align="left" valign="top">
<b>
Block Name
</b>

</th>
<th width="26%" align="left" valign="top">
<b>
Code Identifier
</b>

</th>
<th width="21%" align="left" valign="top">
<b>
Data Type
</b>

</th>
<th width="10%" align="right" valign="top">
<b>
Dimension
</b>

</th>

</tr>
<tr class="even">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:75')" name="code2model" class="code2model">&lt;Root&gt;/accel</a>
</td>
<td width="26%" align="left" valign="top">
inverted_pendulum_Y.accel
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
1
</td>

</tr>

</table>
<h3>
<a name="sec_Interface_Parameters">
Interface Parameters
</a>

</h3>
<span title="Click to shrink or expand table" onclick="rtwTableShrink(this)">[-]</span><table width="100%" class="AltRow FirstColumn" cellspacing="0">
<tr class="heading">
<th width="42%" align="left" valign="top">
<b>
Parameter Source
</b>

</th>
<th width="26%" align="left" valign="top">
<b>
Code Identifier
</b>

</th>
<th width="21%" align="left" valign="top">
<b>
Data Type
</b>

</th>
<th width="10%" align="right" valign="top">
<b>
Dimension
</b>

</th>

</tr>
<tr class="even">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:70')" name="code2model" class="code2model">&lt;Root&gt;/Angle Controller</a>
</td>
<td width="26%" align="left" valign="top">
inverted_pendulum_P.AngleController_A
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
[4  1]
</td>

</tr>
<tr class="odd">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:70')" name="code2model" class="code2model">&lt;Root&gt;/Angle Controller</a>
</td>
<td width="26%" align="left" valign="top">
inverted_pendulum_P.AngleController_B
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
[2  1]
</td>

</tr>
<tr class="even">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:70')" name="code2model" class="code2model">&lt;Root&gt;/Angle Controller</a>
</td>
<td width="26%" align="left" valign="top">
inverted_pendulum_P.AngleController_C
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
[2  1]
</td>

</tr>
<tr class="odd">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:70')" name="code2model" class="code2model">&lt;Root&gt;/Angle Controller</a>
</td>
<td width="26%" align="left" valign="top">
inverted_pendulum_P.AngleController_D
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
1
</td>

</tr>
<tr class="even">
<td width="42%" align="left" valign="top">
<a href="matlab:coder.internal.code2model('inverted_pendulum:70')" name="code2model" class="code2model">&lt;Root&gt;/Angle Controller</a>
</td>
<td width="26%" align="left" valign="top">
inverted_pendulum_P.AngleController_X0
</td>
<td width="21%" align="left" valign="top">
real_T
</td>
<td width="10%" align="right" valign="top">
1
</td>

</tr>

</table>
<h3>
<a name="sec_Data_Stores">
Data Stores
</a>

</h3>
<p>
No data stores in the model; note that this report lists only data stores with non-auto storage class and global data stores
</p>

</body>

</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><script language="JavaScript" type="text/javascript" src="rtwshrink.js"></script><title>
Static Code Metrics Report
</title>

</head>
<body onload="try {if (top) {if (top.rtwPageOnLoad) top.rtwPageOnLoad('rtwIdCodeMetrics'); else local_onload();}} catch(err) {};">
<h1>
Static Code Metrics Report
</h1>
<div>

</div>
<div>

</div>
<h3 name="sec_Error_Report" id="sec_Error_Report">
Error Report
</h3>
<table width="100%" border="0">
<tr>
<td align="left" valign="top">
Static code metrics report was not successfully generated because of the following errors.
</td>

</tr>
<tr>
<td align="left" valign="top">
<table width="100%" cellpadding="2" border="1">
<tr style="background-color: #eeeeff">
<td width="50%" align="left" valign="top" style="border-style: none">
<b>
File
</b>

</td>
<td width="12%" align="left" valign="top" style="border-style: none">
<b>
Line
</b>

</td>
<td width="37%" align="left" valign="top" style="border-style: none">
<b>
Description
</b>

</td>

</tr>
<tr style="background-color: #ffffff">
<td width="50%" align="left" valign="top" style="border-style: none">
C:\MATLAB\SupportPackages\R2015a\STM32F4-Discovery_FW_V1.1.0\Libraries\CMSIS\ST\STM32F4xx\Include\stm32f4xx.h
</td>
<td width="12%" align="left" valign="top" style="border-style: none">
245
</td>
<td width="37%" align="left" valign="top" style="border-style: none">
cannot open source file "core_cm4.h"
</td>

</tr>

</table>

</td>

</tr>

</table>

</body>

</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><title>
Code replacements in inverted_pendulum
</title>

</head>
<body onload="try {if (top) {if (top.rtwPageOnLoad) top.rtwPageOnLoad('rtwIdCodeReplacements'); else local_onload();}} catch(err) {};">
<h1>
Code replacements in inverted_pendulum
</h1>
<div>

</div>
<img src="hilite_warning.png" />Code replacements report not generated. Select 'Summarize which blocks triggered code replacements' in the Configuration Parameters > Code Generation > Report pane and then rebuild the model.
</body>

</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><title>
Non-virtual subsystems in inverted_pendulum
</title>

</head>
<body onload="try {if (top) {if (top.rtwPageOnLoad) top.rtwPageOnLoad('rtwIdSubsystem'); else local_onload();}} catch(err) {};">
<h1>
Non-virtual subsystems in inverted_pendulum
</h1>
<div>

</div>
<div>

</div>
<h3 name="sec_Code_Mapping" id="sec_Code_Mapping">
1. Code Mapping <span title="Click to shrink or expand section" style="cursor:pointer;font-weight:normal;" id="rtwIdSubsystem_table_001_control" onclick ="if (top) if (top.rtwTableShrink) top.rtwTableShrink(window.document, this, 'rtwIdSubsystem_table_001', false)"><span class="shrink-button">[<u>hide</u>]</span></span>
</h3>
<table width="100%" name="rtwIdSubsystem_table_001" id="rtwIdSubsystem_table_001" border="0">
<tr>
<td align="left" valign="top">
<p>
The following table: <br /><ul>
<li>
provides a mapping from the non-virtual subsystems in the model to functions or reusable functions in the generated code and
</li>
<li>
notes exceptions that caused some non-virtual subsystems to not reuse code even though they were assigned a function packaging setting ('Function packaging' entry on the Subsystem Block Dialog) of 'Auto' or 'Reusable function'.
</li>

</ul>

</p>

</td>

</tr>
<tr>
<td align="left" valign="top">
<b>
No non-virtual subsystems generating functions in model
</b>

</td>

</tr>

</table>
<h3 name="sec_Code_Reuse_Exceptions" id="sec_Code_Reuse_Exceptions">
2. Code Reuse Exceptions <span title="Click to shrink or expand section" style="cursor:pointer;font-weight:normal;" id="rtwIdSubsystem_table_002_control" onclick ="if (top) if (top.rtwTableShrink) top.rtwTableShrink(window.document, this, 'rtwIdSubsystem_table_002', false)"><span class="shrink-button">[<u>hide</u>]</span></span>
</h3>
<table width="100%" name="rtwIdSubsystem_table_002" id="rtwIdSubsystem_table_002" border="0">
<tr>
<td align="left" valign="top">
<p>
The following section provides details on each exception that caused a non-virtual subsystem with a function packaging setting of<br /><ul>
<li>
'Auto' to become an inlined code segment,
</li>
<li>
'Auto' to become a non-reusable function without arguments, or
</li>
<li>
'Reusable function' to become a non-reusable function without arguments.
</li>

</ul>
<b>Note:</b>This section does not report graphically identical non-virtual subsystems marked as 'Auto' that were not reused due to differences in their functional properties (such as dimensions, datatypes, work vectors, parameters, etc.).  You may identify reasons for non-reuse in such cases by inspecting the differences in the functional attributes of the subsystems in the model or in the inlined generated code.
</p>

</td>

</tr>
<tr>
<td align="left" valign="top">
<br /><b>No reuse exception in model</b>
</td>

</tr>

</table>

</body>

</html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><link rel="stylesheet" type="text/css" href="rtwreport.css" /><title>
Code Generation Report for 'inverted_pendulum'
</title>

</head>
<body onload="try {if (top) {if (top.rtwPageOnLoad) top.rtwPageOnLoad('rtwIdSummaryPage'); else local_onload();}} catch(err) {};">
<h1>
Code Generation Report for 'inverted_pendulum'
</h1>
<div>

</div>
<div>

</div>
<h3 name="sec_Summary" id="sec_Summary">
Summary
</h3>
<table width="100%" border="0">
<tr>
<td align="left" valign="top">
Code generation for model "inverted_pendulum"
</td>

</tr>
<tr>
<td align="left" valign="top">
<p>
<br /><table class="AltRow" cellspacing="0">
<tr class="even">
<td align="left" valign="top">
Model version
</td>
<td align="left" valign="top">
1.48
</td>

</tr>
<tr class="odd">
<td align="left" valign="top">
Simulink Coder version
</td>
<td align="left" valign="top">
8.8 (R2015a) 09-Feb-2015
</td>

</tr>
<tr class="even">
<td align="left" valign="top">
C source code generated on
</td>
<td align="left" valign="top">
Thu Jan 28 21:02:07 2016
</td>

</tr>

</table>
<br /><table cellpadding="0" border="0">
<tr>
<td align="left" valign="top">
Configuration settings at the time of code generation: <a href="../../slprj/ert/inverted_pendulum/tmwinternal/binfo.mat?inverted_pendulum" id="linkToCS">
click to open
</a>
<span style="display:none" id="linkToCS_disabled" title="Link to configuration set is only available in MATLAB browser">
click to open
</span>

</td>

</tr>
<tr>
<td align="left" valign="top">
Code generation objectives: <b>
<font Color="orange">
Unspecified
</font>

</b>

</td>

</tr>
<tr>
<td align="left" valign="top">
Validation result: Not run
</td>

</tr>

</table>

</p>

</td>

</tr>

</table>

</body>

</html>
<HTML><HEAD><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><TITLE>Traceability Report for inverted_pendulum</TITLE><LINK rel="stylesheet" type="text/css" href="rtwreport.css" /><STYLE type="text/css">TABLE { border-style: outset; border-width: 1px; width: 100% } P { margin-top: 0; margin-bottom: 0 } PRE { margin: 0 }</STYLE><SCRIPT type="text/javascript" language="JavaScript" src="slwebview.js"></SCRIPT>
<SCRIPT type="text/javascript" language="JavaScript" src="id_mapping.js"></SCRIPT>

<SCRIPT language="JavaScript" type="text/javascript"> 
<!--
function rtwTraceHilite(file,ext,ln) { 
    function loc_hilite(file,ext,ln) { 
        if (top.rtwMainReloadNoPanel) top.rtwMainReloadNoPanel(file+"."+ext+":"+ln); 
        else window.location = file+"_"+ext+".html#"+ln; 
    } 
    var webviewFrame = top.document.getElementById('rtw_webviewMidFrame');
    if (webviewFrame) {
       loc_hilite(file,ext,ln);
       return;
    } else {
        if (top && top.rtwreport_document_frame) 
            top.rtwreport_document_frame.location.href = file+"_"+ext+".html#"+ln; 
    } 
}
//-->
</SCRIPT></HEAD><BODY ONLOAD="try {if (top) {if (top.rtwPageOnLoad) top.rtwPageOnLoad('rtwIdTraceability'); else local_onload();}} catch(err) {};"><DIV class="title" id="title"><H1>Traceability Report for inverted_pendulum</H1>
<P align="right"><A style="text-decoration: none;" title="Generates a XLS file that contains a traceability matrix" href="matlab:RTW.TraceInfoBase.htmlExportTraceLaunch('inverted_pendulum')"><BUTTON name="MATLAB_link">Generate Traceability Matrix</BUTTON></A></P>
<DIV class="toc" id="toc"><H3>Table of Contents</H3><OL><LI><A href="#href_untraceable">Eliminated / Virtual Blocks</A></LI><LI><A href="#href_traceable">Traceable Simulink Blocks / Stateflow Objects / MATLAB Functions</A><UL class="toc_systems" id="toc_systems"><LI><A href="#href_sys0">inverted_pendulum</A></LI><LI><A href="#href_sys1">inverted_pendulum/Disturbance</A></LI><LI><A href="#href_sys2">inverted_pendulum/Plant</A></LI><LI><A href="#href_sys3">inverted_pendulum/Position Controller</A></LI><LI><A href="#href_sys4">inverted_pendulum/Plant/PS-Simulink
Converter</A></LI><LI><A href="#href_sys5">inverted_pendulum/Plant/PS-Simulink
Converter1</A></LI><LI><A href="#href_sys6">inverted_pendulum/Plant/Simulink-PS
Converter</A></LI><LI><A href="#href_sys7">inverted_pendulum/Plant/Simulink-PS
Converter1</A></LI><LI><A href="#href_sys8">inverted_pendulum/Plant/Solver
Configuration</A></LI><LI><A href="#href_sys9">inverted_pendulum/Plant/PS-Simulink
Converter/EVAL_KEY</A></LI><LI><A href="#href_sys10">inverted_pendulum/Plant/PS-Simulink
Converter1/EVAL_KEY</A></LI><LI><A href="#href_sys11">inverted_pendulum/Plant/Simulink-PS
Converter/EVAL_KEY</A></LI><LI><A href="#href_sys12">inverted_pendulum/Plant/Simulink-PS
Converter1/EVAL_KEY</A></LI><LI><A href="#href_sys13">inverted_pendulum/Plant/Solver
Configuration/EVAL_KEY</A></LI></UL></LI></OL></DIV></DIV><DIV class="contents" id="contents"><DIV class="section1" id="sec_eliminated_virtual"><H3><A id="href_untraceable">Eliminated / Virtual Blocks</A></H3><TABLE class="AltRow" cellspacing="0"><TR><TH>Block Name</TH><TH>Comment</TH></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:39')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Disturbance</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:41')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Plant</i></font></a></TD><TD><P>Virtual SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Position Controller</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:63')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Step</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:27')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Sum</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:71')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/x</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:39:1')" name="code2model"><font color="#117755"><i>&lt;S1&gt;/Demux</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:39:2')" name="code2model"><font color="#117755"><i>&lt;S1&gt;/FromWs</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:39:3')" name="code2model"><font color="#117755"><i>&lt;S1&gt;/Signal 1</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:59')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/dF</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:42')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/F</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:43')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Cart</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:61')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/External Force 
and Torque</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:44')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Mechanism 
Configuration</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:45')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/PS-Simulink
Converter</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:46')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/PS-Simulink
Converter1</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:47')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Pendulum</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:48')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Prismatic 
Joint</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:49')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Revolute Joint</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:50')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Rigid 
Transform1</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:74')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Rigid 
Transform2</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:51')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Rigid 
Transform3</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:52')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Rigid 
Transform4</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Simulink-PS
Converter</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Simulink-PS
Converter1</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/Solver
Configuration</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:55')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/World Frame</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:56')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/x</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:57')" name="code2model"><font color="#117755"><i>&lt;S2&gt;/theta</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/u</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1657')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/Derivative Gain</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1658')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/Filter</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1659')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/Filter Coefficient</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1656')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/Proportional Gain</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1655')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/Sum</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:1660')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/SumD</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:68:10')" name="code2model"><font color="#117755"><i>&lt;S3&gt;/y</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:45:11')" name="code2model"><font color="#117755"><i>&lt;S4&gt;/EVAL_KEY</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:45:14')" name="code2model"><font color="#117755"><i>&lt;S4&gt;/input</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:45:13')" name="code2model"><font color="#117755"><i>&lt;S4&gt;/output</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:46:11')" name="code2model"><font color="#117755"><i>&lt;S5&gt;/EVAL_KEY</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:46:14')" name="code2model"><font color="#117755"><i>&lt;S5&gt;/input</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:46:13')" name="code2model"><font color="#117755"><i>&lt;S5&gt;/output</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:6')" name="code2model"><font color="#117755"><i>&lt;S6&gt;/input0</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2')" name="code2model"><font color="#117755"><i>&lt;S6&gt;/EVAL_KEY</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:7')" name="code2model"><font color="#117755"><i>&lt;S6&gt;/input1</i></font></a></TD><TD><P>Ground</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:8')" name="code2model"><font color="#117755"><i>&lt;S6&gt;/input2</i></font></a></TD><TD><P>Ground</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:9')" name="code2model"><font color="#117755"><i>&lt;S6&gt;/output</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:6')" name="code2model"><font color="#117755"><i>&lt;S7&gt;/input0</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2')" name="code2model"><font color="#117755"><i>&lt;S7&gt;/EVAL_KEY</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:7')" name="code2model"><font color="#117755"><i>&lt;S7&gt;/input1</i></font></a></TD><TD><P>Ground</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:8')" name="code2model"><font color="#117755"><i>&lt;S7&gt;/input2</i></font></a></TD><TD><P>Ground</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:9')" name="code2model"><font color="#117755"><i>&lt;S7&gt;/output</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16')" name="code2model"><font color="#117755"><i>&lt;S8&gt;/EVAL_KEY</i></font></a></TD><TD><P>Masked SubSystem</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:17')" name="code2model"><font color="#117755"><i>&lt;S8&gt;/a</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:45:11:33')" name="code2model"><font color="#117755"><i>&lt;S9&gt;/FROM_OUTPUT_1_1_</i></font></a></TD><TD><P>From</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:45:11:12')" name="code2model"><font color="#117755"><i>&lt;S9&gt;/output</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:46:11:33')" name="code2model"><font color="#117755"><i>&lt;S10&gt;/FROM_OUTPUT_2_1_</i></font></a></TD><TD><P>From</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:46:11:12')" name="code2model"><font color="#117755"><i>&lt;S10&gt;/output</i></font></a></TD><TD><P>Outport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2:3')" name="code2model"><font color="#117755"><i>&lt;S11&gt;/input0</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2:4')" name="code2model"><font color="#117755"><i>&lt;S11&gt;/input1</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2:5')" name="code2model"><font color="#117755"><i>&lt;S11&gt;/input2</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2:64')" name="code2model"><font color="#117755"><i>&lt;S11&gt;/GOTO_0</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2:65')" name="code2model"><font color="#117755"><i>&lt;S11&gt;/GOTO_1</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2:66')" name="code2model"><font color="#117755"><i>&lt;S11&gt;/GOTO_2</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2:3')" name="code2model"><font color="#117755"><i>&lt;S12&gt;/input0</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2:4')" name="code2model"><font color="#117755"><i>&lt;S12&gt;/input1</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2:5')" name="code2model"><font color="#117755"><i>&lt;S12&gt;/input2</i></font></a></TD><TD><P>Inport</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2:64')" name="code2model"><font color="#117755"><i>&lt;S12&gt;/GOTO_0</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2:65')" name="code2model"><font color="#117755"><i>&lt;S12&gt;/GOTO_1</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2:66')" name="code2model"><font color="#117755"><i>&lt;S12&gt;/GOTO_2</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:200')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_1_1_1</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:207')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_2_1_1</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:195')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_DEMUX_1_0</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:197')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_DEMUX_1_1</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:199')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_DEMUX_1_2</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:202')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_DEMUX_2_0</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:204')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_DEMUX_2_1</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:206')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_DEMUX_2_2</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:194')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_FROM_1_0</i></font></a></TD><TD><P>From</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:196')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_FROM_1_1</i></font></a></TD><TD><P>From</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:198')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_FROM_1_2</i></font></a></TD><TD><P>From</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:201')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_FROM_2_0</i></font></a></TD><TD><P>From</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:203')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_FROM_2_1</i></font></a></TD><TD><P>From</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:205')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/INPUT_FROM_2_2</i></font></a></TD><TD><P>From</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:210')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/OUTPUT_1_0</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:211')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/OUTPUT_DEMUX_1_0</i></font></a></TD><TD><P>Demux</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:213')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/OUTPUT_GOTO_1</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:215')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/OUTPUT_GOTO_2</i></font></a></TD><TD><P>Goto</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:212')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/OUTPUT_MUX_1</i></font></a></TD><TD><P>Mux</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:214')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/OUTPUT_MUX_2</i></font></a></TD><TD><P>Mux</P></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:209')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/SINK_1</i></font></a></TD><TD><P>Not traceable</P></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16:208')" name="code2model"><font color="#117755"><i>&lt;S13&gt;/STATE_1</i></font></a></TD><TD><P>Not traceable</P></TD></TR></TABLE></DIV><DIV class="section1" id="sec_traceable"><H3><A id="href_traceable">Traceable Simulink Blocks / Stateflow Objects / MATLAB Functions</A></H3><DIV class="section2" id="sec_traceable_1"><H4>Root system: <A id="href_sys0"><a href="matlab:coder.internal.code2model('inverted_pendulum')" name="code2model">inverted_pendulum</a></A></H4><TABLE class="AltRow" cellspacing="0"><TR><TH>Object Name</TH><TH>Code Location</TH></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:76')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/angle</i></font></a></TD><TD><A href="javascript:rtwTraceHilite('inverted_pendulum','c','220');">inverted_pendulum.c:220</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','266');">266</A><BR /><A href="javascript:rtwTraceHilite('inverted_pendulum','h','186');">inverted_pendulum.h:186</A></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:70')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Angle Controller</i></font></a></TD><TD><A href="javascript:rtwTraceHilite('inverted_pendulum','c','38');">inverted_pendulum.c:38</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','43');">43</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','48');">48</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','52');">52</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','55');">55</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','219');">219</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','265');">265</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','349');">349</A><BR /><A href="javascript:rtwTraceHilite('inverted_pendulum','h','73');">inverted_pendulum.h:73</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','78');">78</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','83');">83</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','105');">105</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','108');">108</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','111');">111</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','114');">114</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','117');">117</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','h','185');">185</A></TD></TR><TR class="even"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:78')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/Zero-Order
Hold</i></font></a></TD><TD><A href="javascript:rtwTraceHilite('inverted_pendulum','c','229');">inverted_pendulum.c:229</A>, <A href="javascript:rtwTraceHilite('inverted_pendulum','c','235');">235</A><BR /><A href="javascript:rtwTraceHilite('inverted_pendulum','h','68');">inverted_pendulum.h:68</A></TD></TR><TR class="odd"><TD><a href="matlab:coder.internal.code2model('inverted_pendulum:75')" name="code2model"><font color="#117755"><i>&lt;Root&gt;/accel</i></font></a></TD><TD><A href="javascript:rtwTraceHilite('inverted_pendulum','c','287');">inverted_pendulum.c:287</A><BR /><A href="javascript:rtwTraceHilite('inverted_pendulum','h','99');">inverted_pendulum.h:99</A></TD></TR></TABLE></DIV><DIV class="section2" id="sec_traceable_2"><H4>Subsystem: <A id="href_sys1"><a href="matlab:coder.internal.code2model('inverted_pendulum:39')" name="code2model">inverted_pendulum/Disturbance</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_3"><H4>Subsystem: <A id="href_sys2"><a href="matlab:coder.internal.code2model('inverted_pendulum:41')" name="code2model">inverted_pendulum/Plant</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_4"><H4>Subsystem: <A id="href_sys3"><a href="matlab:coder.internal.code2model('inverted_pendulum:68')" name="code2model">inverted_pendulum/Position Controller</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_5"><H4>Subsystem: <A id="href_sys4"><a href="matlab:coder.internal.code2model('inverted_pendulum:45')" name="code2model">inverted_pendulum/Plant/PS-Simulink
Converter</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_6"><H4>Subsystem: <A id="href_sys5"><a href="matlab:coder.internal.code2model('inverted_pendulum:46')" name="code2model">inverted_pendulum/Plant/PS-Simulink
Converter1</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_7"><H4>Subsystem: <A id="href_sys6"><a href="matlab:coder.internal.code2model('inverted_pendulum:53')" name="code2model">inverted_pendulum/Plant/Simulink-PS
Converter</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_8"><H4>Subsystem: <A id="href_sys7"><a href="matlab:coder.internal.code2model('inverted_pendulum:60')" name="code2model">inverted_pendulum/Plant/Simulink-PS
Converter1</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_9"><H4>Subsystem: <A id="href_sys8"><a href="matlab:coder.internal.code2model('inverted_pendulum:54')" name="code2model">inverted_pendulum/Plant/Solver
Configuration</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_10"><H4>Subsystem: <A id="href_sys9"><a href="matlab:coder.internal.code2model('inverted_pendulum:45:11')" name="code2model">inverted_pendulum/Plant/PS-Simulink
Converter/EVAL_KEY</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_11"><H4>Subsystem: <A id="href_sys10"><a href="matlab:coder.internal.code2model('inverted_pendulum:46:11')" name="code2model">inverted_pendulum/Plant/PS-Simulink
Converter1/EVAL_KEY</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_12"><H4>Subsystem: <A id="href_sys11"><a href="matlab:coder.internal.code2model('inverted_pendulum:53:2')" name="code2model">inverted_pendulum/Plant/Simulink-PS
Converter/EVAL_KEY</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_13"><H4>Subsystem: <A id="href_sys12"><a href="matlab:coder.internal.code2model('inverted_pendulum:60:2')" name="code2model">inverted_pendulum/Plant/Simulink-PS
Converter1/EVAL_KEY</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV><DIV class="section2" id="sec_traceable_14"><H4>Subsystem: <A id="href_sys13"><a href="matlab:coder.internal.code2model('inverted_pendulum:54:16')" name="code2model">inverted_pendulum/Plant/Solver
Configuration/EVAL_KEY</a></A></H4><P>No traceable objects in this Subsystem.</P></DIV></DIV></DIV></BODY></HTML>function RTW_Sid2UrlHash() {
	this.urlHashMap = new Array();
	/* <Root>/angle */
	this.urlHashMap["inverted_pendulum:76"] = "inverted_pendulum.c:220,266&inverted_pendulum.h:186";
	/* <Root>/Angle Controller */
	this.urlHashMap["inverted_pendulum:70"] = "inverted_pendulum.c:38,43,48,52,55,219,265,349&inverted_pendulum.h:73,78,83,105,108,111,114,117,185";
	/* <Root>/Step */
	this.urlHashMap["inverted_pendulum:63"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Step";
	/* <Root>/Sum */
	this.urlHashMap["inverted_pendulum:27"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Sum";
	/* <Root>/Zero-Order
Hold */
	this.urlHashMap["inverted_pendulum:78"] = "inverted_pendulum.c:229,235&inverted_pendulum.h:68";
	/* <Root>/x */
	this.urlHashMap["inverted_pendulum:71"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/x";
	/* <Root>/accel */
	this.urlHashMap["inverted_pendulum:75"] = "inverted_pendulum.c:287&inverted_pendulum.h:99";
	/* <S1>/FromWs */
	this.urlHashMap["inverted_pendulum:39:2"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Disturbance/FromWs";
	/* <S2>/Cart */
	this.urlHashMap["inverted_pendulum:43"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Cart";
	/* <S2>/External Force 
and Torque */
	this.urlHashMap["inverted_pendulum:61"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/External%20Force%20%20and%20Torque";
	/* <S2>/Mechanism 
Configuration */
	this.urlHashMap["inverted_pendulum:44"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Mechanism%20%20Configuration";
	/* <S2>/Pendulum */
	this.urlHashMap["inverted_pendulum:47"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Pendulum";
	/* <S2>/Prismatic 
Joint */
	this.urlHashMap["inverted_pendulum:48"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Prismatic%20%20Joint";
	/* <S2>/Revolute Joint */
	this.urlHashMap["inverted_pendulum:49"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Revolute%20Joint";
	/* <S2>/Rigid 
Transform1 */
	this.urlHashMap["inverted_pendulum:50"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Rigid%20%20Transform1";
	/* <S2>/Rigid 
Transform2 */
	this.urlHashMap["inverted_pendulum:74"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Rigid%20%20Transform2";
	/* <S2>/Rigid 
Transform3 */
	this.urlHashMap["inverted_pendulum:51"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Rigid%20%20Transform3";
	/* <S2>/Rigid 
Transform4 */
	this.urlHashMap["inverted_pendulum:52"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Rigid%20%20Transform4";
	/* <S2>/World Frame */
	this.urlHashMap["inverted_pendulum:55"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/World%20Frame";
	/* <S3>/Derivative Gain */
	this.urlHashMap["inverted_pendulum:68:1657"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Position%20Controller/Derivative%20Gain";
	/* <S3>/Filter */
	this.urlHashMap["inverted_pendulum:68:1658"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Position%20Controller/Filter";
	/* <S3>/Filter Coefficient */
	this.urlHashMap["inverted_pendulum:68:1659"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Position%20Controller/Filter%20Coefficient";
	/* <S3>/Proportional Gain */
	this.urlHashMap["inverted_pendulum:68:1656"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Position%20Controller/Proportional%20Gain";
	/* <S3>/Sum */
	this.urlHashMap["inverted_pendulum:68:1655"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Position%20Controller/Sum";
	/* <S3>/SumD */
	this.urlHashMap["inverted_pendulum:68:1660"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Position%20Controller/SumD";
	/* <S4>/input */
	this.urlHashMap["inverted_pendulum:45:14"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/PS-Simulink%20Converter/input";
	/* <S5>/input */
	this.urlHashMap["inverted_pendulum:46:14"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/PS-Simulink%20Converter1/input";
	/* <S6>/output */
	this.urlHashMap["inverted_pendulum:53:9"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Simulink-PS%20Converter/output";
	/* <S7>/output */
	this.urlHashMap["inverted_pendulum:60:9"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Simulink-PS%20Converter1/output";
	/* <S8>/a */
	this.urlHashMap["inverted_pendulum:54:17"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Solver%20Configuration/a";
	/* <S13>/INPUT_1_1_1 */
	this.urlHashMap["inverted_pendulum:54:16:200"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Solver%20Configuration/EVAL_KEY/INPUT_1_1_1";
	/* <S13>/INPUT_2_1_1 */
	this.urlHashMap["inverted_pendulum:54:16:207"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Solver%20Configuration/EVAL_KEY/INPUT_2_1_1";
	/* <S13>/OUTPUT_1_0 */
	this.urlHashMap["inverted_pendulum:54:16:210"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Solver%20Configuration/EVAL_KEY/OUTPUT_1_0";
	/* <S13>/SINK_1 */
	this.urlHashMap["inverted_pendulum:54:16:209"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Solver%20Configuration/EVAL_KEY/SINK_1";
	/* <S13>/STATE_1 */
	this.urlHashMap["inverted_pendulum:54:16:208"] = "msg=rtwMsg_notTraceable&block=inverted_pendulum/Plant/Solver%20Configuration/EVAL_KEY/STATE_1";
	this.getUrlHash = function(sid) { return this.urlHashMap[sid];}
}
RTW_Sid2UrlHash.instance = new RTW_Sid2UrlHash();
function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "inverted_pendulum"};
	this.sidHashMap["inverted_pendulum"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "inverted_pendulum:39"};
	this.sidHashMap["inverted_pendulum:39"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "inverted_pendulum:41"};
	this.sidHashMap["inverted_pendulum:41"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "inverted_pendulum:68"};
	this.sidHashMap["inverted_pendulum:68"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<S4>"] = {sid: "inverted_pendulum:45"};
	this.sidHashMap["inverted_pendulum:45"] = {rtwname: "<S4>"};
	this.rtwnameHashMap["<S5>"] = {sid: "inverted_pendulum:46"};
	this.sidHashMap["inverted_pendulum:46"] = {rtwname: "<S5>"};
	this.rtwnameHashMap["<S6>"] = {sid: "inverted_pendulum:53"};
	this.sidHashMap["inverted_pendulum:53"] = {rtwname: "<S6>"};
	this.rtwnameHashMap["<S7>"] = {sid: "inverted_pendulum:60"};
	this.sidHashMap["inverted_pendulum:60"] = {rtwname: "<S7>"};
	this.rtwnameHashMap["<S8>"] = {sid: "inverted_pendulum:54"};
	this.sidHashMap["inverted_pendulum:54"] = {rtwname: "<S8>"};
	this.rtwnameHashMap["<S9>"] = {sid: "inverted_pendulum:45:11"};
	this.sidHashMap["inverted_pendulum:45:11"] = {rtwname: "<S9>"};
	this.rtwnameHashMap["<S10>"] = {sid: "inverted_pendulum:46:11"};
	this.sidHashMap["inverted_pendulum:46:11"] = {rtwname: "<S10>"};
	this.rtwnameHashMap["<S11>"] = {sid: "inverted_pendulum:53:2"};
	this.sidHashMap["inverted_pendulum:53:2"] = {rtwname: "<S11>"};
	this.rtwnameHashMap["<S12>"] = {sid: "inverted_pendulum:60:2"};
	this.sidHashMap["inverted_pendulum:60:2"] = {rtwname: "<S12>"};
	this.rtwnameHashMap["<S13>"] = {sid: "inverted_pendulum:54:16"};
	this.sidHashMap["inverted_pendulum:54:16"] = {rtwname: "<S13>"};
	this.rtwnameHashMap["<Root>/angle"] = {sid: "inverted_pendulum:76"};
	this.sidHashMap["inverted_pendulum:76"] = {rtwname: "<Root>/angle"};
	this.rtwnameHashMap["<Root>/Angle Controller"] = {sid: "inverted_pendulum:70"};
	this.sidHashMap["inverted_pendulum:70"] = {rtwname: "<Root>/Angle Controller"};
	this.rtwnameHashMap["<Root>/Disturbance"] = {sid: "inverted_pendulum:39"};
	this.sidHashMap["inverted_pendulum:39"] = {rtwname: "<Root>/Disturbance"};
	this.rtwnameHashMap["<Root>/Plant"] = {sid: "inverted_pendulum:41"};
	this.sidHashMap["inverted_pendulum:41"] = {rtwname: "<Root>/Plant"};
	this.rtwnameHashMap["<Root>/Position Controller"] = {sid: "inverted_pendulum:68"};
	this.sidHashMap["inverted_pendulum:68"] = {rtwname: "<Root>/Position Controller"};
	this.rtwnameHashMap["<Root>/Step"] = {sid: "inverted_pendulum:63"};
	this.sidHashMap["inverted_pendulum:63"] = {rtwname: "<Root>/Step"};
	this.rtwnameHashMap["<Root>/Sum"] = {sid: "inverted_pendulum:27"};
	this.sidHashMap["inverted_pendulum:27"] = {rtwname: "<Root>/Sum"};
	this.rtwnameHashMap["<Root>/Zero-Order Hold"] = {sid: "inverted_pendulum:78"};
	this.sidHashMap["inverted_pendulum:78"] = {rtwname: "<Root>/Zero-Order Hold"};
	this.rtwnameHashMap["<Root>/x"] = {sid: "inverted_pendulum:71"};
	this.sidHashMap["inverted_pendulum:71"] = {rtwname: "<Root>/x"};
	this.rtwnameHashMap["<Root>/accel"] = {sid: "inverted_pendulum:75"};
	this.sidHashMap["inverted_pendulum:75"] = {rtwname: "<Root>/accel"};
	this.rtwnameHashMap["<S1>/Demux"] = {sid: "inverted_pendulum:39:1"};
	this.sidHashMap["inverted_pendulum:39:1"] = {rtwname: "<S1>/Demux"};
	this.rtwnameHashMap["<S1>/FromWs"] = {sid: "inverted_pendulum:39:2"};
	this.sidHashMap["inverted_pendulum:39:2"] = {rtwname: "<S1>/FromWs"};
	this.rtwnameHashMap["<S1>/Signal 1"] = {sid: "inverted_pendulum:39:3"};
	this.sidHashMap["inverted_pendulum:39:3"] = {rtwname: "<S1>/Signal 1"};
	this.rtwnameHashMap["<S2>/dF"] = {sid: "inverted_pendulum:59"};
	this.sidHashMap["inverted_pendulum:59"] = {rtwname: "<S2>/dF"};
	this.rtwnameHashMap["<S2>/F"] = {sid: "inverted_pendulum:42"};
	this.sidHashMap["inverted_pendulum:42"] = {rtwname: "<S2>/F"};
	this.rtwnameHashMap["<S2>/Cart"] = {sid: "inverted_pendulum:43"};
	this.sidHashMap["inverted_pendulum:43"] = {rtwname: "<S2>/Cart"};
	this.rtwnameHashMap["<S2>/External Force  and Torque"] = {sid: "inverted_pendulum:61"};
	this.sidHashMap["inverted_pendulum:61"] = {rtwname: "<S2>/External Force  and Torque"};
	this.rtwnameHashMap["<S2>/Mechanism  Configuration"] = {sid: "inverted_pendulum:44"};
	this.sidHashMap["inverted_pendulum:44"] = {rtwname: "<S2>/Mechanism  Configuration"};
	this.rtwnameHashMap["<S2>/PS-Simulink Converter"] = {sid: "inverted_pendulum:45"};
	this.sidHashMap["inverted_pendulum:45"] = {rtwname: "<S2>/PS-Simulink Converter"};
	this.rtwnameHashMap["<S2>/PS-Simulink Converter1"] = {sid: "inverted_pendulum:46"};
	this.sidHashMap["inverted_pendulum:46"] = {rtwname: "<S2>/PS-Simulink Converter1"};
	this.rtwnameHashMap["<S2>/Pendulum"] = {sid: "inverted_pendulum:47"};
	this.sidHashMap["inverted_pendulum:47"] = {rtwname: "<S2>/Pendulum"};
	this.rtwnameHashMap["<S2>/Prismatic  Joint"] = {sid: "inverted_pendulum:48"};
	this.sidHashMap["inverted_pendulum:48"] = {rtwname: "<S2>/Prismatic  Joint"};
	this.rtwnameHashMap["<S2>/Revolute Joint"] = {sid: "inverted_pendulum:49"};
	this.sidHashMap["inverted_pendulum:49"] = {rtwname: "<S2>/Revolute Joint"};
	this.rtwnameHashMap["<S2>/Rigid  Transform1"] = {sid: "inverted_pendulum:50"};
	this.sidHashMap["inverted_pendulum:50"] = {rtwname: "<S2>/Rigid  Transform1"};
	this.rtwnameHashMap["<S2>/Rigid  Transform2"] = {sid: "inverted_pendulum:74"};
	this.sidHashMap["inverted_pendulum:74"] = {rtwname: "<S2>/Rigid  Transform2"};
	this.rtwnameHashMap["<S2>/Rigid  Transform3"] = {sid: "inverted_pendulum:51"};
	this.sidHashMap["inverted_pendulum:51"] = {rtwname: "<S2>/Rigid  Transform3"};
	this.rtwnameHashMap["<S2>/Rigid  Transform4"] = {sid: "inverted_pendulum:52"};
	this.sidHashMap["inverted_pendulum:52"] = {rtwname: "<S2>/Rigid  Transform4"};
	this.rtwnameHashMap["<S2>/Simulink-PS Converter"] = {sid: "inverted_pendulum:53"};
	this.sidHashMap["inverted_pendulum:53"] = {rtwname: "<S2>/Simulink-PS Converter"};
	this.rtwnameHashMap["<S2>/Simulink-PS Converter1"] = {sid: "inverted_pendulum:60"};
	this.sidHashMap["inverted_pendulum:60"] = {rtwname: "<S2>/Simulink-PS Converter1"};
	this.rtwnameHashMap["<S2>/Solver Configuration"] = {sid: "inverted_pendulum:54"};
	this.sidHashMap["inverted_pendulum:54"] = {rtwname: "<S2>/Solver Configuration"};
	this.rtwnameHashMap["<S2>/World Frame"] = {sid: "inverted_pendulum:55"};
	this.sidHashMap["inverted_pendulum:55"] = {rtwname: "<S2>/World Frame"};
	this.rtwnameHashMap["<S2>/x"] = {sid: "inverted_pendulum:56"};
	this.sidHashMap["inverted_pendulum:56"] = {rtwname: "<S2>/x"};
	this.rtwnameHashMap["<S2>/theta"] = {sid: "inverted_pendulum:57"};
	this.sidHashMap["inverted_pendulum:57"] = {rtwname: "<S2>/theta"};
	this.rtwnameHashMap["<S3>/u"] = {sid: "inverted_pendulum:68:1"};
	this.sidHashMap["inverted_pendulum:68:1"] = {rtwname: "<S3>/u"};
	this.rtwnameHashMap["<S3>/Derivative Gain"] = {sid: "inverted_pendulum:68:1657"};
	this.sidHashMap["inverted_pendulum:68:1657"] = {rtwname: "<S3>/Derivative Gain"};
	this.rtwnameHashMap["<S3>/Filter"] = {sid: "inverted_pendulum:68:1658"};
	this.sidHashMap["inverted_pendulum:68:1658"] = {rtwname: "<S3>/Filter"};
	this.rtwnameHashMap["<S3>/Filter Coefficient"] = {sid: "inverted_pendulum:68:1659"};
	this.sidHashMap["inverted_pendulum:68:1659"] = {rtwname: "<S3>/Filter Coefficient"};
	this.rtwnameHashMap["<S3>/Proportional Gain"] = {sid: "inverted_pendulum:68:1656"};
	this.sidHashMap["inverted_pendulum:68:1656"] = {rtwname: "<S3>/Proportional Gain"};
	this.rtwnameHashMap["<S3>/Sum"] = {sid: "inverted_pendulum:68:1655"};
	this.sidHashMap["inverted_pendulum:68:1655"] = {rtwname: "<S3>/Sum"};
	this.rtwnameHashMap["<S3>/SumD"] = {sid: "inverted_pendulum:68:1660"};
	this.sidHashMap["inverted_pendulum:68:1660"] = {rtwname: "<S3>/SumD"};
	this.rtwnameHashMap["<S3>/y"] = {sid: "inverted_pendulum:68:10"};
	this.sidHashMap["inverted_pendulum:68:10"] = {rtwname: "<S3>/y"};
	this.rtwnameHashMap["<S4>/EVAL_KEY"] = {sid: "inverted_pendulum:45:11"};
	this.sidHashMap["inverted_pendulum:45:11"] = {rtwname: "<S4>/EVAL_KEY"};
	this.rtwnameHashMap["<S4>/input"] = {sid: "inverted_pendulum:45:14"};
	this.sidHashMap["inverted_pendulum:45:14"] = {rtwname: "<S4>/input"};
	this.rtwnameHashMap["<S4>/output"] = {sid: "inverted_pendulum:45:13"};
	this.sidHashMap["inverted_pendulum:45:13"] = {rtwname: "<S4>/output"};
	this.rtwnameHashMap["<S5>/EVAL_KEY"] = {sid: "inverted_pendulum:46:11"};
	this.sidHashMap["inverted_pendulum:46:11"] = {rtwname: "<S5>/EVAL_KEY"};
	this.rtwnameHashMap["<S5>/input"] = {sid: "inverted_pendulum:46:14"};
	this.sidHashMap["inverted_pendulum:46:14"] = {rtwname: "<S5>/input"};
	this.rtwnameHashMap["<S5>/output"] = {sid: "inverted_pendulum:46:13"};
	this.sidHashMap["inverted_pendulum:46:13"] = {rtwname: "<S5>/output"};
	this.rtwnameHashMap["<S6>/input0"] = {sid: "inverted_pendulum:53:6"};
	this.sidHashMap["inverted_pendulum:53:6"] = {rtwname: "<S6>/input0"};
	this.rtwnameHashMap["<S6>/EVAL_KEY"] = {sid: "inverted_pendulum:53:2"};
	this.sidHashMap["inverted_pendulum:53:2"] = {rtwname: "<S6>/EVAL_KEY"};
	this.rtwnameHashMap["<S6>/input1"] = {sid: "inverted_pendulum:53:7"};
	this.sidHashMap["inverted_pendulum:53:7"] = {rtwname: "<S6>/input1"};
	this.rtwnameHashMap["<S6>/input2"] = {sid: "inverted_pendulum:53:8"};
	this.sidHashMap["inverted_pendulum:53:8"] = {rtwname: "<S6>/input2"};
	this.rtwnameHashMap["<S6>/output"] = {sid: "inverted_pendulum:53:9"};
	this.sidHashMap["inverted_pendulum:53:9"] = {rtwname: "<S6>/output"};
	this.rtwnameHashMap["<S7>/input0"] = {sid: "inverted_pendulum:60:6"};
	this.sidHashMap["inverted_pendulum:60:6"] = {rtwname: "<S7>/input0"};
	this.rtwnameHashMap["<S7>/EVAL_KEY"] = {sid: "inverted_pendulum:60:2"};
	this.sidHashMap["inverted_pendulum:60:2"] = {rtwname: "<S7>/EVAL_KEY"};
	this.rtwnameHashMap["<S7>/input1"] = {sid: "inverted_pendulum:60:7"};
	this.sidHashMap["inverted_pendulum:60:7"] = {rtwname: "<S7>/input1"};
	this.rtwnameHashMap["<S7>/input2"] = {sid: "inverted_pendulum:60:8"};
	this.sidHashMap["inverted_pendulum:60:8"] = {rtwname: "<S7>/input2"};
	this.rtwnameHashMap["<S7>/output"] = {sid: "inverted_pendulum:60:9"};
	this.sidHashMap["inverted_pendulum:60:9"] = {rtwname: "<S7>/output"};
	this.rtwnameHashMap["<S8>/EVAL_KEY"] = {sid: "inverted_pendulum:54:16"};
	this.sidHashMap["inverted_pendulum:54:16"] = {rtwname: "<S8>/EVAL_KEY"};
	this.rtwnameHashMap["<S8>/a"] = {sid: "inverted_pendulum:54:17"};
	this.sidHashMap["inverted_pendulum:54:17"] = {rtwname: "<S8>/a"};
	this.rtwnameHashMap["<S9>/FROM_OUTPUT_1_1_"] = {sid: "inverted_pendulum:45:11:33"};
	this.sidHashMap["inverted_pendulum:45:11:33"] = {rtwname: "<S9>/FROM_OUTPUT_1_1_"};
	this.rtwnameHashMap["<S9>/output"] = {sid: "inverted_pendulum:45:11:12"};
	this.sidHashMap["inverted_pendulum:45:11:12"] = {rtwname: "<S9>/output"};
	this.rtwnameHashMap["<S10>/FROM_OUTPUT_2_1_"] = {sid: "inverted_pendulum:46:11:33"};
	this.sidHashMap["inverted_pendulum:46:11:33"] = {rtwname: "<S10>/FROM_OUTPUT_2_1_"};
	this.rtwnameHashMap["<S10>/output"] = {sid: "inverted_pendulum:46:11:12"};
	this.sidHashMap["inverted_pendulum:46:11:12"] = {rtwname: "<S10>/output"};
	this.rtwnameHashMap["<S11>/input0"] = {sid: "inverted_pendulum:53:2:3"};
	this.sidHashMap["inverted_pendulum:53:2:3"] = {rtwname: "<S11>/input0"};
	this.rtwnameHashMap["<S11>/input1"] = {sid: "inverted_pendulum:53:2:4"};
	this.sidHashMap["inverted_pendulum:53:2:4"] = {rtwname: "<S11>/input1"};
	this.rtwnameHashMap["<S11>/input2"] = {sid: "inverted_pendulum:53:2:5"};
	this.sidHashMap["inverted_pendulum:53:2:5"] = {rtwname: "<S11>/input2"};
	this.rtwnameHashMap["<S11>/GOTO_0"] = {sid: "inverted_pendulum:53:2:64"};
	this.sidHashMap["inverted_pendulum:53:2:64"] = {rtwname: "<S11>/GOTO_0"};
	this.rtwnameHashMap["<S11>/GOTO_1"] = {sid: "inverted_pendulum:53:2:65"};
	this.sidHashMap["inverted_pendulum:53:2:65"] = {rtwname: "<S11>/GOTO_1"};
	this.rtwnameHashMap["<S11>/GOTO_2"] = {sid: "inverted_pendulum:53:2:66"};
	this.sidHashMap["inverted_pendulum:53:2:66"] = {rtwname: "<S11>/GOTO_2"};
	this.rtwnameHashMap["<S12>/input0"] = {sid: "inverted_pendulum:60:2:3"};
	this.sidHashMap["inverted_pendulum:60:2:3"] = {rtwname: "<S12>/input0"};
	this.rtwnameHashMap["<S12>/input1"] = {sid: "inverted_pendulum:60:2:4"};
	this.sidHashMap["inverted_pendulum:60:2:4"] = {rtwname: "<S12>/input1"};
	this.rtwnameHashMap["<S12>/input2"] = {sid: "inverted_pendulum:60:2:5"};
	this.sidHashMap["inverted_pendulum:60:2:5"] = {rtwname: "<S12>/input2"};
	this.rtwnameHashMap["<S12>/GOTO_0"] = {sid: "inverted_pendulum:60:2:64"};
	this.sidHashMap["inverted_pendulum:60:2:64"] = {rtwname: "<S12>/GOTO_0"};
	this.rtwnameHashMap["<S12>/GOTO_1"] = {sid: "inverted_pendulum:60:2:65"};
	this.sidHashMap["inverted_pendulum:60:2:65"] = {rtwname: "<S12>/GOTO_1"};
	this.rtwnameHashMap["<S12>/GOTO_2"] = {sid: "inverted_pendulum:60:2:66"};
	this.sidHashMap["inverted_pendulum:60:2:66"] = {rtwname: "<S12>/GOTO_2"};
	this.rtwnameHashMap["<S13>/INPUT_1_1_1"] = {sid: "inverted_pendulum:54:16:200"};
	this.sidHashMap["inverted_pendulum:54:16:200"] = {rtwname: "<S13>/INPUT_1_1_1"};
	this.rtwnameHashMap["<S13>/INPUT_2_1_1"] = {sid: "inverted_pendulum:54:16:207"};
	this.sidHashMap["inverted_pendulum:54:16:207"] = {rtwname: "<S13>/INPUT_2_1_1"};
	this.rtwnameHashMap["<S13>/INPUT_DEMUX_1_0"] = {sid: "inverted_pendulum:54:16:195"};
	this.sidHashMap["inverted_pendulum:54:16:195"] = {rtwname: "<S13>/INPUT_DEMUX_1_0"};
	this.rtwnameHashMap["<S13>/INPUT_DEMUX_1_1"] = {sid: "inverted_pendulum:54:16:197"};
	this.sidHashMap["inverted_pendulum:54:16:197"] = {rtwname: "<S13>/INPUT_DEMUX_1_1"};
	this.rtwnameHashMap["<S13>/INPUT_DEMUX_1_2"] = {sid: "inverted_pendulum:54:16:199"};
	this.sidHashMap["inverted_pendulum:54:16:199"] = {rtwname: "<S13>/INPUT_DEMUX_1_2"};
	this.rtwnameHashMap["<S13>/INPUT_DEMUX_2_0"] = {sid: "inverted_pendulum:54:16:202"};
	this.sidHashMap["inverted_pendulum:54:16:202"] = {rtwname: "<S13>/INPUT_DEMUX_2_0"};
	this.rtwnameHashMap["<S13>/INPUT_DEMUX_2_1"] = {sid: "inverted_pendulum:54:16:204"};
	this.sidHashMap["inverted_pendulum:54:16:204"] = {rtwname: "<S13>/INPUT_DEMUX_2_1"};
	this.rtwnameHashMap["<S13>/INPUT_DEMUX_2_2"] = {sid: "inverted_pendulum:54:16:206"};
	this.sidHashMap["inverted_pendulum:54:16:206"] = {rtwname: "<S13>/INPUT_DEMUX_2_2"};
	this.rtwnameHashMap["<S13>/INPUT_FROM_1_0"] = {sid: "inverted_pendulum:54:16:194"};
	this.sidHashMap["inverted_pendulum:54:16:194"] = {rtwname: "<S13>/INPUT_FROM_1_0"};
	this.rtwnameHashMap["<S13>/INPUT_FROM_1_1"] = {sid: "inverted_pendulum:54:16:196"};
	this.sidHashMap["inverted_pendulum:54:16:196"] = {rtwname: "<S13>/INPUT_FROM_1_1"};
	this.rtwnameHashMap["<S13>/INPUT_FROM_1_2"] = {sid: "inverted_pendulum:54:16:198"};
	this.sidHashMap["inverted_pendulum:54:16:198"] = {rtwname: "<S13>/INPUT_FROM_1_2"};
	this.rtwnameHashMap["<S13>/INPUT_FROM_2_0"] = {sid: "inverted_pendulum:54:16:201"};
	this.sidHashMap["inverted_pendulum:54:16:201"] = {rtwname: "<S13>/INPUT_FROM_2_0"};
	this.rtwnameHashMap["<S13>/INPUT_FROM_2_1"] = {sid: "inverted_pendulum:54:16:203"};
	this.sidHashMap["inverted_pendulum:54:16:203"] = {rtwname: "<S13>/INPUT_FROM_2_1"};
	this.rtwnameHashMap["<S13>/INPUT_FROM_2_2"] = {sid: "inverted_pendulum:54:16:205"};
	this.sidHashMap["inverted_pendulum:54:16:205"] = {rtwname: "<S13>/INPUT_FROM_2_2"};
	this.rtwnameHashMap["<S13>/OUTPUT_1_0"] = {sid: "inverted_pendulum:54:16:210"};
	this.sidHashMap["inverted_pendulum:54:16:210"] = {rtwname: "<S13>/OUTPUT_1_0"};
	this.rtwnameHashMap["<S13>/OUTPUT_DEMUX_1_0"] = {sid: "inverted_pendulum:54:16:211"};
	this.sidHashMap["inverted_pendulum:54:16:211"] = {rtwname: "<S13>/OUTPUT_DEMUX_1_0"};
	this.rtwnameHashMap["<S13>/OUTPUT_GOTO_1"] = {sid: "inverted_pendulum:54:16:213"};
	this.sidHashMap["inverted_pendulum:54:16:213"] = {rtwname: "<S13>/OUTPUT_GOTO_1"};
	this.rtwnameHashMap["<S13>/OUTPUT_GOTO_2"] = {sid: "inverted_pendulum:54:16:215"};
	this.sidHashMap["inverted_pendulum:54:16:215"] = {rtwname: "<S13>/OUTPUT_GOTO_2"};
	this.rtwnameHashMap["<S13>/OUTPUT_MUX_1"] = {sid: "inverted_pendulum:54:16:212"};
	this.sidHashMap["inverted_pendulum:54:16:212"] = {rtwname: "<S13>/OUTPUT_MUX_1"};
	this.rtwnameHashMap["<S13>/OUTPUT_MUX_2"] = {sid: "inverted_pendulum:54:16:214"};
	this.sidHashMap["inverted_pendulum:54:16:214"] = {rtwname: "<S13>/OUTPUT_MUX_2"};
	this.rtwnameHashMap["<S13>/SINK_1"] = {sid: "inverted_pendulum:54:16:209"};
	this.sidHashMap["inverted_pendulum:54:16:209"] = {rtwname: "<S13>/SINK_1"};
	this.rtwnameHashMap["<S13>/STATE_1"] = {sid: "inverted_pendulum:54:16:208"};
	this.sidHashMap["inverted_pendulum:54:16:208"] = {rtwname: "<S13>/STATE_1"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
function CodeMetrics() {
	 this.metricsArray = {};
	 this.metricsArray.var = new Array();
	 this.metricsArray.fcn = new Array();
	 this.getMetrics = function(token) { 
		 var data;
		 data = this.metricsArray.var[token];
		 if (!data) {
			 data = this.metricsArray.fcn[token];
			 if (data) data.type = "fcn";
		 } else { 
			 data.type = "var";
		 }
	 return data;}
}
	 CodeMetrics.instance = new CodeMetrics();
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="./js/coder_app.js"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="./rtwreport_utils.js"></script>
<script type="text/javascript" src="./rtwannotate.js"></script>
<link rel="stylesheet" type="text/css" href="./css/coder_app.css"/>
</head>
<body onload="srcFileOnload();">
<pre id="code">
<table class="code" id="codeTbl">
<tr name="1" id="1">
<td>1</td><td><span class="pp">#ifndef</span> <a id="1c9" class="tk">PORTABLE_WORDSIZES</a></td></tr>
<tr name="2" id="2">
<td>2</td><td><span class="pp">#ifdef</span> <a id="2c8" class="tk">__MW_TARGET_USE_HARDWARE_RESOURCES_H__</a></td></tr>
<tr name="3" id="3">
<td>3</td><td><span class="pp">#ifndef</span> <a id="3c9" class="tk">__MW_TARGET_HARDWARE_RESOURCES_H__</a></td></tr>
<tr name="4" id="4">
<td>4</td><td><span class="pp">#define</span> <a id="4c9" class="tk">__MW_TARGET_HARDWARE_RESOURCES_H__</a></td></tr>
<tr name="5" id="5">
<td>5</td><td></td></tr>
<tr name="6" id="6">
<td>6</td><td><span class="pp">#include "SysTickScheduler.h"</span></td></tr>
<tr name="7" id="7">
<td>7</td><td><span class="pp">#include "arm_cortex_m_multitasking.h"</span></td></tr>
<tr name="8" id="8">
<td>8</td><td><span class="pp">#include "stm32f4discovery_wrapper.h"</span></td></tr>
<tr name="9" id="9">
<td>9</td><td></td></tr>
<tr name="10" id="10">
<td>10</td><td><span class="pp">#define</span> <a id="10c9" class="tk">MW_USECODERTARGET</a> 1.000000</td></tr>
<tr name="11" id="11">
<td>11</td><td><span class="pp">#define</span> <a id="11c9" class="tk">MW_TARGETHARDWARE</a> <a id="11c27" class="tk">STM32F4</a>-<a id="11c35" class="tk">Discovery</a></td></tr>
<tr name="12" id="12">
<td>12</td><td><span class="pp">#define</span> <a id="12c9" class="tk">MW_EXTMODE_CONFIGURATION</a> <a id="12c34" class="tk">Serial</a></td></tr>
<tr name="13" id="13">
<td>13</td><td><span class="pp">#define</span> <a id="13c9" class="tk">MW_CONNECTIONINFO_SERIAL_BAUDRATE</a> 460800</td></tr>
<tr name="14" id="14">
<td>14</td><td><span class="pp">#define</span> <a id="14c9" class="tk">MW_CONNECTIONINFO_SERIAL_COMPORT</a> <a id="14c42" class="tk">COM1</a></td></tr>
<tr name="15" id="15">
<td>15</td><td><span class="pp">#define</span> <a id="15c9" class="tk">MW_CONNECTIONINFO_SERIAL_VERBOSE</a> 0</td></tr>
<tr name="16" id="16">
<td>16</td><td><span class="pp">#define</span> <a id="16c9" class="tk">MW_CONNECTIONINFO_SERIAL_RELEASE</a> <a id="16c42" class="tk">R2015a</a></td></tr>
<tr name="17" id="17">
<td>17</td><td><span class="pp">#define</span> <a id="17c9" class="tk">MW_RTOS</a> <a id="17c17" class="tk">Baremetal</a></td></tr>
<tr name="18" id="18">
<td>18</td><td><span class="pp">#define</span> <a id="18c9" class="tk">MW_RTOSBASERATETASKPRIORITY</a> 40</td></tr>
<tr name="19" id="19">
<td>19</td><td><span class="pp">#define</span> <a id="19c9" class="tk">MW_SCHEDULER_INTERRUPT_SOURCE</a> 0</td></tr>
<tr name="20" id="20">
<td>20</td><td><span class="pp">#define</span> <a id="20c9" class="tk">MW_RUNTIME_BUILDACTION</a> 0</td></tr>
<tr name="21" id="21">
<td>21</td><td><span class="pp">#define</span> <a id="21c9" class="tk">MW_CLOCKING_CPUCLOCKRATEMHZ</a> 168</td></tr>
<tr name="22" id="22">
<td>22</td><td><span class="pp">#define</span> <a id="22c9" class="tk">MW_PIL_INTERFACE</a> 0</td></tr>
<tr name="23" id="23">
<td>23</td><td><span class="pp">#define</span> <a id="23c9" class="tk">MW_PIL_COMPORT</a> <a id="23c24" class="tk">COM1</a></td></tr>
<tr name="24" id="24">
<td>24</td><td><span class="pp">#define</span> <a id="24c9" class="tk">MW_ADC_PRESCALER</a> 0.000000</td></tr>
<tr name="25" id="25">
<td>25</td><td><span class="pp">#define</span> <a id="25c9" class="tk">MW_ADC_DELAYSAMPLEPHASES</a> 0.000000</td></tr>
<tr name="26" id="26">
<td>26</td><td><span class="pp">#define</span> <a id="26c9" class="tk">MW_ADC_ENTEMPSENSVREFINT</a> 0</td></tr>
<tr name="27" id="27">
<td>27</td><td><span class="pp">#define</span> <a id="27c9" class="tk">MW_ADC_ENVBAT</a> 0</td></tr>
<tr name="28" id="28">
<td>28</td><td><span class="pp">#define</span> <a id="28c9" class="tk">MW_ADC_MULTIADC</a> 0.000000</td></tr>
<tr name="29" id="29">
<td>29</td><td><span class="pp">#define</span> <a id="29c9" class="tk">MW_ADC_MULTIADCMODE</a> 0.000000</td></tr>
<tr name="30" id="30">
<td>30</td><td><span class="pp">#define</span> <a id="30c9" class="tk">MW_ADC_DMAMODE</a> 0.000000</td></tr>
<tr name="31" id="31">
<td>31</td><td><span class="pp">#define</span> <a id="31c9" class="tk">MW_ADC_DMAENABLE</a> 0</td></tr>
<tr name="32" id="32">
<td>32</td><td><span class="pp">#define</span> <a id="32c9" class="tk">MW_ADC1_CONVRESOLUTION</a> 0.000000</td></tr>
<tr name="33" id="33">
<td>33</td><td><span class="pp">#define</span> <a id="33c9" class="tk">MW_ADC1_ENDISCONT</a> 0</td></tr>
<tr name="34" id="34">
<td>34</td><td><span class="pp">#define</span> <a id="34c9" class="tk">MW_ADC1_NBOFDISCONTCHL</a> 0.000000</td></tr>
<tr name="35" id="35">
<td>35</td><td><span class="pp">#define</span> <a id="35c9" class="tk">MW_ADC1_ENDISCONTINJ</a> 0</td></tr>
<tr name="36" id="36">
<td>36</td><td><span class="pp">#define</span> <a id="36c9" class="tk">MW_ADC1_DATAALIGN</a> 0.000000</td></tr>
<tr name="37" id="37">
<td>37</td><td><span class="pp">#define</span> <a id="37c9" class="tk">MW_ADC1_ENABLEWATCHDOG</a> 0</td></tr>
<tr name="38" id="38">
<td>38</td><td><span class="pp">#define</span> <a id="38c9" class="tk">MW_ADC1_ENABLEWATCHDOGINJ</a> 0</td></tr>
<tr name="39" id="39">
<td>39</td><td><span class="pp">#define</span> <a id="39c9" class="tk">MW_ADC1_WATCHDOGONCHANNEL</a> 0.000000</td></tr>
<tr name="40" id="40">
<td>40</td><td><span class="pp">#define</span> <a id="40c9" class="tk">MW_ADC1_WATCHDOGLOWTHR</a> 0.000000</td></tr>
<tr name="41" id="41">
<td>41</td><td><span class="pp">#define</span> <a id="41c9" class="tk">MW_ADC1_WATCHDOGHIGHTHR</a> 4095.000000</td></tr>
<tr name="42" id="42">
<td>42</td><td><span class="pp">#define</span> <a id="42c9" class="tk">MW_ADC1_SAMPLETIMECHL0</a> 0.000000</td></tr>
<tr name="43" id="43">
<td>43</td><td><span class="pp">#define</span> <a id="43c9" class="tk">MW_ADC1_SAMPLETIMECHL1</a> 0.000000</td></tr>
<tr name="44" id="44">
<td>44</td><td><span class="pp">#define</span> <a id="44c9" class="tk">MW_ADC1_SAMPLETIMECHL2</a> 0.000000</td></tr>
<tr name="45" id="45">
<td>45</td><td><span class="pp">#define</span> <a id="45c9" class="tk">MW_ADC1_SAMPLETIMECHL3</a> 0.000000</td></tr>
<tr name="46" id="46">
<td>46</td><td><span class="pp">#define</span> <a id="46c9" class="tk">MW_ADC1_SAMPLETIMECHL4</a> 0.000000</td></tr>
<tr name="47" id="47">
<td>47</td><td><span class="pp">#define</span> <a id="47c9" class="tk">MW_ADC1_SAMPLETIMECHL5</a> 0.000000</td></tr>
<tr name="48" id="48">
<td>48</td><td><span class="pp">#define</span> <a id="48c9" class="tk">MW_ADC1_SAMPLETIMECHL6</a> 0.000000</td></tr>
<tr name="49" id="49">
<td>49</td><td><span class="pp">#define</span> <a id="49c9" class="tk">MW_ADC1_SAMPLETIMECHL7</a> 0.000000</td></tr>
<tr name="50" id="50">
<td>50</td><td><span class="pp">#define</span> <a id="50c9" class="tk">MW_ADC1_SAMPLETIMECHL8</a> 0.000000</td></tr>
<tr name="51" id="51">
<td>51</td><td><span class="pp">#define</span> <a id="51c9" class="tk">MW_ADC1_SAMPLETIMECHL9</a> 0.000000</td></tr>
<tr name="52" id="52">
<td>52</td><td><span class="pp">#define</span> <a id="52c9" class="tk">MW_ADC1_SAMPLETIMECHL10</a> 0.000000</td></tr>
<tr name="53" id="53">
<td>53</td><td><span class="pp">#define</span> <a id="53c9" class="tk">MW_ADC1_SAMPLETIMECHL11</a> 0.000000</td></tr>
<tr name="54" id="54">
<td>54</td><td><span class="pp">#define</span> <a id="54c9" class="tk">MW_ADC1_SAMPLETIMECHL12</a> 0.000000</td></tr>
<tr name="55" id="55">
<td>55</td><td><span class="pp">#define</span> <a id="55c9" class="tk">MW_ADC1_SAMPLETIMECHL13</a> 0.000000</td></tr>
<tr name="56" id="56">
<td>56</td><td><span class="pp">#define</span> <a id="56c9" class="tk">MW_ADC1_SAMPLETIMECHL14</a> 0.000000</td></tr>
<tr name="57" id="57">
<td>57</td><td><span class="pp">#define</span> <a id="57c9" class="tk">MW_ADC1_SAMPLETIMECHL15</a> 0.000000</td></tr>
<tr name="58" id="58">
<td>58</td><td><span class="pp">#define</span> <a id="58c9" class="tk">MW_ADC1_SAMPLETIMECHL16</a> 0.000000</td></tr>
<tr name="59" id="59">
<td>59</td><td><span class="pp">#define</span> <a id="59c9" class="tk">MW_ADC1_SAMPLETIMECHL17</a> 0.000000</td></tr>
<tr name="60" id="60">
<td>60</td><td><span class="pp">#define</span> <a id="60c9" class="tk">MW_ADC1_SAMPLETIMECHL18</a> 0.000000</td></tr>
<tr name="61" id="61">
<td>61</td><td><span class="pp">#define</span> <a id="61c9" class="tk">MW_ADC2_CONVRESOLUTION</a> 0.000000</td></tr>
<tr name="62" id="62">
<td>62</td><td><span class="pp">#define</span> <a id="62c9" class="tk">MW_ADC2_ENDISCONT</a> 0</td></tr>
<tr name="63" id="63">
<td>63</td><td><span class="pp">#define</span> <a id="63c9" class="tk">MW_ADC2_NBOFDISCONTCHL</a> 0.000000</td></tr>
<tr name="64" id="64">
<td>64</td><td><span class="pp">#define</span> <a id="64c9" class="tk">MW_ADC2_ENDISCONTINJ</a> 0</td></tr>
<tr name="65" id="65">
<td>65</td><td><span class="pp">#define</span> <a id="65c9" class="tk">MW_ADC2_DATAALIGN</a> 0.000000</td></tr>
<tr name="66" id="66">
<td>66</td><td><span class="pp">#define</span> <a id="66c9" class="tk">MW_ADC2_ENABLEWATCHDOG</a> 0</td></tr>
<tr name="67" id="67">
<td>67</td><td><span class="pp">#define</span> <a id="67c9" class="tk">MW_ADC2_ENABLEWATCHDOGINJ</a> 0</td></tr>
<tr name="68" id="68">
<td>68</td><td><span class="pp">#define</span> <a id="68c9" class="tk">MW_ADC2_WATCHDOGONCHANNEL</a> 0.000000</td></tr>
<tr name="69" id="69">
<td>69</td><td><span class="pp">#define</span> <a id="69c9" class="tk">MW_ADC2_WATCHDOGLOWTHR</a> 0.000000</td></tr>
<tr name="70" id="70">
<td>70</td><td><span class="pp">#define</span> <a id="70c9" class="tk">MW_ADC2_WATCHDOGHIGHTHR</a> 4095.000000</td></tr>
<tr name="71" id="71">
<td>71</td><td><span class="pp">#define</span> <a id="71c9" class="tk">MW_ADC2_SAMPLETIMECHL0</a> 0.000000</td></tr>
<tr name="72" id="72">
<td>72</td><td><span class="pp">#define</span> <a id="72c9" class="tk">MW_ADC2_SAMPLETIMECHL1</a> 0.000000</td></tr>
<tr name="73" id="73">
<td>73</td><td><span class="pp">#define</span> <a id="73c9" class="tk">MW_ADC2_SAMPLETIMECHL2</a> 0.000000</td></tr>
<tr name="74" id="74">
<td>74</td><td><span class="pp">#define</span> <a id="74c9" class="tk">MW_ADC2_SAMPLETIMECHL3</a> 0.000000</td></tr>
<tr name="75" id="75">
<td>75</td><td><span class="pp">#define</span> <a id="75c9" class="tk">MW_ADC2_SAMPLETIMECHL4</a> 0.000000</td></tr>
<tr name="76" id="76">
<td>76</td><td><span class="pp">#define</span> <a id="76c9" class="tk">MW_ADC2_SAMPLETIMECHL5</a> 0.000000</td></tr>
<tr name="77" id="77">
<td>77</td><td><span class="pp">#define</span> <a id="77c9" class="tk">MW_ADC2_SAMPLETIMECHL6</a> 0.000000</td></tr>
<tr name="78" id="78">
<td>78</td><td><span class="pp">#define</span> <a id="78c9" class="tk">MW_ADC2_SAMPLETIMECHL7</a> 0.000000</td></tr>
<tr name="79" id="79">
<td>79</td><td><span class="pp">#define</span> <a id="79c9" class="tk">MW_ADC2_SAMPLETIMECHL8</a> 0.000000</td></tr>
<tr name="80" id="80">
<td>80</td><td><span class="pp">#define</span> <a id="80c9" class="tk">MW_ADC2_SAMPLETIMECHL9</a> 0.000000</td></tr>
<tr name="81" id="81">
<td>81</td><td><span class="pp">#define</span> <a id="81c9" class="tk">MW_ADC2_SAMPLETIMECHL10</a> 0.000000</td></tr>
<tr name="82" id="82">
<td>82</td><td><span class="pp">#define</span> <a id="82c9" class="tk">MW_ADC2_SAMPLETIMECHL11</a> 0.000000</td></tr>
<tr name="83" id="83">
<td>83</td><td><span class="pp">#define</span> <a id="83c9" class="tk">MW_ADC2_SAMPLETIMECHL12</a> 0.000000</td></tr>
<tr name="84" id="84">
<td>84</td><td><span class="pp">#define</span> <a id="84c9" class="tk">MW_ADC2_SAMPLETIMECHL13</a> 0.000000</td></tr>
<tr name="85" id="85">
<td>85</td><td><span class="pp">#define</span> <a id="85c9" class="tk">MW_ADC2_SAMPLETIMECHL14</a> 0.000000</td></tr>
<tr name="86" id="86">
<td>86</td><td><span class="pp">#define</span> <a id="86c9" class="tk">MW_ADC2_SAMPLETIMECHL15</a> 0.000000</td></tr>
<tr name="87" id="87">
<td>87</td><td><span class="pp">#define</span> <a id="87c9" class="tk">MW_ADC2_SAMPLETIMECHL16</a> 0.000000</td></tr>
<tr name="88" id="88">
<td>88</td><td><span class="pp">#define</span> <a id="88c9" class="tk">MW_ADC2_SAMPLETIMECHL17</a> 0.000000</td></tr>
<tr name="89" id="89">
<td>89</td><td><span class="pp">#define</span> <a id="89c9" class="tk">MW_ADC2_SAMPLETIMECHL18</a> 0.000000</td></tr>
<tr name="90" id="90">
<td>90</td><td><span class="pp">#define</span> <a id="90c9" class="tk">MW_ADC3_CONVRESOLUTION</a> 0.000000</td></tr>
<tr name="91" id="91">
<td>91</td><td><span class="pp">#define</span> <a id="91c9" class="tk">MW_ADC3_ENDISCONT</a> 0</td></tr>
<tr name="92" id="92">
<td>92</td><td><span class="pp">#define</span> <a id="92c9" class="tk">MW_ADC3_NBOFDISCONTCHL</a> 0.000000</td></tr>
<tr name="93" id="93">
<td>93</td><td><span class="pp">#define</span> <a id="93c9" class="tk">MW_ADC3_ENDISCONTINJ</a> 0</td></tr>
<tr name="94" id="94">
<td>94</td><td><span class="pp">#define</span> <a id="94c9" class="tk">MW_ADC3_DATAALIGN</a> 0.000000</td></tr>
<tr name="95" id="95">
<td>95</td><td><span class="pp">#define</span> <a id="95c9" class="tk">MW_ADC3_ENABLEWATCHDOG</a> 0</td></tr>
<tr name="96" id="96">
<td>96</td><td><span class="pp">#define</span> <a id="96c9" class="tk">MW_ADC3_ENABLEWATCHDOGINJ</a> 0</td></tr>
<tr name="97" id="97">
<td>97</td><td><span class="pp">#define</span> <a id="97c9" class="tk">MW_ADC3_WATCHDOGONCHANNEL</a> 0.000000</td></tr>
<tr name="98" id="98">
<td>98</td><td><span class="pp">#define</span> <a id="98c9" class="tk">MW_ADC3_WATCHDOGLOWTHR</a> 0.000000</td></tr>
<tr name="99" id="99">
<td>99</td><td><span class="pp">#define</span> <a id="99c9" class="tk">MW_ADC3_WATCHDOGHIGHTHR</a> 4095.000000</td></tr>
<tr name="100" id="100">
<td>100</td><td><span class="pp">#define</span> <a id="100c9" class="tk">MW_ADC3_SAMPLETIMECHL0</a> 0.000000</td></tr>
<tr name="101" id="101">
<td>101</td><td><span class="pp">#define</span> <a id="101c9" class="tk">MW_ADC3_SAMPLETIMECHL1</a> 0.000000</td></tr>
<tr name="102" id="102">
<td>102</td><td><span class="pp">#define</span> <a id="102c9" class="tk">MW_ADC3_SAMPLETIMECHL2</a> 0.000000</td></tr>
<tr name="103" id="103">
<td>103</td><td><span class="pp">#define</span> <a id="103c9" class="tk">MW_ADC3_SAMPLETIMECHL3</a> 0.000000</td></tr>
<tr name="104" id="104">
<td>104</td><td><span class="pp">#define</span> <a id="104c9" class="tk">MW_ADC3_SAMPLETIMECHL4</a> 0.000000</td></tr>
<tr name="105" id="105">
<td>105</td><td><span class="pp">#define</span> <a id="105c9" class="tk">MW_ADC3_SAMPLETIMECHL5</a> 0.000000</td></tr>
<tr name="106" id="106">
<td>106</td><td><span class="pp">#define</span> <a id="106c9" class="tk">MW_ADC3_SAMPLETIMECHL6</a> 0.000000</td></tr>
<tr name="107" id="107">
<td>107</td><td><span class="pp">#define</span> <a id="107c9" class="tk">MW_ADC3_SAMPLETIMECHL7</a> 0.000000</td></tr>
<tr name="108" id="108">
<td>108</td><td><span class="pp">#define</span> <a id="108c9" class="tk">MW_ADC3_SAMPLETIMECHL8</a> 0.000000</td></tr>
<tr name="109" id="109">
<td>109</td><td><span class="pp">#define</span> <a id="109c9" class="tk">MW_ADC3_SAMPLETIMECHL9</a> 0.000000</td></tr>
<tr name="110" id="110">
<td>110</td><td><span class="pp">#define</span> <a id="110c9" class="tk">MW_ADC3_SAMPLETIMECHL10</a> 0.000000</td></tr>
<tr name="111" id="111">
<td>111</td><td><span class="pp">#define</span> <a id="111c9" class="tk">MW_ADC3_SAMPLETIMECHL11</a> 0.000000</td></tr>
<tr name="112" id="112">
<td>112</td><td><span class="pp">#define</span> <a id="112c9" class="tk">MW_ADC3_SAMPLETIMECHL12</a> 0.000000</td></tr>
<tr name="113" id="113">
<td>113</td><td><span class="pp">#define</span> <a id="113c9" class="tk">MW_ADC3_SAMPLETIMECHL13</a> 0.000000</td></tr>
<tr name="114" id="114">
<td>114</td><td><span class="pp">#define</span> <a id="114c9" class="tk">MW_ADC3_SAMPLETIMECHL14</a> 0.000000</td></tr>
<tr name="115" id="115">
<td>115</td><td><span class="pp">#define</span> <a id="115c9" class="tk">MW_ADC3_SAMPLETIMECHL15</a> 0.000000</td></tr>
<tr name="116" id="116">
<td>116</td><td><span class="pp">#define</span> <a id="116c9" class="tk">MW_ADC3_SAMPLETIMECHL16</a> 0.000000</td></tr>
<tr name="117" id="117">
<td>117</td><td><span class="pp">#define</span> <a id="117c9" class="tk">MW_ADC3_SAMPLETIMECHL17</a> 0.000000</td></tr>
<tr name="118" id="118">
<td>118</td><td><span class="pp">#define</span> <a id="118c9" class="tk">MW_ADC3_SAMPLETIMECHL18</a> 0.000000</td></tr>
<tr name="119" id="119">
<td>119</td><td><span class="pp">#define</span> <a id="119c9" class="tk">MW_GPIOA_SHOWPINSETTING</a> 0</td></tr>
<tr name="120" id="120">
<td>120</td><td><span class="pp">#define</span> <a id="120c9" class="tk">MW_GPIOA_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="121" id="121">
<td>121</td><td><span class="pp">#define</span> <a id="121c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="122" id="122">
<td>122</td><td><span class="pp">#define</span> <a id="122c9" class="tk">MW_GPIOA_PUPDREGPIN0</a> 0</td></tr>
<tr name="123" id="123">
<td>123</td><td><span class="pp">#define</span> <a id="123c9" class="tk">MW_GPIOA_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="124" id="124">
<td>124</td><td><span class="pp">#define</span> <a id="124c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="125" id="125">
<td>125</td><td><span class="pp">#define</span> <a id="125c9" class="tk">MW_GPIOA_PUPDREGPIN1</a> 0</td></tr>
<tr name="126" id="126">
<td>126</td><td><span class="pp">#define</span> <a id="126c9" class="tk">MW_GPIOA_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="127" id="127">
<td>127</td><td><span class="pp">#define</span> <a id="127c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="128" id="128">
<td>128</td><td><span class="pp">#define</span> <a id="128c9" class="tk">MW_GPIOA_PUPDREGPIN2</a> 0</td></tr>
<tr name="129" id="129">
<td>129</td><td><span class="pp">#define</span> <a id="129c9" class="tk">MW_GPIOA_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="130" id="130">
<td>130</td><td><span class="pp">#define</span> <a id="130c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="131" id="131">
<td>131</td><td><span class="pp">#define</span> <a id="131c9" class="tk">MW_GPIOA_PUPDREGPIN3</a> 0</td></tr>
<tr name="132" id="132">
<td>132</td><td><span class="pp">#define</span> <a id="132c9" class="tk">MW_GPIOA_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="133" id="133">
<td>133</td><td><span class="pp">#define</span> <a id="133c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="134" id="134">
<td>134</td><td><span class="pp">#define</span> <a id="134c9" class="tk">MW_GPIOA_PUPDREGPIN4</a> 0</td></tr>
<tr name="135" id="135">
<td>135</td><td><span class="pp">#define</span> <a id="135c9" class="tk">MW_GPIOA_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="136" id="136">
<td>136</td><td><span class="pp">#define</span> <a id="136c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="137" id="137">
<td>137</td><td><span class="pp">#define</span> <a id="137c9" class="tk">MW_GPIOA_PUPDREGPIN5</a> 0</td></tr>
<tr name="138" id="138">
<td>138</td><td><span class="pp">#define</span> <a id="138c9" class="tk">MW_GPIOA_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="139" id="139">
<td>139</td><td><span class="pp">#define</span> <a id="139c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="140" id="140">
<td>140</td><td><span class="pp">#define</span> <a id="140c9" class="tk">MW_GPIOA_PUPDREGPIN6</a> 0</td></tr>
<tr name="141" id="141">
<td>141</td><td><span class="pp">#define</span> <a id="141c9" class="tk">MW_GPIOA_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="142" id="142">
<td>142</td><td><span class="pp">#define</span> <a id="142c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="143" id="143">
<td>143</td><td><span class="pp">#define</span> <a id="143c9" class="tk">MW_GPIOA_PUPDREGPIN7</a> 0</td></tr>
<tr name="144" id="144">
<td>144</td><td><span class="pp">#define</span> <a id="144c9" class="tk">MW_GPIOA_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="145" id="145">
<td>145</td><td><span class="pp">#define</span> <a id="145c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="146" id="146">
<td>146</td><td><span class="pp">#define</span> <a id="146c9" class="tk">MW_GPIOA_PUPDREGPIN8</a> 0</td></tr>
<tr name="147" id="147">
<td>147</td><td><span class="pp">#define</span> <a id="147c9" class="tk">MW_GPIOA_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="148" id="148">
<td>148</td><td><span class="pp">#define</span> <a id="148c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="149" id="149">
<td>149</td><td><span class="pp">#define</span> <a id="149c9" class="tk">MW_GPIOA_PUPDREGPIN9</a> 0</td></tr>
<tr name="150" id="150">
<td>150</td><td><span class="pp">#define</span> <a id="150c9" class="tk">MW_GPIOA_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="151" id="151">
<td>151</td><td><span class="pp">#define</span> <a id="151c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="152" id="152">
<td>152</td><td><span class="pp">#define</span> <a id="152c9" class="tk">MW_GPIOA_PUPDREGPIN10</a> 0</td></tr>
<tr name="153" id="153">
<td>153</td><td><span class="pp">#define</span> <a id="153c9" class="tk">MW_GPIOA_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="154" id="154">
<td>154</td><td><span class="pp">#define</span> <a id="154c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="155" id="155">
<td>155</td><td><span class="pp">#define</span> <a id="155c9" class="tk">MW_GPIOA_PUPDREGPIN11</a> 0</td></tr>
<tr name="156" id="156">
<td>156</td><td><span class="pp">#define</span> <a id="156c9" class="tk">MW_GPIOA_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="157" id="157">
<td>157</td><td><span class="pp">#define</span> <a id="157c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="158" id="158">
<td>158</td><td><span class="pp">#define</span> <a id="158c9" class="tk">MW_GPIOA_PUPDREGPIN12</a> 0</td></tr>
<tr name="159" id="159">
<td>159</td><td><span class="pp">#define</span> <a id="159c9" class="tk">MW_GPIOA_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="160" id="160">
<td>160</td><td><span class="pp">#define</span> <a id="160c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="161" id="161">
<td>161</td><td><span class="pp">#define</span> <a id="161c9" class="tk">MW_GPIOA_PUPDREGPIN13</a> 0</td></tr>
<tr name="162" id="162">
<td>162</td><td><span class="pp">#define</span> <a id="162c9" class="tk">MW_GPIOA_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="163" id="163">
<td>163</td><td><span class="pp">#define</span> <a id="163c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="164" id="164">
<td>164</td><td><span class="pp">#define</span> <a id="164c9" class="tk">MW_GPIOA_PUPDREGPIN14</a> 0</td></tr>
<tr name="165" id="165">
<td>165</td><td><span class="pp">#define</span> <a id="165c9" class="tk">MW_GPIOA_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="166" id="166">
<td>166</td><td><span class="pp">#define</span> <a id="166c9" class="tk">MW_GPIOA_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="167" id="167">
<td>167</td><td><span class="pp">#define</span> <a id="167c9" class="tk">MW_GPIOA_PUPDREGPIN15</a> 0</td></tr>
<tr name="168" id="168">
<td>168</td><td><span class="pp">#define</span> <a id="168c9" class="tk">MW_GPIOB_SHOWPINSETTING</a> 0</td></tr>
<tr name="169" id="169">
<td>169</td><td><span class="pp">#define</span> <a id="169c9" class="tk">MW_GPIOB_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="170" id="170">
<td>170</td><td><span class="pp">#define</span> <a id="170c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="171" id="171">
<td>171</td><td><span class="pp">#define</span> <a id="171c9" class="tk">MW_GPIOB_PUPDREGPIN0</a> 0</td></tr>
<tr name="172" id="172">
<td>172</td><td><span class="pp">#define</span> <a id="172c9" class="tk">MW_GPIOB_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="173" id="173">
<td>173</td><td><span class="pp">#define</span> <a id="173c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="174" id="174">
<td>174</td><td><span class="pp">#define</span> <a id="174c9" class="tk">MW_GPIOB_PUPDREGPIN1</a> 0</td></tr>
<tr name="175" id="175">
<td>175</td><td><span class="pp">#define</span> <a id="175c9" class="tk">MW_GPIOB_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="176" id="176">
<td>176</td><td><span class="pp">#define</span> <a id="176c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="177" id="177">
<td>177</td><td><span class="pp">#define</span> <a id="177c9" class="tk">MW_GPIOB_PUPDREGPIN2</a> 0</td></tr>
<tr name="178" id="178">
<td>178</td><td><span class="pp">#define</span> <a id="178c9" class="tk">MW_GPIOB_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="179" id="179">
<td>179</td><td><span class="pp">#define</span> <a id="179c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="180" id="180">
<td>180</td><td><span class="pp">#define</span> <a id="180c9" class="tk">MW_GPIOB_PUPDREGPIN3</a> 0</td></tr>
<tr name="181" id="181">
<td>181</td><td><span class="pp">#define</span> <a id="181c9" class="tk">MW_GPIOB_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="182" id="182">
<td>182</td><td><span class="pp">#define</span> <a id="182c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="183" id="183">
<td>183</td><td><span class="pp">#define</span> <a id="183c9" class="tk">MW_GPIOB_PUPDREGPIN4</a> 0</td></tr>
<tr name="184" id="184">
<td>184</td><td><span class="pp">#define</span> <a id="184c9" class="tk">MW_GPIOB_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="185" id="185">
<td>185</td><td><span class="pp">#define</span> <a id="185c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="186" id="186">
<td>186</td><td><span class="pp">#define</span> <a id="186c9" class="tk">MW_GPIOB_PUPDREGPIN5</a> 0</td></tr>
<tr name="187" id="187">
<td>187</td><td><span class="pp">#define</span> <a id="187c9" class="tk">MW_GPIOB_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="188" id="188">
<td>188</td><td><span class="pp">#define</span> <a id="188c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="189" id="189">
<td>189</td><td><span class="pp">#define</span> <a id="189c9" class="tk">MW_GPIOB_PUPDREGPIN6</a> 0</td></tr>
<tr name="190" id="190">
<td>190</td><td><span class="pp">#define</span> <a id="190c9" class="tk">MW_GPIOB_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="191" id="191">
<td>191</td><td><span class="pp">#define</span> <a id="191c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="192" id="192">
<td>192</td><td><span class="pp">#define</span> <a id="192c9" class="tk">MW_GPIOB_PUPDREGPIN7</a> 0</td></tr>
<tr name="193" id="193">
<td>193</td><td><span class="pp">#define</span> <a id="193c9" class="tk">MW_GPIOB_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="194" id="194">
<td>194</td><td><span class="pp">#define</span> <a id="194c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="195" id="195">
<td>195</td><td><span class="pp">#define</span> <a id="195c9" class="tk">MW_GPIOB_PUPDREGPIN8</a> 0</td></tr>
<tr name="196" id="196">
<td>196</td><td><span class="pp">#define</span> <a id="196c9" class="tk">MW_GPIOB_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="197" id="197">
<td>197</td><td><span class="pp">#define</span> <a id="197c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="198" id="198">
<td>198</td><td><span class="pp">#define</span> <a id="198c9" class="tk">MW_GPIOB_PUPDREGPIN9</a> 0</td></tr>
<tr name="199" id="199">
<td>199</td><td><span class="pp">#define</span> <a id="199c9" class="tk">MW_GPIOB_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="200" id="200">
<td>200</td><td><span class="pp">#define</span> <a id="200c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="201" id="201">
<td>201</td><td><span class="pp">#define</span> <a id="201c9" class="tk">MW_GPIOB_PUPDREGPIN10</a> 0</td></tr>
<tr name="202" id="202">
<td>202</td><td><span class="pp">#define</span> <a id="202c9" class="tk">MW_GPIOB_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="203" id="203">
<td>203</td><td><span class="pp">#define</span> <a id="203c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="204" id="204">
<td>204</td><td><span class="pp">#define</span> <a id="204c9" class="tk">MW_GPIOB_PUPDREGPIN11</a> 0</td></tr>
<tr name="205" id="205">
<td>205</td><td><span class="pp">#define</span> <a id="205c9" class="tk">MW_GPIOB_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="206" id="206">
<td>206</td><td><span class="pp">#define</span> <a id="206c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="207" id="207">
<td>207</td><td><span class="pp">#define</span> <a id="207c9" class="tk">MW_GPIOB_PUPDREGPIN12</a> 0</td></tr>
<tr name="208" id="208">
<td>208</td><td><span class="pp">#define</span> <a id="208c9" class="tk">MW_GPIOB_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="209" id="209">
<td>209</td><td><span class="pp">#define</span> <a id="209c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="210" id="210">
<td>210</td><td><span class="pp">#define</span> <a id="210c9" class="tk">MW_GPIOB_PUPDREGPIN13</a> 0</td></tr>
<tr name="211" id="211">
<td>211</td><td><span class="pp">#define</span> <a id="211c9" class="tk">MW_GPIOB_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="212" id="212">
<td>212</td><td><span class="pp">#define</span> <a id="212c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="213" id="213">
<td>213</td><td><span class="pp">#define</span> <a id="213c9" class="tk">MW_GPIOB_PUPDREGPIN14</a> 0</td></tr>
<tr name="214" id="214">
<td>214</td><td><span class="pp">#define</span> <a id="214c9" class="tk">MW_GPIOB_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="215" id="215">
<td>215</td><td><span class="pp">#define</span> <a id="215c9" class="tk">MW_GPIOB_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="216" id="216">
<td>216</td><td><span class="pp">#define</span> <a id="216c9" class="tk">MW_GPIOB_PUPDREGPIN15</a> 0</td></tr>
<tr name="217" id="217">
<td>217</td><td><span class="pp">#define</span> <a id="217c9" class="tk">MW_GPIOC_SHOWPINSETTING</a> 0</td></tr>
<tr name="218" id="218">
<td>218</td><td><span class="pp">#define</span> <a id="218c9" class="tk">MW_GPIOC_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="219" id="219">
<td>219</td><td><span class="pp">#define</span> <a id="219c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="220" id="220">
<td>220</td><td><span class="pp">#define</span> <a id="220c9" class="tk">MW_GPIOC_PUPDREGPIN0</a> 0</td></tr>
<tr name="221" id="221">
<td>221</td><td><span class="pp">#define</span> <a id="221c9" class="tk">MW_GPIOC_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="222" id="222">
<td>222</td><td><span class="pp">#define</span> <a id="222c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="223" id="223">
<td>223</td><td><span class="pp">#define</span> <a id="223c9" class="tk">MW_GPIOC_PUPDREGPIN1</a> 0</td></tr>
<tr name="224" id="224">
<td>224</td><td><span class="pp">#define</span> <a id="224c9" class="tk">MW_GPIOC_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="225" id="225">
<td>225</td><td><span class="pp">#define</span> <a id="225c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="226" id="226">
<td>226</td><td><span class="pp">#define</span> <a id="226c9" class="tk">MW_GPIOC_PUPDREGPIN2</a> 0</td></tr>
<tr name="227" id="227">
<td>227</td><td><span class="pp">#define</span> <a id="227c9" class="tk">MW_GPIOC_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="228" id="228">
<td>228</td><td><span class="pp">#define</span> <a id="228c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="229" id="229">
<td>229</td><td><span class="pp">#define</span> <a id="229c9" class="tk">MW_GPIOC_PUPDREGPIN3</a> 0</td></tr>
<tr name="230" id="230">
<td>230</td><td><span class="pp">#define</span> <a id="230c9" class="tk">MW_GPIOC_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="231" id="231">
<td>231</td><td><span class="pp">#define</span> <a id="231c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="232" id="232">
<td>232</td><td><span class="pp">#define</span> <a id="232c9" class="tk">MW_GPIOC_PUPDREGPIN4</a> 0</td></tr>
<tr name="233" id="233">
<td>233</td><td><span class="pp">#define</span> <a id="233c9" class="tk">MW_GPIOC_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="234" id="234">
<td>234</td><td><span class="pp">#define</span> <a id="234c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="235" id="235">
<td>235</td><td><span class="pp">#define</span> <a id="235c9" class="tk">MW_GPIOC_PUPDREGPIN5</a> 0</td></tr>
<tr name="236" id="236">
<td>236</td><td><span class="pp">#define</span> <a id="236c9" class="tk">MW_GPIOC_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="237" id="237">
<td>237</td><td><span class="pp">#define</span> <a id="237c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="238" id="238">
<td>238</td><td><span class="pp">#define</span> <a id="238c9" class="tk">MW_GPIOC_PUPDREGPIN6</a> 0</td></tr>
<tr name="239" id="239">
<td>239</td><td><span class="pp">#define</span> <a id="239c9" class="tk">MW_GPIOC_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="240" id="240">
<td>240</td><td><span class="pp">#define</span> <a id="240c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="241" id="241">
<td>241</td><td><span class="pp">#define</span> <a id="241c9" class="tk">MW_GPIOC_PUPDREGPIN7</a> 0</td></tr>
<tr name="242" id="242">
<td>242</td><td><span class="pp">#define</span> <a id="242c9" class="tk">MW_GPIOC_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="243" id="243">
<td>243</td><td><span class="pp">#define</span> <a id="243c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="244" id="244">
<td>244</td><td><span class="pp">#define</span> <a id="244c9" class="tk">MW_GPIOC_PUPDREGPIN8</a> 0</td></tr>
<tr name="245" id="245">
<td>245</td><td><span class="pp">#define</span> <a id="245c9" class="tk">MW_GPIOC_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="246" id="246">
<td>246</td><td><span class="pp">#define</span> <a id="246c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="247" id="247">
<td>247</td><td><span class="pp">#define</span> <a id="247c9" class="tk">MW_GPIOC_PUPDREGPIN9</a> 0</td></tr>
<tr name="248" id="248">
<td>248</td><td><span class="pp">#define</span> <a id="248c9" class="tk">MW_GPIOC_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="249" id="249">
<td>249</td><td><span class="pp">#define</span> <a id="249c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="250" id="250">
<td>250</td><td><span class="pp">#define</span> <a id="250c9" class="tk">MW_GPIOC_PUPDREGPIN10</a> 0</td></tr>
<tr name="251" id="251">
<td>251</td><td><span class="pp">#define</span> <a id="251c9" class="tk">MW_GPIOC_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="252" id="252">
<td>252</td><td><span class="pp">#define</span> <a id="252c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="253" id="253">
<td>253</td><td><span class="pp">#define</span> <a id="253c9" class="tk">MW_GPIOC_PUPDREGPIN11</a> 0</td></tr>
<tr name="254" id="254">
<td>254</td><td><span class="pp">#define</span> <a id="254c9" class="tk">MW_GPIOC_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="255" id="255">
<td>255</td><td><span class="pp">#define</span> <a id="255c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="256" id="256">
<td>256</td><td><span class="pp">#define</span> <a id="256c9" class="tk">MW_GPIOC_PUPDREGPIN12</a> 0</td></tr>
<tr name="257" id="257">
<td>257</td><td><span class="pp">#define</span> <a id="257c9" class="tk">MW_GPIOC_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="258" id="258">
<td>258</td><td><span class="pp">#define</span> <a id="258c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="259" id="259">
<td>259</td><td><span class="pp">#define</span> <a id="259c9" class="tk">MW_GPIOC_PUPDREGPIN13</a> 0</td></tr>
<tr name="260" id="260">
<td>260</td><td><span class="pp">#define</span> <a id="260c9" class="tk">MW_GPIOC_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="261" id="261">
<td>261</td><td><span class="pp">#define</span> <a id="261c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="262" id="262">
<td>262</td><td><span class="pp">#define</span> <a id="262c9" class="tk">MW_GPIOC_PUPDREGPIN14</a> 0</td></tr>
<tr name="263" id="263">
<td>263</td><td><span class="pp">#define</span> <a id="263c9" class="tk">MW_GPIOC_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="264" id="264">
<td>264</td><td><span class="pp">#define</span> <a id="264c9" class="tk">MW_GPIOC_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="265" id="265">
<td>265</td><td><span class="pp">#define</span> <a id="265c9" class="tk">MW_GPIOC_PUPDREGPIN15</a> 0</td></tr>
<tr name="266" id="266">
<td>266</td><td><span class="pp">#define</span> <a id="266c9" class="tk">MW_GPIOD_SHOWPINSETTING</a> 0</td></tr>
<tr name="267" id="267">
<td>267</td><td><span class="pp">#define</span> <a id="267c9" class="tk">MW_GPIOD_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="268" id="268">
<td>268</td><td><span class="pp">#define</span> <a id="268c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="269" id="269">
<td>269</td><td><span class="pp">#define</span> <a id="269c9" class="tk">MW_GPIOD_PUPDREGPIN0</a> 0</td></tr>
<tr name="270" id="270">
<td>270</td><td><span class="pp">#define</span> <a id="270c9" class="tk">MW_GPIOD_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="271" id="271">
<td>271</td><td><span class="pp">#define</span> <a id="271c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="272" id="272">
<td>272</td><td><span class="pp">#define</span> <a id="272c9" class="tk">MW_GPIOD_PUPDREGPIN1</a> 0</td></tr>
<tr name="273" id="273">
<td>273</td><td><span class="pp">#define</span> <a id="273c9" class="tk">MW_GPIOD_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="274" id="274">
<td>274</td><td><span class="pp">#define</span> <a id="274c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="275" id="275">
<td>275</td><td><span class="pp">#define</span> <a id="275c9" class="tk">MW_GPIOD_PUPDREGPIN2</a> 0</td></tr>
<tr name="276" id="276">
<td>276</td><td><span class="pp">#define</span> <a id="276c9" class="tk">MW_GPIOD_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="277" id="277">
<td>277</td><td><span class="pp">#define</span> <a id="277c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="278" id="278">
<td>278</td><td><span class="pp">#define</span> <a id="278c9" class="tk">MW_GPIOD_PUPDREGPIN3</a> 0</td></tr>
<tr name="279" id="279">
<td>279</td><td><span class="pp">#define</span> <a id="279c9" class="tk">MW_GPIOD_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="280" id="280">
<td>280</td><td><span class="pp">#define</span> <a id="280c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="281" id="281">
<td>281</td><td><span class="pp">#define</span> <a id="281c9" class="tk">MW_GPIOD_PUPDREGPIN4</a> 0</td></tr>
<tr name="282" id="282">
<td>282</td><td><span class="pp">#define</span> <a id="282c9" class="tk">MW_GPIOD_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="283" id="283">
<td>283</td><td><span class="pp">#define</span> <a id="283c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="284" id="284">
<td>284</td><td><span class="pp">#define</span> <a id="284c9" class="tk">MW_GPIOD_PUPDREGPIN5</a> 0</td></tr>
<tr name="285" id="285">
<td>285</td><td><span class="pp">#define</span> <a id="285c9" class="tk">MW_GPIOD_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="286" id="286">
<td>286</td><td><span class="pp">#define</span> <a id="286c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="287" id="287">
<td>287</td><td><span class="pp">#define</span> <a id="287c9" class="tk">MW_GPIOD_PUPDREGPIN6</a> 0</td></tr>
<tr name="288" id="288">
<td>288</td><td><span class="pp">#define</span> <a id="288c9" class="tk">MW_GPIOD_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="289" id="289">
<td>289</td><td><span class="pp">#define</span> <a id="289c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="290" id="290">
<td>290</td><td><span class="pp">#define</span> <a id="290c9" class="tk">MW_GPIOD_PUPDREGPIN7</a> 0</td></tr>
<tr name="291" id="291">
<td>291</td><td><span class="pp">#define</span> <a id="291c9" class="tk">MW_GPIOD_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="292" id="292">
<td>292</td><td><span class="pp">#define</span> <a id="292c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="293" id="293">
<td>293</td><td><span class="pp">#define</span> <a id="293c9" class="tk">MW_GPIOD_PUPDREGPIN8</a> 0</td></tr>
<tr name="294" id="294">
<td>294</td><td><span class="pp">#define</span> <a id="294c9" class="tk">MW_GPIOD_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="295" id="295">
<td>295</td><td><span class="pp">#define</span> <a id="295c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="296" id="296">
<td>296</td><td><span class="pp">#define</span> <a id="296c9" class="tk">MW_GPIOD_PUPDREGPIN9</a> 0</td></tr>
<tr name="297" id="297">
<td>297</td><td><span class="pp">#define</span> <a id="297c9" class="tk">MW_GPIOD_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="298" id="298">
<td>298</td><td><span class="pp">#define</span> <a id="298c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="299" id="299">
<td>299</td><td><span class="pp">#define</span> <a id="299c9" class="tk">MW_GPIOD_PUPDREGPIN10</a> 0</td></tr>
<tr name="300" id="300">
<td>300</td><td><span class="pp">#define</span> <a id="300c9" class="tk">MW_GPIOD_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="301" id="301">
<td>301</td><td><span class="pp">#define</span> <a id="301c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="302" id="302">
<td>302</td><td><span class="pp">#define</span> <a id="302c9" class="tk">MW_GPIOD_PUPDREGPIN11</a> 0</td></tr>
<tr name="303" id="303">
<td>303</td><td><span class="pp">#define</span> <a id="303c9" class="tk">MW_GPIOD_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="304" id="304">
<td>304</td><td><span class="pp">#define</span> <a id="304c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="305" id="305">
<td>305</td><td><span class="pp">#define</span> <a id="305c9" class="tk">MW_GPIOD_PUPDREGPIN12</a> 0</td></tr>
<tr name="306" id="306">
<td>306</td><td><span class="pp">#define</span> <a id="306c9" class="tk">MW_GPIOD_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="307" id="307">
<td>307</td><td><span class="pp">#define</span> <a id="307c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="308" id="308">
<td>308</td><td><span class="pp">#define</span> <a id="308c9" class="tk">MW_GPIOD_PUPDREGPIN13</a> 0</td></tr>
<tr name="309" id="309">
<td>309</td><td><span class="pp">#define</span> <a id="309c9" class="tk">MW_GPIOD_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="310" id="310">
<td>310</td><td><span class="pp">#define</span> <a id="310c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="311" id="311">
<td>311</td><td><span class="pp">#define</span> <a id="311c9" class="tk">MW_GPIOD_PUPDREGPIN14</a> 0</td></tr>
<tr name="312" id="312">
<td>312</td><td><span class="pp">#define</span> <a id="312c9" class="tk">MW_GPIOD_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="313" id="313">
<td>313</td><td><span class="pp">#define</span> <a id="313c9" class="tk">MW_GPIOD_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="314" id="314">
<td>314</td><td><span class="pp">#define</span> <a id="314c9" class="tk">MW_GPIOD_PUPDREGPIN15</a> 0</td></tr>
<tr name="315" id="315">
<td>315</td><td><span class="pp">#define</span> <a id="315c9" class="tk">MW_GPIOE_SHOWPINSETTING</a> 0</td></tr>
<tr name="316" id="316">
<td>316</td><td><span class="pp">#define</span> <a id="316c9" class="tk">MW_GPIOE_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="317" id="317">
<td>317</td><td><span class="pp">#define</span> <a id="317c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="318" id="318">
<td>318</td><td><span class="pp">#define</span> <a id="318c9" class="tk">MW_GPIOE_PUPDREGPIN0</a> 0</td></tr>
<tr name="319" id="319">
<td>319</td><td><span class="pp">#define</span> <a id="319c9" class="tk">MW_GPIOE_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="320" id="320">
<td>320</td><td><span class="pp">#define</span> <a id="320c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="321" id="321">
<td>321</td><td><span class="pp">#define</span> <a id="321c9" class="tk">MW_GPIOE_PUPDREGPIN1</a> 0</td></tr>
<tr name="322" id="322">
<td>322</td><td><span class="pp">#define</span> <a id="322c9" class="tk">MW_GPIOE_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="323" id="323">
<td>323</td><td><span class="pp">#define</span> <a id="323c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="324" id="324">
<td>324</td><td><span class="pp">#define</span> <a id="324c9" class="tk">MW_GPIOE_PUPDREGPIN2</a> 0</td></tr>
<tr name="325" id="325">
<td>325</td><td><span class="pp">#define</span> <a id="325c9" class="tk">MW_GPIOE_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="326" id="326">
<td>326</td><td><span class="pp">#define</span> <a id="326c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="327" id="327">
<td>327</td><td><span class="pp">#define</span> <a id="327c9" class="tk">MW_GPIOE_PUPDREGPIN3</a> 0</td></tr>
<tr name="328" id="328">
<td>328</td><td><span class="pp">#define</span> <a id="328c9" class="tk">MW_GPIOE_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="329" id="329">
<td>329</td><td><span class="pp">#define</span> <a id="329c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="330" id="330">
<td>330</td><td><span class="pp">#define</span> <a id="330c9" class="tk">MW_GPIOE_PUPDREGPIN4</a> 0</td></tr>
<tr name="331" id="331">
<td>331</td><td><span class="pp">#define</span> <a id="331c9" class="tk">MW_GPIOE_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="332" id="332">
<td>332</td><td><span class="pp">#define</span> <a id="332c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="333" id="333">
<td>333</td><td><span class="pp">#define</span> <a id="333c9" class="tk">MW_GPIOE_PUPDREGPIN5</a> 0</td></tr>
<tr name="334" id="334">
<td>334</td><td><span class="pp">#define</span> <a id="334c9" class="tk">MW_GPIOE_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="335" id="335">
<td>335</td><td><span class="pp">#define</span> <a id="335c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="336" id="336">
<td>336</td><td><span class="pp">#define</span> <a id="336c9" class="tk">MW_GPIOE_PUPDREGPIN6</a> 0</td></tr>
<tr name="337" id="337">
<td>337</td><td><span class="pp">#define</span> <a id="337c9" class="tk">MW_GPIOE_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="338" id="338">
<td>338</td><td><span class="pp">#define</span> <a id="338c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="339" id="339">
<td>339</td><td><span class="pp">#define</span> <a id="339c9" class="tk">MW_GPIOE_PUPDREGPIN7</a> 0</td></tr>
<tr name="340" id="340">
<td>340</td><td><span class="pp">#define</span> <a id="340c9" class="tk">MW_GPIOE_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="341" id="341">
<td>341</td><td><span class="pp">#define</span> <a id="341c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="342" id="342">
<td>342</td><td><span class="pp">#define</span> <a id="342c9" class="tk">MW_GPIOE_PUPDREGPIN8</a> 0</td></tr>
<tr name="343" id="343">
<td>343</td><td><span class="pp">#define</span> <a id="343c9" class="tk">MW_GPIOE_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="344" id="344">
<td>344</td><td><span class="pp">#define</span> <a id="344c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="345" id="345">
<td>345</td><td><span class="pp">#define</span> <a id="345c9" class="tk">MW_GPIOE_PUPDREGPIN9</a> 0</td></tr>
<tr name="346" id="346">
<td>346</td><td><span class="pp">#define</span> <a id="346c9" class="tk">MW_GPIOE_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="347" id="347">
<td>347</td><td><span class="pp">#define</span> <a id="347c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="348" id="348">
<td>348</td><td><span class="pp">#define</span> <a id="348c9" class="tk">MW_GPIOE_PUPDREGPIN10</a> 0</td></tr>
<tr name="349" id="349">
<td>349</td><td><span class="pp">#define</span> <a id="349c9" class="tk">MW_GPIOE_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="350" id="350">
<td>350</td><td><span class="pp">#define</span> <a id="350c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="351" id="351">
<td>351</td><td><span class="pp">#define</span> <a id="351c9" class="tk">MW_GPIOE_PUPDREGPIN11</a> 0</td></tr>
<tr name="352" id="352">
<td>352</td><td><span class="pp">#define</span> <a id="352c9" class="tk">MW_GPIOE_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="353" id="353">
<td>353</td><td><span class="pp">#define</span> <a id="353c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="354" id="354">
<td>354</td><td><span class="pp">#define</span> <a id="354c9" class="tk">MW_GPIOE_PUPDREGPIN12</a> 0</td></tr>
<tr name="355" id="355">
<td>355</td><td><span class="pp">#define</span> <a id="355c9" class="tk">MW_GPIOE_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="356" id="356">
<td>356</td><td><span class="pp">#define</span> <a id="356c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="357" id="357">
<td>357</td><td><span class="pp">#define</span> <a id="357c9" class="tk">MW_GPIOE_PUPDREGPIN13</a> 0</td></tr>
<tr name="358" id="358">
<td>358</td><td><span class="pp">#define</span> <a id="358c9" class="tk">MW_GPIOE_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="359" id="359">
<td>359</td><td><span class="pp">#define</span> <a id="359c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="360" id="360">
<td>360</td><td><span class="pp">#define</span> <a id="360c9" class="tk">MW_GPIOE_PUPDREGPIN14</a> 0</td></tr>
<tr name="361" id="361">
<td>361</td><td><span class="pp">#define</span> <a id="361c9" class="tk">MW_GPIOE_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="362" id="362">
<td>362</td><td><span class="pp">#define</span> <a id="362c9" class="tk">MW_GPIOE_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="363" id="363">
<td>363</td><td><span class="pp">#define</span> <a id="363c9" class="tk">MW_GPIOE_PUPDREGPIN15</a> 0</td></tr>
<tr name="364" id="364">
<td>364</td><td><span class="pp">#define</span> <a id="364c9" class="tk">MW_GPIOF_SHOWPINSETTING</a> 0</td></tr>
<tr name="365" id="365">
<td>365</td><td><span class="pp">#define</span> <a id="365c9" class="tk">MW_GPIOF_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="366" id="366">
<td>366</td><td><span class="pp">#define</span> <a id="366c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="367" id="367">
<td>367</td><td><span class="pp">#define</span> <a id="367c9" class="tk">MW_GPIOF_PUPDREGPIN0</a> 0</td></tr>
<tr name="368" id="368">
<td>368</td><td><span class="pp">#define</span> <a id="368c9" class="tk">MW_GPIOF_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="369" id="369">
<td>369</td><td><span class="pp">#define</span> <a id="369c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="370" id="370">
<td>370</td><td><span class="pp">#define</span> <a id="370c9" class="tk">MW_GPIOF_PUPDREGPIN1</a> 0</td></tr>
<tr name="371" id="371">
<td>371</td><td><span class="pp">#define</span> <a id="371c9" class="tk">MW_GPIOF_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="372" id="372">
<td>372</td><td><span class="pp">#define</span> <a id="372c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="373" id="373">
<td>373</td><td><span class="pp">#define</span> <a id="373c9" class="tk">MW_GPIOF_PUPDREGPIN2</a> 0</td></tr>
<tr name="374" id="374">
<td>374</td><td><span class="pp">#define</span> <a id="374c9" class="tk">MW_GPIOF_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="375" id="375">
<td>375</td><td><span class="pp">#define</span> <a id="375c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="376" id="376">
<td>376</td><td><span class="pp">#define</span> <a id="376c9" class="tk">MW_GPIOF_PUPDREGPIN3</a> 0</td></tr>
<tr name="377" id="377">
<td>377</td><td><span class="pp">#define</span> <a id="377c9" class="tk">MW_GPIOF_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="378" id="378">
<td>378</td><td><span class="pp">#define</span> <a id="378c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="379" id="379">
<td>379</td><td><span class="pp">#define</span> <a id="379c9" class="tk">MW_GPIOF_PUPDREGPIN4</a> 0</td></tr>
<tr name="380" id="380">
<td>380</td><td><span class="pp">#define</span> <a id="380c9" class="tk">MW_GPIOF_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="381" id="381">
<td>381</td><td><span class="pp">#define</span> <a id="381c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="382" id="382">
<td>382</td><td><span class="pp">#define</span> <a id="382c9" class="tk">MW_GPIOF_PUPDREGPIN5</a> 0</td></tr>
<tr name="383" id="383">
<td>383</td><td><span class="pp">#define</span> <a id="383c9" class="tk">MW_GPIOF_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="384" id="384">
<td>384</td><td><span class="pp">#define</span> <a id="384c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="385" id="385">
<td>385</td><td><span class="pp">#define</span> <a id="385c9" class="tk">MW_GPIOF_PUPDREGPIN6</a> 0</td></tr>
<tr name="386" id="386">
<td>386</td><td><span class="pp">#define</span> <a id="386c9" class="tk">MW_GPIOF_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="387" id="387">
<td>387</td><td><span class="pp">#define</span> <a id="387c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="388" id="388">
<td>388</td><td><span class="pp">#define</span> <a id="388c9" class="tk">MW_GPIOF_PUPDREGPIN7</a> 0</td></tr>
<tr name="389" id="389">
<td>389</td><td><span class="pp">#define</span> <a id="389c9" class="tk">MW_GPIOF_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="390" id="390">
<td>390</td><td><span class="pp">#define</span> <a id="390c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="391" id="391">
<td>391</td><td><span class="pp">#define</span> <a id="391c9" class="tk">MW_GPIOF_PUPDREGPIN8</a> 0</td></tr>
<tr name="392" id="392">
<td>392</td><td><span class="pp">#define</span> <a id="392c9" class="tk">MW_GPIOF_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="393" id="393">
<td>393</td><td><span class="pp">#define</span> <a id="393c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="394" id="394">
<td>394</td><td><span class="pp">#define</span> <a id="394c9" class="tk">MW_GPIOF_PUPDREGPIN9</a> 0</td></tr>
<tr name="395" id="395">
<td>395</td><td><span class="pp">#define</span> <a id="395c9" class="tk">MW_GPIOF_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="396" id="396">
<td>396</td><td><span class="pp">#define</span> <a id="396c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="397" id="397">
<td>397</td><td><span class="pp">#define</span> <a id="397c9" class="tk">MW_GPIOF_PUPDREGPIN10</a> 0</td></tr>
<tr name="398" id="398">
<td>398</td><td><span class="pp">#define</span> <a id="398c9" class="tk">MW_GPIOF_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="399" id="399">
<td>399</td><td><span class="pp">#define</span> <a id="399c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="400" id="400">
<td>400</td><td><span class="pp">#define</span> <a id="400c9" class="tk">MW_GPIOF_PUPDREGPIN11</a> 0</td></tr>
<tr name="401" id="401">
<td>401</td><td><span class="pp">#define</span> <a id="401c9" class="tk">MW_GPIOF_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="402" id="402">
<td>402</td><td><span class="pp">#define</span> <a id="402c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="403" id="403">
<td>403</td><td><span class="pp">#define</span> <a id="403c9" class="tk">MW_GPIOF_PUPDREGPIN12</a> 0</td></tr>
<tr name="404" id="404">
<td>404</td><td><span class="pp">#define</span> <a id="404c9" class="tk">MW_GPIOF_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="405" id="405">
<td>405</td><td><span class="pp">#define</span> <a id="405c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="406" id="406">
<td>406</td><td><span class="pp">#define</span> <a id="406c9" class="tk">MW_GPIOF_PUPDREGPIN13</a> 0</td></tr>
<tr name="407" id="407">
<td>407</td><td><span class="pp">#define</span> <a id="407c9" class="tk">MW_GPIOF_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="408" id="408">
<td>408</td><td><span class="pp">#define</span> <a id="408c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="409" id="409">
<td>409</td><td><span class="pp">#define</span> <a id="409c9" class="tk">MW_GPIOF_PUPDREGPIN14</a> 0</td></tr>
<tr name="410" id="410">
<td>410</td><td><span class="pp">#define</span> <a id="410c9" class="tk">MW_GPIOF_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="411" id="411">
<td>411</td><td><span class="pp">#define</span> <a id="411c9" class="tk">MW_GPIOF_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="412" id="412">
<td>412</td><td><span class="pp">#define</span> <a id="412c9" class="tk">MW_GPIOF_PUPDREGPIN15</a> 0</td></tr>
<tr name="413" id="413">
<td>413</td><td><span class="pp">#define</span> <a id="413c9" class="tk">MW_GPIOG_SHOWPINSETTING</a> 0</td></tr>
<tr name="414" id="414">
<td>414</td><td><span class="pp">#define</span> <a id="414c9" class="tk">MW_GPIOG_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="415" id="415">
<td>415</td><td><span class="pp">#define</span> <a id="415c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="416" id="416">
<td>416</td><td><span class="pp">#define</span> <a id="416c9" class="tk">MW_GPIOG_PUPDREGPIN0</a> 0</td></tr>
<tr name="417" id="417">
<td>417</td><td><span class="pp">#define</span> <a id="417c9" class="tk">MW_GPIOG_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="418" id="418">
<td>418</td><td><span class="pp">#define</span> <a id="418c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="419" id="419">
<td>419</td><td><span class="pp">#define</span> <a id="419c9" class="tk">MW_GPIOG_PUPDREGPIN1</a> 0</td></tr>
<tr name="420" id="420">
<td>420</td><td><span class="pp">#define</span> <a id="420c9" class="tk">MW_GPIOG_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="421" id="421">
<td>421</td><td><span class="pp">#define</span> <a id="421c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="422" id="422">
<td>422</td><td><span class="pp">#define</span> <a id="422c9" class="tk">MW_GPIOG_PUPDREGPIN2</a> 0</td></tr>
<tr name="423" id="423">
<td>423</td><td><span class="pp">#define</span> <a id="423c9" class="tk">MW_GPIOG_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="424" id="424">
<td>424</td><td><span class="pp">#define</span> <a id="424c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="425" id="425">
<td>425</td><td><span class="pp">#define</span> <a id="425c9" class="tk">MW_GPIOG_PUPDREGPIN3</a> 0</td></tr>
<tr name="426" id="426">
<td>426</td><td><span class="pp">#define</span> <a id="426c9" class="tk">MW_GPIOG_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="427" id="427">
<td>427</td><td><span class="pp">#define</span> <a id="427c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="428" id="428">
<td>428</td><td><span class="pp">#define</span> <a id="428c9" class="tk">MW_GPIOG_PUPDREGPIN4</a> 0</td></tr>
<tr name="429" id="429">
<td>429</td><td><span class="pp">#define</span> <a id="429c9" class="tk">MW_GPIOG_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="430" id="430">
<td>430</td><td><span class="pp">#define</span> <a id="430c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="431" id="431">
<td>431</td><td><span class="pp">#define</span> <a id="431c9" class="tk">MW_GPIOG_PUPDREGPIN5</a> 0</td></tr>
<tr name="432" id="432">
<td>432</td><td><span class="pp">#define</span> <a id="432c9" class="tk">MW_GPIOG_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="433" id="433">
<td>433</td><td><span class="pp">#define</span> <a id="433c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="434" id="434">
<td>434</td><td><span class="pp">#define</span> <a id="434c9" class="tk">MW_GPIOG_PUPDREGPIN6</a> 0</td></tr>
<tr name="435" id="435">
<td>435</td><td><span class="pp">#define</span> <a id="435c9" class="tk">MW_GPIOG_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="436" id="436">
<td>436</td><td><span class="pp">#define</span> <a id="436c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="437" id="437">
<td>437</td><td><span class="pp">#define</span> <a id="437c9" class="tk">MW_GPIOG_PUPDREGPIN7</a> 0</td></tr>
<tr name="438" id="438">
<td>438</td><td><span class="pp">#define</span> <a id="438c9" class="tk">MW_GPIOG_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="439" id="439">
<td>439</td><td><span class="pp">#define</span> <a id="439c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="440" id="440">
<td>440</td><td><span class="pp">#define</span> <a id="440c9" class="tk">MW_GPIOG_PUPDREGPIN8</a> 0</td></tr>
<tr name="441" id="441">
<td>441</td><td><span class="pp">#define</span> <a id="441c9" class="tk">MW_GPIOG_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="442" id="442">
<td>442</td><td><span class="pp">#define</span> <a id="442c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="443" id="443">
<td>443</td><td><span class="pp">#define</span> <a id="443c9" class="tk">MW_GPIOG_PUPDREGPIN9</a> 0</td></tr>
<tr name="444" id="444">
<td>444</td><td><span class="pp">#define</span> <a id="444c9" class="tk">MW_GPIOG_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="445" id="445">
<td>445</td><td><span class="pp">#define</span> <a id="445c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="446" id="446">
<td>446</td><td><span class="pp">#define</span> <a id="446c9" class="tk">MW_GPIOG_PUPDREGPIN10</a> 0</td></tr>
<tr name="447" id="447">
<td>447</td><td><span class="pp">#define</span> <a id="447c9" class="tk">MW_GPIOG_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="448" id="448">
<td>448</td><td><span class="pp">#define</span> <a id="448c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="449" id="449">
<td>449</td><td><span class="pp">#define</span> <a id="449c9" class="tk">MW_GPIOG_PUPDREGPIN11</a> 0</td></tr>
<tr name="450" id="450">
<td>450</td><td><span class="pp">#define</span> <a id="450c9" class="tk">MW_GPIOG_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="451" id="451">
<td>451</td><td><span class="pp">#define</span> <a id="451c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="452" id="452">
<td>452</td><td><span class="pp">#define</span> <a id="452c9" class="tk">MW_GPIOG_PUPDREGPIN12</a> 0</td></tr>
<tr name="453" id="453">
<td>453</td><td><span class="pp">#define</span> <a id="453c9" class="tk">MW_GPIOG_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="454" id="454">
<td>454</td><td><span class="pp">#define</span> <a id="454c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="455" id="455">
<td>455</td><td><span class="pp">#define</span> <a id="455c9" class="tk">MW_GPIOG_PUPDREGPIN13</a> 0</td></tr>
<tr name="456" id="456">
<td>456</td><td><span class="pp">#define</span> <a id="456c9" class="tk">MW_GPIOG_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="457" id="457">
<td>457</td><td><span class="pp">#define</span> <a id="457c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="458" id="458">
<td>458</td><td><span class="pp">#define</span> <a id="458c9" class="tk">MW_GPIOG_PUPDREGPIN14</a> 0</td></tr>
<tr name="459" id="459">
<td>459</td><td><span class="pp">#define</span> <a id="459c9" class="tk">MW_GPIOG_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="460" id="460">
<td>460</td><td><span class="pp">#define</span> <a id="460c9" class="tk">MW_GPIOG_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="461" id="461">
<td>461</td><td><span class="pp">#define</span> <a id="461c9" class="tk">MW_GPIOG_PUPDREGPIN15</a> 0</td></tr>
<tr name="462" id="462">
<td>462</td><td><span class="pp">#define</span> <a id="462c9" class="tk">MW_GPIOH_SHOWPINSETTING</a> 0</td></tr>
<tr name="463" id="463">
<td>463</td><td><span class="pp">#define</span> <a id="463c9" class="tk">MW_GPIOH_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="464" id="464">
<td>464</td><td><span class="pp">#define</span> <a id="464c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="465" id="465">
<td>465</td><td><span class="pp">#define</span> <a id="465c9" class="tk">MW_GPIOH_PUPDREGPIN0</a> 0</td></tr>
<tr name="466" id="466">
<td>466</td><td><span class="pp">#define</span> <a id="466c9" class="tk">MW_GPIOH_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="467" id="467">
<td>467</td><td><span class="pp">#define</span> <a id="467c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="468" id="468">
<td>468</td><td><span class="pp">#define</span> <a id="468c9" class="tk">MW_GPIOH_PUPDREGPIN1</a> 0</td></tr>
<tr name="469" id="469">
<td>469</td><td><span class="pp">#define</span> <a id="469c9" class="tk">MW_GPIOH_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="470" id="470">
<td>470</td><td><span class="pp">#define</span> <a id="470c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="471" id="471">
<td>471</td><td><span class="pp">#define</span> <a id="471c9" class="tk">MW_GPIOH_PUPDREGPIN2</a> 0</td></tr>
<tr name="472" id="472">
<td>472</td><td><span class="pp">#define</span> <a id="472c9" class="tk">MW_GPIOH_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="473" id="473">
<td>473</td><td><span class="pp">#define</span> <a id="473c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="474" id="474">
<td>474</td><td><span class="pp">#define</span> <a id="474c9" class="tk">MW_GPIOH_PUPDREGPIN3</a> 0</td></tr>
<tr name="475" id="475">
<td>475</td><td><span class="pp">#define</span> <a id="475c9" class="tk">MW_GPIOH_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="476" id="476">
<td>476</td><td><span class="pp">#define</span> <a id="476c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="477" id="477">
<td>477</td><td><span class="pp">#define</span> <a id="477c9" class="tk">MW_GPIOH_PUPDREGPIN4</a> 0</td></tr>
<tr name="478" id="478">
<td>478</td><td><span class="pp">#define</span> <a id="478c9" class="tk">MW_GPIOH_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="479" id="479">
<td>479</td><td><span class="pp">#define</span> <a id="479c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="480" id="480">
<td>480</td><td><span class="pp">#define</span> <a id="480c9" class="tk">MW_GPIOH_PUPDREGPIN5</a> 0</td></tr>
<tr name="481" id="481">
<td>481</td><td><span class="pp">#define</span> <a id="481c9" class="tk">MW_GPIOH_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="482" id="482">
<td>482</td><td><span class="pp">#define</span> <a id="482c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="483" id="483">
<td>483</td><td><span class="pp">#define</span> <a id="483c9" class="tk">MW_GPIOH_PUPDREGPIN6</a> 0</td></tr>
<tr name="484" id="484">
<td>484</td><td><span class="pp">#define</span> <a id="484c9" class="tk">MW_GPIOH_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="485" id="485">
<td>485</td><td><span class="pp">#define</span> <a id="485c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="486" id="486">
<td>486</td><td><span class="pp">#define</span> <a id="486c9" class="tk">MW_GPIOH_PUPDREGPIN7</a> 0</td></tr>
<tr name="487" id="487">
<td>487</td><td><span class="pp">#define</span> <a id="487c9" class="tk">MW_GPIOH_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="488" id="488">
<td>488</td><td><span class="pp">#define</span> <a id="488c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="489" id="489">
<td>489</td><td><span class="pp">#define</span> <a id="489c9" class="tk">MW_GPIOH_PUPDREGPIN8</a> 0</td></tr>
<tr name="490" id="490">
<td>490</td><td><span class="pp">#define</span> <a id="490c9" class="tk">MW_GPIOH_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="491" id="491">
<td>491</td><td><span class="pp">#define</span> <a id="491c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="492" id="492">
<td>492</td><td><span class="pp">#define</span> <a id="492c9" class="tk">MW_GPIOH_PUPDREGPIN9</a> 0</td></tr>
<tr name="493" id="493">
<td>493</td><td><span class="pp">#define</span> <a id="493c9" class="tk">MW_GPIOH_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="494" id="494">
<td>494</td><td><span class="pp">#define</span> <a id="494c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="495" id="495">
<td>495</td><td><span class="pp">#define</span> <a id="495c9" class="tk">MW_GPIOH_PUPDREGPIN10</a> 0</td></tr>
<tr name="496" id="496">
<td>496</td><td><span class="pp">#define</span> <a id="496c9" class="tk">MW_GPIOH_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="497" id="497">
<td>497</td><td><span class="pp">#define</span> <a id="497c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="498" id="498">
<td>498</td><td><span class="pp">#define</span> <a id="498c9" class="tk">MW_GPIOH_PUPDREGPIN11</a> 0</td></tr>
<tr name="499" id="499">
<td>499</td><td><span class="pp">#define</span> <a id="499c9" class="tk">MW_GPIOH_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="500" id="500">
<td>500</td><td><span class="pp">#define</span> <a id="500c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="501" id="501">
<td>501</td><td><span class="pp">#define</span> <a id="501c9" class="tk">MW_GPIOH_PUPDREGPIN12</a> 0</td></tr>
<tr name="502" id="502">
<td>502</td><td><span class="pp">#define</span> <a id="502c9" class="tk">MW_GPIOH_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="503" id="503">
<td>503</td><td><span class="pp">#define</span> <a id="503c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="504" id="504">
<td>504</td><td><span class="pp">#define</span> <a id="504c9" class="tk">MW_GPIOH_PUPDREGPIN13</a> 0</td></tr>
<tr name="505" id="505">
<td>505</td><td><span class="pp">#define</span> <a id="505c9" class="tk">MW_GPIOH_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="506" id="506">
<td>506</td><td><span class="pp">#define</span> <a id="506c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="507" id="507">
<td>507</td><td><span class="pp">#define</span> <a id="507c9" class="tk">MW_GPIOH_PUPDREGPIN14</a> 0</td></tr>
<tr name="508" id="508">
<td>508</td><td><span class="pp">#define</span> <a id="508c9" class="tk">MW_GPIOH_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="509" id="509">
<td>509</td><td><span class="pp">#define</span> <a id="509c9" class="tk">MW_GPIOH_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="510" id="510">
<td>510</td><td><span class="pp">#define</span> <a id="510c9" class="tk">MW_GPIOH_PUPDREGPIN15</a> 0</td></tr>
<tr name="511" id="511">
<td>511</td><td><span class="pp">#define</span> <a id="511c9" class="tk">MW_GPIOI_SHOWPINSETTING</a> 0</td></tr>
<tr name="512" id="512">
<td>512</td><td><span class="pp">#define</span> <a id="512c9" class="tk">MW_GPIOI_OUTTYPEREGPIN0</a> 0</td></tr>
<tr name="513" id="513">
<td>513</td><td><span class="pp">#define</span> <a id="513c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN0</a> 0</td></tr>
<tr name="514" id="514">
<td>514</td><td><span class="pp">#define</span> <a id="514c9" class="tk">MW_GPIOI_PUPDREGPIN0</a> 0</td></tr>
<tr name="515" id="515">
<td>515</td><td><span class="pp">#define</span> <a id="515c9" class="tk">MW_GPIOI_OUTTYPEREGPIN1</a> 0</td></tr>
<tr name="516" id="516">
<td>516</td><td><span class="pp">#define</span> <a id="516c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN1</a> 0</td></tr>
<tr name="517" id="517">
<td>517</td><td><span class="pp">#define</span> <a id="517c9" class="tk">MW_GPIOI_PUPDREGPIN1</a> 0</td></tr>
<tr name="518" id="518">
<td>518</td><td><span class="pp">#define</span> <a id="518c9" class="tk">MW_GPIOI_OUTTYPEREGPIN2</a> 0</td></tr>
<tr name="519" id="519">
<td>519</td><td><span class="pp">#define</span> <a id="519c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN2</a> 0</td></tr>
<tr name="520" id="520">
<td>520</td><td><span class="pp">#define</span> <a id="520c9" class="tk">MW_GPIOI_PUPDREGPIN2</a> 0</td></tr>
<tr name="521" id="521">
<td>521</td><td><span class="pp">#define</span> <a id="521c9" class="tk">MW_GPIOI_OUTTYPEREGPIN3</a> 0</td></tr>
<tr name="522" id="522">
<td>522</td><td><span class="pp">#define</span> <a id="522c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN3</a> 0</td></tr>
<tr name="523" id="523">
<td>523</td><td><span class="pp">#define</span> <a id="523c9" class="tk">MW_GPIOI_PUPDREGPIN3</a> 0</td></tr>
<tr name="524" id="524">
<td>524</td><td><span class="pp">#define</span> <a id="524c9" class="tk">MW_GPIOI_OUTTYPEREGPIN4</a> 0</td></tr>
<tr name="525" id="525">
<td>525</td><td><span class="pp">#define</span> <a id="525c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN4</a> 0</td></tr>
<tr name="526" id="526">
<td>526</td><td><span class="pp">#define</span> <a id="526c9" class="tk">MW_GPIOI_PUPDREGPIN4</a> 0</td></tr>
<tr name="527" id="527">
<td>527</td><td><span class="pp">#define</span> <a id="527c9" class="tk">MW_GPIOI_OUTTYPEREGPIN5</a> 0</td></tr>
<tr name="528" id="528">
<td>528</td><td><span class="pp">#define</span> <a id="528c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN5</a> 0</td></tr>
<tr name="529" id="529">
<td>529</td><td><span class="pp">#define</span> <a id="529c9" class="tk">MW_GPIOI_PUPDREGPIN5</a> 0</td></tr>
<tr name="530" id="530">
<td>530</td><td><span class="pp">#define</span> <a id="530c9" class="tk">MW_GPIOI_OUTTYPEREGPIN6</a> 0</td></tr>
<tr name="531" id="531">
<td>531</td><td><span class="pp">#define</span> <a id="531c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN6</a> 0</td></tr>
<tr name="532" id="532">
<td>532</td><td><span class="pp">#define</span> <a id="532c9" class="tk">MW_GPIOI_PUPDREGPIN6</a> 0</td></tr>
<tr name="533" id="533">
<td>533</td><td><span class="pp">#define</span> <a id="533c9" class="tk">MW_GPIOI_OUTTYPEREGPIN7</a> 0</td></tr>
<tr name="534" id="534">
<td>534</td><td><span class="pp">#define</span> <a id="534c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN7</a> 0</td></tr>
<tr name="535" id="535">
<td>535</td><td><span class="pp">#define</span> <a id="535c9" class="tk">MW_GPIOI_PUPDREGPIN7</a> 0</td></tr>
<tr name="536" id="536">
<td>536</td><td><span class="pp">#define</span> <a id="536c9" class="tk">MW_GPIOI_OUTTYPEREGPIN8</a> 0</td></tr>
<tr name="537" id="537">
<td>537</td><td><span class="pp">#define</span> <a id="537c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN8</a> 0</td></tr>
<tr name="538" id="538">
<td>538</td><td><span class="pp">#define</span> <a id="538c9" class="tk">MW_GPIOI_PUPDREGPIN8</a> 0</td></tr>
<tr name="539" id="539">
<td>539</td><td><span class="pp">#define</span> <a id="539c9" class="tk">MW_GPIOI_OUTTYPEREGPIN9</a> 0</td></tr>
<tr name="540" id="540">
<td>540</td><td><span class="pp">#define</span> <a id="540c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN9</a> 0</td></tr>
<tr name="541" id="541">
<td>541</td><td><span class="pp">#define</span> <a id="541c9" class="tk">MW_GPIOI_PUPDREGPIN9</a> 0</td></tr>
<tr name="542" id="542">
<td>542</td><td><span class="pp">#define</span> <a id="542c9" class="tk">MW_GPIOI_OUTTYPEREGPIN10</a> 0</td></tr>
<tr name="543" id="543">
<td>543</td><td><span class="pp">#define</span> <a id="543c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN10</a> 0</td></tr>
<tr name="544" id="544">
<td>544</td><td><span class="pp">#define</span> <a id="544c9" class="tk">MW_GPIOI_PUPDREGPIN10</a> 0</td></tr>
<tr name="545" id="545">
<td>545</td><td><span class="pp">#define</span> <a id="545c9" class="tk">MW_GPIOI_OUTTYPEREGPIN11</a> 0</td></tr>
<tr name="546" id="546">
<td>546</td><td><span class="pp">#define</span> <a id="546c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN11</a> 0</td></tr>
<tr name="547" id="547">
<td>547</td><td><span class="pp">#define</span> <a id="547c9" class="tk">MW_GPIOI_PUPDREGPIN11</a> 0</td></tr>
<tr name="548" id="548">
<td>548</td><td><span class="pp">#define</span> <a id="548c9" class="tk">MW_GPIOI_OUTTYPEREGPIN12</a> 0</td></tr>
<tr name="549" id="549">
<td>549</td><td><span class="pp">#define</span> <a id="549c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN12</a> 0</td></tr>
<tr name="550" id="550">
<td>550</td><td><span class="pp">#define</span> <a id="550c9" class="tk">MW_GPIOI_PUPDREGPIN12</a> 0</td></tr>
<tr name="551" id="551">
<td>551</td><td><span class="pp">#define</span> <a id="551c9" class="tk">MW_GPIOI_OUTTYPEREGPIN13</a> 0</td></tr>
<tr name="552" id="552">
<td>552</td><td><span class="pp">#define</span> <a id="552c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN13</a> 0</td></tr>
<tr name="553" id="553">
<td>553</td><td><span class="pp">#define</span> <a id="553c9" class="tk">MW_GPIOI_PUPDREGPIN13</a> 0</td></tr>
<tr name="554" id="554">
<td>554</td><td><span class="pp">#define</span> <a id="554c9" class="tk">MW_GPIOI_OUTTYPEREGPIN14</a> 0</td></tr>
<tr name="555" id="555">
<td>555</td><td><span class="pp">#define</span> <a id="555c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN14</a> 0</td></tr>
<tr name="556" id="556">
<td>556</td><td><span class="pp">#define</span> <a id="556c9" class="tk">MW_GPIOI_PUPDREGPIN14</a> 0</td></tr>
<tr name="557" id="557">
<td>557</td><td><span class="pp">#define</span> <a id="557c9" class="tk">MW_GPIOI_OUTTYPEREGPIN15</a> 0</td></tr>
<tr name="558" id="558">
<td>558</td><td><span class="pp">#define</span> <a id="558c9" class="tk">MW_GPIOI_OUTSPEEDREGPIN15</a> 0</td></tr>
<tr name="559" id="559">
<td>559</td><td><span class="pp">#define</span> <a id="559c9" class="tk">MW_GPIOI_PUPDREGPIN15</a> 0</td></tr>
<tr name="560" id="560">
<td>560</td><td><span class="pp">#define</span> <a id="560c9" class="tk">MW_MULTI_TASKING_MODE</a> 1</td></tr>
<tr name="561" id="561">
<td>561</td><td></td></tr>
<tr name="562" id="562">
<td>562</td><td><span class="pp">#endif</span> <span class="ct">/* __MW_TARGET_HARDWARE_RESOURCES_H__ */</span></td></tr>
<tr name="563" id="563">
<td>563</td><td></td></tr>
<tr name="564" id="564">
<td>564</td><td><span class="pp">#endif</span></td></tr>
<tr name="565" id="565">
<td>565</td><td></td></tr>
<tr name="566" id="566">
<td>566</td><td><span class="pp">#endif</span></td></tr>
<tr name="567" id="567">
<td>567</td><td></td></tr>
</table>
</pre>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
</head>
    <style>
        * {
            margin: 0;
            padding: 0
        }
    </style>
    <body onresize="top.drawNavSideBar();" onload="top.drawNavSideBar();top.load_metrics();">
      <canvas id="canvas" title="navigate to highlighted lines"></canvas>
    </body>
</html>
<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" type="text/css" href="rtwreport.css" />
    <link rel="stylesheet" type="text/css" href="css/coder_app.css" />
  <script>
    function NavOnloadFcn() {
        var node = document.getElementById("rtwIdTraceBlock");
        var td1 = document.getElementById("td1");
        if (node && top.RTW_TraceArgs.instance) {
            var sid = top.RTW_TraceArgs.instance.getBlock();
            if (sid) {
                var block = sid;
                if (top.RTW_rtwnameSIDMap && top.RTW_rtwnameSIDMap.instance && top.RTW_rtwnameSIDMap.instance.getRtwname(sid)) {
                    block = top.RTW_rtwnameSIDMap.instance.getRtwname(sid).rtwname;
                }
                if (block) {
                    node.textContent = "'" + block + "'";
                }
                td1.className = "";
            } else {
                td1.className = "hidden";
            }
         }
        if (top.RTW_TraceInfo && top.RTW_TraceInfo.instance) {
           top.RTW_TraceInfo.instance.updateNavState();
        }        
   }
   function resize_text() {
        var node = document.getElementById("rtwIdTraceBlock");        
        if (node) {
            node.style.maxWidth = "" + (window.innerWidth - 450) + "px";
        }
        top.resize_NavToolbar_frame();
   }
  </script>
  </head>
  <body class="nav_toolbar" onload="NavOnloadFcn(); resize_text();" onresize="resize_text();">
    <table class="nav_table" id="rtwIdTracePanel">
      <col style="width: 90%;">
      <col style="width: 150px;">
      <col style="width: 150px;">
      <tr>
        <td title="Navigation control for highlighted code" id="td1">
          <b>Highlight code for block:</b>
          <div id="rtwIdTraceBlock" style="overflow: hidden;text-overflow:ellipsis;white-space: nowrap"></div>
        </td>
        <td style="white-space:nowrap">
	  <INPUT class="button" TYPE="button" VALUE="<<" style="width: 45px; height: 2em" ID="rtwIdButtonFirst" ONCLICK="if (top.rtwGoFirst) top.rtwGoFirst();" title="goto the first highlighted line" />
	  <INPUT class="button" TYPE="button" VALUE="<" style="width: 45px; height: 2em" ID="rtwIdButtonPrev" ONCLICK="if (top.rtwGoPrev) top.rtwGoPrev();" disabled="disabled" title="goto the previous highlighted line"/>        
	  <span id="rtwIdTraceNumber"></span>
	  <INPUT class="button" TYPE="button" VALUE=">" style="width: 45px; height: 2em" ID="rtwIdButtonNext" ONCLICK="if (top.rtwGoNext) top.rtwGoNext();" disabled="disabled" title="goto the next highlighted line"/>
	  <INPUT class="button" TYPE="button" VALUE=">>" style="width: 45px; height: 2em" ID="rtwIdButtonLast" ONCLICK="if (top.rtwGoLast) top.rtwGoLast();" title="goto the last highlighted line" />
        </td>
        <td>
          <INPUT class="button" TYPE="button" VALUE="Remove Highlights" style="width: 150px; height: 2em" ID="rtwIdButtonRemove" ONCLICK="if (top.removeInCodeTraceHighlight()) top.removeInCodeTraceHighlight()" title="remove highlighted lines"/>
        </td>
      </tr>
    </table>
  </body>
</html>
</table>

<!-- LocalWords:  Onload px ONCLICK
-->
// Copyright 2007-2014 The MathWorks, Inc.

// Class RTW_Hash ------------------------------------------------------------
// Internal web browser doesn't change window.location.hash if the link points
// to the same page.
// RTW_Hash remembers the hash value when the page is loaded in the first time 
// or a link is clicked.
// removeHiliteByHash cleans the high lighted elements according to the stored 
// hash value
function RTW_Hash(aHash) {
    if (aHash == null) {
        this.fHash = "";
    } else {
        this.fHash = aHash;
    };
    
    this.getHash = function() {
        return this.fHash;
    }

    this.setHash = function(aHash) {
        this.fHash = aHash;
    }
}

RTW_Hash.instance = null;

// Class RTW_TraceInfo --------------------------------------------------------
function RTW_TraceInfo(aFileLinks) {
  this.fFileLinks = aFileLinks;
  this.fLines = new Array();
  this.fTotalLines = 0; // total number of highlighted lines
  this.fNumLines = new Array();
  this.fFileIdxCache = new Array();
  this.fDisablePanel = false;
  this.fCurrFileIdx = 0;
  this.fCurrLineIdx = 0;
  this.fCurrCodeNode = null;
  this.getHtmlFileName = function(aIndex) {
    if (aIndex < this.fFileLinks.length) {
      var href = this.fFileLinks[aIndex].href;
      return href.substring(href.lastIndexOf('/')+1);
    }
  }
  this.getSrcFileName = function(aIndex) {
    var name = this.getHtmlFileName(aIndex);
    if (name)
      name = RTW_TraceInfo.toSrcFileName(name);
    return name;
  }
  this.getNumFileLinks = function() {
    return this.fFileLinks.length;
  }
  this.setFileLinkColor = function(aIndex, aColor) {
    var link = this.fFileLinks[aIndex];
    if (link && link.parentNode && link.parentNode.style)
      link.parentNode.style.backgroundColor = aColor;
  }
  this.highlightFileLink = function(aIndex, aColor) {
    for (var i = 0; i < this.fFileLinks.length; ++i) {
      this.setFileLinkColor(i, i == aIndex ? aColor : "");
    }
  }
  this.highlightCurrFileLink = function(aColor) {
    this.highlightFileLink(this.fCurrFileIdx);
  }
  this.highlightLines = function(aCodeNode,aColor) {
    this.fCurrCodeNode = aCodeNode;
    var lines = this.fLines[this.getHtmlFileName(this.fCurrFileIdx)];
    if (lines && aCodeNode) {
      for (var i = 0; i < lines.length; ++i) {
        var lineObj = aCodeNode.childNodes[lines[i]-1];
        if (lineObj)
          lineObj.style.backgroundColor=aColor;
      }
    }
  }
  this.getFileIdx = function(aFile) {
    if (this.fFileIdxCache[aFile] != null)
      return this.fFileIdxCache[aFile];
    for (var i = 0; i < this.fFileLinks.length; ++i) {
      if (this.getHtmlFileName(i) == aFile) {
        this.fFileIdxCache[aFile] = i;
        return i;
      }
    }
    return null;
  }
  this.getCurrFileIdx = function() { return this.fCurrFileIdx; }
  this.setNumHighlightedLines = function(aFileIdx, aNumLines) {
    this.fNumLines[aFileIdx] = aNumLines;
    updateNumHighlightedLines(this.fFileLinks[aFileIdx], aNumLines);
  }
  this.getNumLines = function(aFileIdx) {
    return this.fNumLines[aFileIdx] != null ? this.fNumLines[aFileIdx] : 0;
  }
  this.getNumLinesAll = function() {
      var sum = 0;
      var len = this.fNumLines.length;
      for (var i = 0; i < len; ++i) {
          sum += this.getNumLines(i);
      }
      return sum;
  }
  this.getPrevButton = function() {
      var aFrame = getNavFrame();
      if (typeof aFrame !== "undefined" && aFrame !== null)
          return aFrame.document.getElementById("rtwIdButtonPrev");
      else
          return document.getElementById("rtwIdButtonPrev");
  }
  this.getNextButton = function() {
      var aFrame = getNavFrame();
      if (typeof aFrame !== "undefined" && aFrame !== null)
          return aFrame.document.getElementById("rtwIdButtonNext");
      else
          return document.getElementById("rtwIdButtonNext");
  }
  this.getPanel = function() {
      var aFrame = getNavFrame();
      if (typeof aFrame !== "undefined" && aFrame !== null)
          return aFrame.document.getElementById("rtwIdTracePanel");
      else
          return document.getElementById("rtwIdTracePanel");
  }
  this.removeHighlighting = function() {
    for (var i = 0; i < this.fFileLinks.length; ++i) {
      this.setFileLinkColor(i, "");
      this.setNumHighlightedLines(i, 0);
    }
    // remove highlight and reset current code node
    try {
        if (this.fCurrCodeNode != null)
            this.highlightLines(getCodeNode(),"");
    } catch (e) {};
    this.fCurrCodeNode = null;    
    if (this.getPrevButton()) { this.getPrevButton().disabled = true; }
    if (this.getNextButton()) { this.getNextButton().disabled = true; }
    if (this.getPanel()) { this.getPanel().style.display = "none"; }
    this.fCurrFileIdx = 0;
    this.fCurrLineIdx = 0;
  }
  this.setCurrLineIdx = function(aLineIdx) {
    this.fCurrLineIdx = aLineIdx;
  }
  this.getCurrLineIdx = function() { return this.fCurrLineIdx; }
  this.setCurrent = function(aFileIdx, aLineIdx) {
    this.fCurrFileIdx = aFileIdx;
    var numLines = this.getNumLines(aFileIdx);
    if (!numLines || aLineIdx >= numLines)
      this.fCurrLineIdx = -1;
    else
      this.fCurrLineIdx = aLineIdx;
    var allNumLines = this.getNumLinesAll();
    if (this.getPrevButton()) {
      this.getPrevButton().disabled = (allNumLines <= 1 || !this.hasPrev());
    }
    if (this.getNextButton()) {
      this.getNextButton().disabled = (allNumLines <= 1 || !this.hasNext());
    }
    if (this.getPanel() && !this.fDisablePanel) {
      this.getPanel().style.display = 'block';
    }
  }
  this.setDisablePanel = function(aDisable) {
    this.fDisablePanel = aDisable;
  }
  this.getPrevFileIdx = function() {
    if (this.fCurrLineIdx > 0)
      return this.fCurrFileIdx;
    for (var i = this.fCurrFileIdx - 1; i >= 0; --i)
      if (this.fNumLines[i] > 0)
        return i;
    return null;
  }
  // update the navigation bar state
  this.updateNavState = function() {
      if (this.getPrevButton())
          this.getPrevButton().disabled = !this.hasPrev();
      if (this.getNextButton())
          this.getNextButton().disabled = !this.hasNext();
      setTraceNumber();
  }
  this.hasPrev = function() {
    return this.getPrevFileIdx() != null;
  }
  this.getFirstFileIdx = function() {
      for (var i = 0; i < this.getNumFileLinks(); ++i)
          if (this.fNumLines[i] > 0)
              return i;
  }
  this.getLastFileIdx = function() {
      for (var i = this.getNumFileLinks(); i >= 0; --i)
          if (this.fNumLines[i] > 0)
              return i;
  }
  this.goFirst = function() {
    this.fCurrFileIdx = this.getFirstFileIdx();
    this.fCurrLineIdx = 0;
    this.updateNavState();
  }
  this.goLast = function() {
    this.fCurrFileIdx = this.getLastFileIdx();;
    this.fCurrLineIdx = this.getNumLines(this.fCurrFileIdx) - 1;
    this.updateNavState();
  }
  this.goPrev = function() {
    var fileIdx = this.getPrevFileIdx();
    if (fileIdx == null)
      return;
    if (fileIdx == this.fCurrFileIdx)
      --this.fCurrLineIdx;
    else {
      this.fCurrFileIdx = fileIdx;
      this.fCurrLineIdx = this.getNumLines(fileIdx) - 1;
    }
    this.updateNavState();
  }
  this.getNextFileIdx = function() {
    if (this.fCurrLineIdx < this.getNumLines(this.fCurrFileIdx) - 1 && this.getNumLines(this.fCurrFileIdx) > 0)
      return this.fCurrFileIdx;
    for (var i = this.fCurrFileIdx + 1; i < this.getNumFileLinks(); ++i)
      if (this.fNumLines[i] > 0)
        return i;
    return null;
  }
  this.hasNext = function() {
    return this.getNextFileIdx() != null;
  }
  this.goNext = function() {
    var fileIdx = this.getNextFileIdx();
    if (fileIdx == null)
      return;
    if (fileIdx == this.fCurrFileIdx)
      ++this.fCurrLineIdx;
    else {
      this.fCurrFileIdx = fileIdx;
      this.fCurrLineIdx = 0;
    }
    this.updateNavState();
  }
  this.setTotalLines = function(num) {
      this.fTotalLines = num;
  }
  this.getTotalLines = function() { return this.fTotalLines;}
  this.setLines = function(aFile, aLines) {
    this.fLines[aFile] = aLines;
    var index = this.getFileIdx(aFile);
    if (index != null)
      this.setNumHighlightedLines(index,aLines.length);
  }
  this.getLines = function(aFile) {
    return this.fLines[aFile];
  }
  // get current on focus line number
  this.getCurrLine = function() {
      var file = this.getHtmlFileName(this.getCurrFileIdx());
      var lines = this.fLines[file];
      var line = null;
      if (lines) {
          var line = lines[this.fCurrLineIdx];
      }
      return line;
  }
  this.getHRef = function(aFileIdx, aLineIdx, offset) {
    var file = this.getHtmlFileName(aFileIdx);
    var lines = this.fLines[file];
    if (lines) {
      var line = lines[aLineIdx];
      line = offset_line(line, offset);
      file = file+"#"+line;
    }
    return file;
  }
    
  this.getCurrentHRef = function(offset) {
      return this.getHRef(this.fCurrFileIdx, this.fCurrLineIdx, offset);
  }
  this.setInitLocation = function(aFile, aLine) {
    var fileIdx = this.getFileIdx(aFile);
    var lineIdx = null;
    if (fileIdx != null && aLine) {
      var lines = this.getLines(aFile);
      for (var i = 0; i < lines.length; ++i) {
        if (lines[i] == aLine) {
          lineIdx = i;
          break;
        } 
      }
    }
    if (fileIdx == null || lineIdx == null)
      this.setCurrent(0,-1);
    else
      this.setCurrent(fileIdx,lineIdx);
  }
}

// Static methods in RTW_TraceInfo

RTW_TraceInfo.getFileLinks = function(docObj) {
  var links;
  if (docObj && docObj.getElementsByName)
    links = docObj.getElementsByName("rtwIdGenFileLinks");
  return links ? links : new Array();
}

RTW_TraceInfo.toSrcFileName = function(aHtmlFileName) {
  aHtmlFileName = aHtmlFileName.replace(/_c.html$/,".c");
  aHtmlFileName = aHtmlFileName.replace(/_h.html$/,".h");
  aHtmlFileName = aHtmlFileName.replace(/_cpp.html$/,".cpp");
  aHtmlFileName = aHtmlFileName.replace(/_hpp.html$/,".hpp");
  aHtmlFileName = aHtmlFileName.replace(/_cc.html$/,".hpp");
  return aHtmlFileName;
}

RTW_TraceInfo.instance = null;

// Class RTW_TraceArgs --------------------------------------------------------
// file.c:10,20,30&file.h:10,20,30[&color=value] or 
// sid=model:1[&color=value]
RTW_TraceArgs = function(aHash) {
  this.fColor = null;
  this.fFontSize = null;
  this.fInitFile = null;
  this.fInitLine = null;
  this.fSID = null;
  this.fFiles = new Array();
  this.fLines = new Array();
  this.fMessage = null;
  this.fBlock = null;  
  this.fUseExternalBrowser = true;
  this.fInStudio = false;
  this.fModel2CodeSrc = null;
  this.fInCodeTrace = false;
  this.fTraceData = null;
  this.fFileIdx = []; // filename to fileId
  this.fRows = []; // highlighted rows indexed by fileId
  this.fIDs = []; // highlighted IDs indexed by fileId

  this.hasSid = function() {
      return !(this.fSID == null);
  }
  this.parseCommand = function(aHash) {
      var args = new Array();
      args = aHash.split('&');
      for (var i = 0; i < args.length; ++i) {
          var arg = args[i];
          sep = arg.indexOf('=');
          if (sep != -1) {
              var cmd = arg.substring(0,sep);
              var opt = arg.substring(sep+1);
              switch (cmd.toLowerCase()) {
                case "color":
                  this.fColor = opt;
                  break;
                case "fontsize":
                  this.fFontSize = opt;
                  break;
                case "initfile":
                  this.fInitFile = RTW_TraceArgs.toHtmlFileName(opt);
                  break;
                case "initline":
                  this.fInitLine = opt;
                  break;
                case "msg":
                  this.fMessage = opt;
                  break;
                case "block":
                  this.fBlock = unescape(opt);
                  break;
                case "sid":
                  this.fSID = opt;
                  // convert sid to code location
                  break;
                case "model2code_src":
                  // model2code_src from model or webview
                  this.fModel2CodeSrc = opt;
                  break;
                case "useexternalbrowser":
                  this.fUseExternalBrowser = (opt=="true");
                  break;
                case "instudio":
                  this.fInStudio = (opt=="true");
                  break;
                case "incodetrace":
                  this.fInCodeTrace = (opt=="true");
                  break;
                case "tracedata":
                  this.fTraceData = decodeURI(opt);
                  break;
              }
          }
      }    
  }
  this.parseUrlHash = function(aHash) {
      var rows;
      if (aHash) {
          args = aHash.split('&');
          for (var i = 0; i < args.length; ++i) {
              var arg = args[i];
              sep = arg.indexOf(':');
              if (sep != -1) {
                  var fileLines = arg.split(':');
                  var htmlFileName = RTW_TraceArgs.toHtmlFileName(fileLines[0]);
                  this.fFileIdx[htmlFileName] = i;
                  this.fFiles.push(htmlFileName);
                  if (fileLines[1]) {
                      rows = fileLines[1].split(',');
                      rows = uniqueRows(rows);
                      this.fLines.push(rows);
                      this.fRows[i] = rows;
                  }
              }
          }
          if (this.fInitFile == null && this.fFiles.length > 0) {
              this.fInitFile = this.fFiles[0];
              this.fInitLine = (this.fLines[0] == null ? -1 : this.fLines[0][0]);
          }
      }
  }
  this.parseUrlHash2 = function(aHash) {
      aHash = decodeURI(aHash);    
      var rows;
      var ids;
      if (aHash && aHash.length > 0 && aHash[0] === "[") {
          var input = eval(aHash);  
          var i;
          var j;
          // set highlight files from url
          for (i=0; i<input.length;i++) {
              rows = new Array();
              ids = new Array();
              this.fFileIdx[input[i].file] = i;
              this.fFiles.push(input[i].file);
              ids = input[i].id;
              for (j=0; j<ids.length;j++) {
                  // get row number
                  if (ids[j].indexOf("c") !== -1)
                      rows.push(Number(ids[j].substring(0,ids[j].indexOf("c")))); 
                  else
                      rows.push(Number(ids[j]));
              }
              rows = uniqueRows(rows);
              this.fRows[i] = rows;
              this.fIDs[i] = ids;
          }
      } else {
          // reset all states
          this.fFiles = [];
          this.fRows = [];
          this.fIDs = [];
      }
      return;
  }
  this.getFileIdx = function(aFileName) {
      if (aFileName) {
          return this.fFileIdx[aFileName];
      } else {
          // return the fileIdx of the current display file
          var pathname = top.rtwreport_document_frame.location.pathname;
          pathname = pathname.substr(pathname.lastIndexOf("/")+1);
          // find the highlight file name
          return this.getFileIdx(pathname);
      }
  }

  this.getColor = function() { return this.fColor; }
  this.getFontSize = function() { return this.fFontSize; }
  this.getInitFile = function() { return this.fInitFile; }
  this.getInitLine = function() { return this.fInitLine; }
  this.getNumFiles = function() { return this.fFiles.length; }
  this.getSID = function() { return this.fSID; }
  this.getFile = function(aIdx) { if (isNaN(aIdx)) return this.fFiles; return this.fFiles[aIdx];}
  this.getLines = function(aIdx) { return this.fLines[aIdx]; } 
  this.getUseExternalBrowser = function() { return this.fUseExternalBrowser; } 
  this.getInStudio = function() { return this.fInStudio; } 
  this.getInCodeTrace = function() { return this.fInCodeTrace; } 
  this.getTraceData = function() { return this.fTraceData; } 
  this.getModel2CodeSrc = function() { return this.fModel2CodeSrc; }
  this.setUseExternalBrowser = function(val) { this.fUseExternalBrowser = val; } 
  this.setInCodeTrace = function(val) { this.fInCodeTrace = val; } 
  this.setTraceData = function(val) { this.fTraceData = val; } 
  this.setModel2CodeSrc = function(val) { this.fModel2CodeSrc = val; }
  this.getRows = function(aIdx) { return this.fRows[aIdx];}
  this.getIDs = function(aIdx) { return this.fIDs[aIdx]; }
  this.getBlock = function() { return this.fBlock; }
  // constructor
  this.parseCommand(aHash);
}

// Static methods in RTW_TraceArgs

RTW_TraceArgs.toHtmlFileName = function(aFile) {
  f = aFile;
  aFile = f.substring(0,f.lastIndexOf('.')) + '_' + f.substring(f.lastIndexOf('.')+1) + ".html";
  return aFile;
}

RTW_TraceArgs.instance = null;

RTW_MessageWindow = function(aWindow, aParagraph) {
  this.fWindow    = aWindow;
  this.fParagraph = aParagraph;
  
  this.print = function(msg) {
    this.fParagraph.innerHTML = msg;
    if (msg)
      this.fWindow.style.display = "block";
    else
      this.fWindow.style.display = "none";
  }
  this.clear = function() {
    this.print("");
  }
}

// RTW_MessageWindow factory
RTW_MessageWindowFactory = function(aDocObj) {
  this.fDocObj = aDocObj;
  this.fInstance = null;

  this.getInstance = function() {
    if (this.fInstance)
      return this.fInstance;
    if (!this.fDocObj)
      return;
      
    var table     = this.fDocObj.getElementById("rtwIdMsgWindow");
    var paragraph = this.fDocObj.getElementById("rtwIdMsg");
    var button    = this.fDocObj.getElementById("rtwIdButtonMsg");

    if (!table || !paragraph || !button)
      return null;

    obj = new RTW_MessageWindow(table,paragraph);
    button.onclick = function() { obj.clear(); }
    this.fInstance = obj;
    return this.fInstance;
  }
}

RTW_MessageWindowFactory.instance = null;
RTW_MessageWindow.factory = function(aDocObj) {
  if (!RTW_MessageWindowFactory.instance)
    RTW_MessageWindowFactory.instance = new RTW_MessageWindowFactory(aDocObj);
  return RTW_MessageWindowFactory.instance.getInstance();
}

// Callbacks and helper functions ---------------------------------------------

// Helper functions
function getCodeNode() {
    return rtwSrcFrame().document.getElementById("RTWcode");
}

function rtwMidFrame() {
    return top.document.getElementById('rtw_midFrame');
}
function rtwSrcFrame() {
  return top.rtwreport_document_frame;
}
function rtwTocFrame() {
  return top.rtwreport_contents_frame;
}
function rtwNavToolbarFrame() {
  return top.rtwreport_navToolbar_frame; // return rtwTocFrame();
}
function rtwInspectFrame() {
  return top.rtwreport_inspect_frame; // return rtwTocFrame();
}
function rtwGetFileName(url) {
  var slashIdx = url.lastIndexOf('/');
  var hashIdx  = url.indexOf('#', slashIdx);
  if (hashIdx == -1)
    return url.substring(slashIdx+1)
  else
    return url.substring(slashIdx+1,hashIdx);
}

// Help function to expand the file group
function expandFileGroup(docObj, tagID) {
  if (docObj.getElementById) {
    var obj_table = docObj.getElementById(tagID);
    var o;
    while (obj_table.nodeName != "TABLE") {
      if (obj_table.parentNode) {
        obj_table = obj_table.parentNode;
      } else {
        return;
      }
    }
    if (obj_table.style.display == "none") {
      var category_table = obj_table.parentNode;
      while (category_table.nodeName != "TABLE") {
        if (category_table.parentNode) {
          category_table = category_table.parentNode;
        } else {
          return;
        }        
      }
      var o = category_table.id + "_button";
      o = docObj.getElementById(o);
      if (o && top.rtwreport_contents_frame.rtwFileListShrink) {
        top.rtwreport_contents_frame.rtwFileListShrink(o, category_table.id, 0);
      }
    }
  }
}
// Help function to set the background color based on Element's Id in a document
// object
function setBGColorByElementId(docObj, tagID, bgColor) {
    var status = false;
    if (bgColor == "") {
      bgColor = "TRANSPARENT";
    }
    
    if (docObj.getElementById) {
        var obj2Hilite = docObj.getElementById(tagID);
        if (obj2Hilite && obj2Hilite.parentNode) {
            obj2Hilite.parentNode.style.backgroundColor = bgColor;
            status = true;
        }
    }
    return status;
}

// Help function to set the background color based on Element's name in a document
// object
function setBGColorByElementsName(docObj, tagName, bgColor) {
  if (bgColor == "") {
    bgColor = "TRANSPARENT";
  }  
  if (docObj.getElementsByName) {
    var objs2Hilite = docObj.getElementsByName(tagName);
    for (var objIndex = 0; objIndex < objs2Hilite.length; ++objIndex) {     
        if (objs2Hilite[objIndex].parentNode)
            objs2Hilite[objIndex].parentNode.style.backgroundColor = bgColor;
    }
  }
}

// Help function to highlight lines in source file based on Element's name
// Note: Name of docHiliteByElementsName would be better
function hiliteByElementsName(winObj, tagName) {
    var hiliteColor = "#aaffff";
    if (winObj.document)
        setBGColorByElementsName(winObj.document, tagName, hiliteColor);
}

// Help function to remove the highlight of lines in source file based on Element's name
function removeHiliteByElementsName(winObj, tagName) {
    if (winObj.document)
        setBGColorByElementsName(winObj.document, tagName, "");
}

// Help function to set the background color based on the URL's hash
function setBGColorByHash(docObj, bgColor) {    
    if (docObj.location) {
        var tagName = docObj.location.hash;
        // Use the stored hash value if it exists because the location.hash
        // may be wrong in internal web browser
        if (RTW_Hash.instance)
            tagName = RTW_Hash.instance.getHash();
        if (tagName != null)
            tagName = tagName.substring(1);
        
        var codeNode = docObj.getElementById("RTWcode");
        if (tagName != null && tagName != "") {        
            if (!isNaN(tagName))
                tagName = Number(tagName) + 10;            
            setBGColorByElementsName(docObj, tagName, bgColor);
        }
   }
}

// Highlight the lines in document frame based on the URL's hash
function hiliteByHash(docObj) {       
    var hiliteColor = "#aaffff";  
    setBGColorByHash(docObj, hiliteColor);
}

// Remove highlight of lines in document frame based on the URL's hash
function removeHiliteByHash(winObj) {
    if (winObj.document)
        setBGColorByHash(winObj.document, "");
}

// Highlight the filename Element in TOC frame based on the URL's filename
function hiliteByFileName(aHref) {       
    var status = false;
    if (!top.rtwreport_contents_frame)
        return status;
    var hiliteColor = GlobalConfig.fileLinkHiliteColor;
    var fileName = rtwGetFileName(aHref);    
    if (top.rtwreport_contents_frame.document) {
        removeHiliteFileList(top.rtwreport_contents_frame);
        status = setBGColorByElementId(top.rtwreport_contents_frame.document, fileName, hiliteColor);
        if (status)
            expandFileGroup(top.rtwreport_contents_frame.document, fileName);
    }
    return status;
}

// Clear the highlights in the code navigation frame.
function removeHiliteCodeNav(winObj) {    
    removeHiliteTOC(winObj);
    removeHiliteFileList(winObj);
}
// Clear the highlights in TOC frame. TOC links are named TOC_List
function removeHiliteTOC(winObj) {    
    removeHiliteByElementsName(winObj, "TOC_List"); 
}
// Clear the highlights in Generated File List. 
// The filename links are named rtwIdGenFileLinks,
function removeHiliteFileList(winObj) {    
    removeHiliteByElementsName(winObj, "rtwIdGenFileLinks");
}

// Highlight TOC hyperlinks by their Ids.
function tocHiliteById(id) {
    hiliteColor = GlobalConfig.fileLinkHiliteColor;    
    if (top && top.rtwreport_contents_frame && top.rtwreport_contents_frame.document) {
        removeHiliteCodeNav(top.rtwreport_contents_frame);
        setBGColorByElementId(top.rtwreport_contents_frame.document, id, hiliteColor);
    }
}

// onClick function to highlight the link itself
function tocHiliteMe(winObj, linkObj, bCleanTrace) {
    hiliteColor = GlobalConfig.fileLinkHiliteColor;
    // remove the trace info (previous highlighted source code and the navigate
    // panel)
    // Clean Trace info only when links in TOC clicked. Links of filenames won't
    // clean trace info. 
    if (bCleanTrace) {
        if (RTW_TraceInfo.instance) {
            RTW_TraceInfo.instance.setDisablePanel(true);
            rtwRemoveHighlighting();
        }
        closeInspectWindow();        
    }        
    removeHiliteCodeNav(winObj);
    if (linkObj.parentNode) {
        linkObj.parentNode.style.backgroundColor= hiliteColor;
    }
}

// onClick function to clean the currently highlighed lines in document frame
// based on URL's hash
// Then highlight lines in document frame based on Element's name
// It works for links to some elements in the same page, otherwise, 
// rtwFileOnLoad() in loading page does the job.
function docHiliteMe(winObj, elementName) {
    // First, remove the highlighted elements by stored hash value
    removeHiliteByHash(winObj);
    // Store the new hash value defined by elementName
    if (RTW_Hash.instance) {
      RTW_Hash.instance.setHash("#"+elementName);
    } else {
      RTW_Hash.instance = new RTW_Hash("#"+elementName);
    }
    hiliteByElementsName(winObj, elementName);
}

// Callback for generated file load callback
function rtwFileOnLoad(docObj) {
  if (!docObj.location || !docObj.location.href)
      return;
  // Save the hash value when file is loaded in the first time
  if (!RTW_Hash.instance) {
     RTW_Hash.instance = new RTW_Hash(docObj.location.hash);
  } else {
     RTW_Hash.instance.setHash(docObj.location.hash);
  }  
   
  updateHyperlinks();
  // highlight lines in source code file according to the URL hash
  hiliteByHash(docObj);
  // highlight the filename in the TOC frame
  if (top.rtwreport_contents_frame) {
    if (hiliteByFileName(docObj.location.href)) {
        // remove the highlights in the TOC frame if filename is hilite successfully
        removeHiliteTOC(top.rtwreport_contents_frame);
    }
  }
     
  if (!RTW_TraceInfo.instance)
    return;
  if (!docObj.getElementById)
    return;
  if (rtwSrcFrame())
    rtwSrcFrame().focus();
  var fileName = rtwGetFileName(docObj.location.href);
  var fileIdx = RTW_TraceInfo.instance.getFileIdx(fileName);
  if (fileIdx != null) {
    if (fileIdx != RTW_TraceInfo.instance.getCurrFileIdx())
      RTW_TraceInfo.instance.setCurrent(fileIdx,-1);
    var codeNode = docObj.getElementById("RTWcode");
    var hiliteColor = RTW_TraceArgs.instance.getColor();
    if (!hiliteColor) {
        hiliteColor = "#aaffff";
    }
    var fontSize = RTW_TraceArgs.instance.getFontSize();
    if (fontSize) {
        codeNode.style.fontSize = fontSize;
    }
    RTW_TraceInfo.instance.highlightLines(codeNode,hiliteColor);
    RTW_TraceInfo.instance.highlightFileLink(fileIdx, GlobalConfig.fileLinkHiliteColor);
  }
}

function Nav(fileIdx1, fileIdx2) {
    var filename = top.rtwreport_document_frame.location.pathname.split(/\//);
    filename = filename[filename.length-1];
    var currentFileIdx = RTW_TraceInfo.instance.getFileIdx(filename);
    if (fileIdx1 === currentFileIdx) {
        top.rtwreport_document_frame.document.location.href = RTW_TraceInfo.instance.getCurrentHRef();
        top.initLine = top.rtwreport_document_frame.document.location.hash.substr(1);
        addTagToCurrentLine();
        if (top.rtwreport_contents_frame) {            
            if (hiliteByFileName(top.rtwreport_document_frame.location.href))
                removeHiliteTOC(top.rtwreport_contents_frame);
        }
    } else {
        var aUrl = RTW_TraceInfo.instance.getCurrentHRef();
        if (hasWebviewFrame()) {
            top.rtwreport_document_frame.document.location.href=aUrl;
        } else {
            top.rtwreport_document_frame.document.location.href=aUrl + "+newPage";
        }
    }
}
// Callback for "Prev" button
function rtwGoPrev() {
  if (RTW_TraceInfo.instance && top.rtwreport_document_frame) {
    var prevfileIdx = RTW_TraceInfo.instance.getPrevFileIdx();
    var currfileIdx = RTW_TraceInfo.instance.fCurrFileIdx;
    rmTagToCurrentLine();
    RTW_TraceInfo.instance.goPrev();
    Nav(prevfileIdx, currfileIdx);
  }
}
// Callback for "First" button
function rtwGoFirst() {
  if (RTW_TraceInfo.instance && top.rtwreport_document_frame) {
    var prevfileIdx = RTW_TraceInfo.instance.getFirstFileIdx();
    var currfileIdx = RTW_TraceInfo.instance.fCurrFileIdx;
    rmTagToCurrentLine();
    RTW_TraceInfo.instance.goFirst();
    Nav(prevfileIdx, currfileIdx);
  }
}

// Callback for navigation button onclick
var navButtonStatus = (function() {
    var isclicked = false;
    return {
        clicked: function () {
            isclicked = true;
            return false;
        },
        reset: function () {
            isclicked = false;
        },
        isClicked: function () {
            return isclicked;
        }
    };
})();

// Callback for "Next" button
function rtwGoNext() {
  if (RTW_TraceInfo.instance && top.rtwreport_document_frame) {
    var nextfileIdx = RTW_TraceInfo.instance.getNextFileIdx();
    var currfileIdx = RTW_TraceInfo.instance.fCurrFileIdx;
    rmTagToCurrentLine();
    RTW_TraceInfo.instance.goNext();
    Nav(nextfileIdx, currfileIdx);
  }
}
// Callback for "Last" button
function rtwGoLast() {
  if (RTW_TraceInfo.instance && top.rtwreport_document_frame) {
    var nextfileIdx = RTW_TraceInfo.instance.getLastFileIdx();
    var currfileIdx = RTW_TraceInfo.instance.fCurrFileIdx;
    rmTagToCurrentLine();
    RTW_TraceInfo.instance.goLast();
    Nav(nextfileIdx, currfileIdx);
  }
}

function addTagToCurrentLine() {
    rmHiliteClickedToken();
    tagCurrentLine(true);
}
function rmTagToCurrentLine() {
    tagCurrentLine(false);
}
// tag current line by changing the bacgkround color of the line 
function tagCurrentLine(addColor) {
    if (RTW_TraceInfo.instance) {
        var o = top.rtwreport_document_frame.document.getElementById(RTW_TraceInfo.instance.getCurrLine());
        if (o) {
            if (addColor) {
                o.className = "hiliteCurrentLine";            
            } else {
                o.className = "hilite";
            }
        }
    }
}
// Helper function for main document load callback
function rtwMainOnLoadFcn(topDocObj,aLoc,aPanel,forceReload) {
  var loc;
  var aHash="";
  var lastArgs = null;
  var tocDocObj = top.rtwreport_contents_frame.document;
  if (typeof forceReload === "undefined") {
      forceReload = false;
  }
  // get the hash value from location.
  if (!aLoc) {
      loc = topDocObj.location;
      if (loc.search || loc.hash) {
          if (loc.search)
              aHash = loc.search.substring(1);
          else
              aHash = loc.hash.substring(1);
      }
  } else {
      aHash = aLoc;
      if (RTW_TraceArgs.instance)
          lastArgs = RTW_TraceArgs.instance;
  }

  // parse URL hash value
  RTW_TraceArgs.instance = new RTW_TraceArgs(aHash);
  // load metrics
  load_metrics();
  // hide content panel if in studio
  if (RTW_TraceArgs.instance.getInStudio()) {
      setupInStudio();
  }
  // use incode traceability
  if (RTW_TraceArgs.instance.getInCodeTrace()) {
      RTW_TraceArgs.instance.parseUrlHash2(RTW_TraceArgs.instance.getTraceData());
      inCodeTraceOnload();
      return;
  }
  if (lastArgs !== null) {
      RTW_TraceArgs.instance.setUseExternalBrowser(lastArgs.getUseExternalBrowser());
      RTW_TraceArgs.instance.setModel2CodeSrc(lastArgs.getModel2CodeSrc());
  }    

  // get highlight url using sid
  if (RTW_TraceArgs.instance.hasSid()) {
    sid = RTW_TraceArgs.instance.getSID();
    aHash = RTW_Sid2UrlHash.instance.getUrlHash(sid);    
  }
  // parse hash to look for msg=...&block=... pattern
  RTW_TraceArgs.instance.parseCommand(aHash);
  // parse hash to look for file.c:10,12&file.h:10,12 
  RTW_TraceArgs.instance.parseUrlHash(aHash);

  // hide navigation buttons if not in MATLAB
  if (RTW_TraceArgs.instance.getUseExternalBrowser() && tocDocObj.getElementById) {
      var o = tocDocObj.getElementById("nav_buttons");
      if (o != null) {
          o.style.display = "none";
      }
  }

  // hide web view frameset if model2code_src is model
  if (RTW_TraceArgs.instance.getModel2CodeSrc() === "model") {
      var o = top.document.getElementById('rtw_webviewMidFrame');
      if (o) {
          o.rows = "100%,0%";
      }
  }

  // stop onload when it has been loaded
  if (window.location.search.indexOf("loaded=true") > 0 
        && top.rtwreport_document_frame.location.href !== "about:blank" && forceReload !== true) {
      updateHyperlinks();
      return;
  }  
  
  // modify modelref links
  update_modelref_report_link(top.rtwreport_contents_frame.document);
  try {
      // ignore browser security error 
      update_modelref_report_link(top.rtwreport_document_frame.document);
  } catch(e) {};

  // redirect the page based on the url    
  var initPage = null;
  if (RTW_TraceArgs.instance.getNumFiles()) {
    var fileLinks = RTW_TraceInfo.getFileLinks(tocDocObj);
    RTW_TraceInfo.instance = new RTW_TraceInfo(fileLinks);
    RTW_TraceInfo.instance.removeHighlighting()
    var numFiles = RTW_TraceArgs.instance.getNumFiles();
    var tLines = 0;
    for (var i = 0; i < numFiles; ++i) {
      RTW_TraceInfo.instance.setLines(RTW_TraceArgs.instance.getFile(i),RTW_TraceArgs.instance.getLines(i));
        tLines += RTW_TraceArgs.instance.getLines(i).length;
    }
    RTW_TraceInfo.instance.setTotalLines(tLines);
    if (aPanel == false) {
      RTW_TraceInfo.instance.setDisablePanel(true);
    }
    var initFile = RTW_TraceArgs.instance.getInitFile();
    RTW_TraceInfo.instance.setInitLocation(initFile,RTW_TraceArgs.instance.getInitLine());
    if (!hasInCodeTrace()) {
        initPage = RTW_TraceInfo.instance.getCurrentHRef();
    } else {
        initPage = initFile;
    }
  } else {
      // catch error that document frame is in another domain
      try {
          var fileDocObj = top.rtwreport_document_frame.document;
          if (fileDocObj.location && (!fileDocObj.location.href || fileDocObj.location.href == "about:blank")) {
              var summaryPage = tocDocObj.getElementById("rtwIdSummaryPage");
              var tracePage = tocDocObj.getElementById("rtwIdTraceability");
              if (summaryPage) {
                  initPage = summaryPage.href;
              } else if (tracePage) {
                  initPage = tracePage;
              }
          }
      } catch(e) {};
  }
  if (RTW_TraceArgs.instance && RTW_TraceArgs.instance.fMessage) {
    // display diagnostic message
    var linkId = "rtwIdMsgFileLink";
    var msgFile = tocDocObj.getElementById(linkId);
    if (msgFile && msgFile.style) {
      msgFile.style.display = "block";
      // Highlight the background of msg link
      tocHiliteById(linkId);      
    }
    initPage = "rtwmsg.html";
  }
  if (initPage) {
      var is_same_page = false;
      try {
          var fileDocObj = top.rtwreport_document_frame.document;
          is_same_page = isSamePage(fileDocObj.location.href, initPage);
      } catch(e) {};          
      if (is_same_page) {
        top.rtwreport_document_frame.location.href = initPage;
        // Goto the same page won't trigger onload function.
        // Call it manuelly to highligh new code location.
          rtwFileOnLoad(top.rtwreport_document_frame.document);        
     } else {
        // change current fileDocObj to initPage
        top.rtwreport_document_frame.location.href = initPage;
     }
  }
}

// Compare if href1(i.e. file:///path/file1.html#222) and href2(i.e.file2.html) are same pages.
// isSamePage return true if file1 == file2.
function isSamePage(href1, href2) {
  var page1 = href1.substring(href1.lastIndexOf('/')+1,href1.lastIndexOf('.html'));
  var page2 = href2.substring(href2.lastIndexOf('/')+1,href2.lastIndexOf('.html'));
  return (page1 == page2);
}

// Callback for main document loading
function rtwMainOnLoad() {    
    rtwMainOnLoadFcn(document,null,true, false);
    var newUrl;
    // modify history state to avoid reload from pressing back 
    if (RTW_TraceArgs.instance && !RTW_TraceArgs.instance.getUseExternalBrowser() && 
        typeof window.history.replaceState === "function") {
        if (window.location.search.length > 0) {
            if (window.location.search.indexOf("loaded=true") === -1) {
                newUrl = document.location.pathname + window.location.search + '&loaded=true';
            } else {
                newUrl = document.location.pathname + window.location.search;
            }
        } else {
            newUrl = document.location.pathname + window.location.search + '?loaded=true';
        }
        window.history.replaceState("","",newUrl);
    }
}

// Helper function for traceability report
function rtwMainReload(location) {
  // remove highlight filename and lines before reloading the page
  if (RTW_TraceInfo.instance)
     RTW_TraceInfo.instance.removeHighlighting();  
  rtwMainOnLoadFcn(document,location,true,true);
}

function rtwMainReloadNoPanel(location) {
  rtwMainOnLoadFcn(document,location,false,true);
}

// Callback for hyperlink "Remove Highlighting"
function rtwRemoveHighlighting() {
  if (RTW_TraceInfo.instance)
    RTW_TraceInfo.instance.removeHighlighting();
    if (rtwSrcFrame()) {
        rtwSrcFrame().focus();
    }
    if (hasInCodeTrace()) {
        removeInCodeTraceHighlight();
    }
}

// Display diagnostic message in document frame
function rtwDisplayMessage() {
  var docObj = top.rtwreport_document_frame.document;
  var msg = docObj.getElementById(RTW_TraceArgs.instance.fMessage);
  if (!msg) {
    msg = docObj.getElementById("rtwMsg_notTraceable");
  }
  if (msg && msg.style) {
    msg.style.display = "block"; // make message visible
    var msgstr = msg.innerHTML;
    if (RTW_TraceArgs.instance.fBlock) {
      // replace '%s' in message with block name
      msgstr = msgstr.replace("%s",RTW_TraceArgs.instance.fBlock);
    }
    msg.innerHTML = msgstr;
  }
}

function updateHyperlinks() {
    docObj = top.rtwreport_document_frame;
    if (docObj && docObj.document) {
        if (RTW_TraceArgs.instance === null || !RTW_TraceArgs.instance.getUseExternalBrowser()) {
            var plain_link =  docObj.document.getElementById("linkToText_plain");
            if (plain_link && plain_link.href && plain_link.href.indexOf("matlab:coder.internal.editUrlTextFile") === -1 ) {
                plain_link.href = "matlab:coder.internal.editUrlTextFile('" + str2StrVar(plain_link.href) + "')";
            }          
            var alink = docObj.document.getElementById("linkToCS");
            var linkCmd = "matlab:coder.internal.viewCodeConfigsetFromReport";
            if (alink && alink.href && alink.href.indexOf(linkCmd) === -1) {
                alink.href = linkCmd+ "('" + str2StrVar(alink.href) + "');";
            }
        } else {
            var alink = docObj.document.getElementById("linkToCS");
            if (alink && alink.style) {
                alink.style.display = "none";
                hidden_link = docObj.document.getElementById("linkToCS_disabled");
                if (hidden_link)
                    hidden_link.style.display = "";
            }
            if (typeof docObj.document.getElementsByClassName === "function")
                alinks = docObj.document.getElementsByClassName("callMATLAB");
            else if (typeof docObj.document.getElementsByName === "function")
                alinks = docObj.document.getElementsByName("callMATLAB");
            else
                alinks = [];
            for (i = 0; i < alinks.length; i++) {
 		alinks[i].href = "javascript:alert('This hyperlink is available only in MATLAB browser.');";
                alinks[i].style.color = "gray";
            }
            alink = docObj.document.getElementById("CodeGenAdvCheck");
            if (alink && alink.href && alink.href.indexOf("externalweb=true")===-1) {
                alink.href = alink.href + "?externalweb=true";
            }

            if (typeof docObj.document.getElementsByName === "function") 
                var objs = docObj.document.getElementsByName("MATLAB_link");
            else 
                objs = [];
            for (var objIndex = 0; objIndex < objs.length; ++objIndex) {     
                objs[objIndex].style.display = "none";
            }
        }
    }
    updateCode2ModelLinks(docObj.document);
    // modify modelref links
    update_modelref_report_link(top.rtwreport_contents_frame.document);
    try {
        // ignore browser security error 
        update_modelref_report_link(top.rtwreport_document_frame.document);
    } catch(e) {};
}

function update_modelref_report_link(docObj) {
    if (docObj.getElementsByName) {
      var arg = "";
      if (RTW_TraceArgs.instance && !RTW_TraceArgs.instance.getUseExternalBrowser()) {
          arg = "?useExternalBrowser=false";
      }
      if (RTW_TraceArgs && RTW_TraceArgs.instance && RTW_TraceArgs.instance.getModel2CodeSrc() != null) {
          if (arg.length > 0)
              arg = arg + "&model2code_src=" + RTW_TraceArgs.instance.getModel2CodeSrc();
          else
              arg = "?model2code_src=" + RTW_TraceArgs.instance.getModel2CodeSrc();
      }
      if (arg.length > 0) {
          links = docObj.getElementsByName('external_link');
          for (var link_idx = 0; link_idx < links.length; ++link_idx) {
              links[link_idx].href = links[link_idx].href + arg;
          }
      }
  }
}

function rtwResizeFrame(f) {
    if (f) {
        f.style.height = f.contentWindow.document.body.scrollHeight + "px";
    }
}

function rtwPageOnLoad(id) {
    // highlight toc entry
    tocHiliteById(id);
    // restore elements state
    if (top && top.restoreState) {
        if (top.rtwreport_contents_frame && top.rtwreport_contents_frame.document)
            top.restoreState(top.rtwreport_contents_frame.document);
        if (top.rtwreport_document_frame && top.rtwreport_document_frame.document) {
            top.restoreState(top.rtwreport_document_frame.document);
            rtwResizeFrame(top.rtwreport_document_frame.document.getElementById("rtwIdContentsIframe"));
        }
    }
    updateHyperlinks();
}

// highlight code after changeSys
function rtwChangeSysCallback(sid) {
    if (sid == "" || typeof RTW_Sid2UrlHash == "undefined" || !RTW_Sid2UrlHash.instance)
        return false;
    urlHash = RTW_Sid2UrlHash.instance.getUrlHash(sid);
    if (urlHash != undefined) {
        if (RTW_TraceArgs && RTW_TraceArgs.instance && 
            !RTW_TraceArgs.instance.getUseExternalBrowser())
            urlHash = (urlHash == "")? "?useExternalBrowser=false" : 
                      urlHash+"&useExternalBrowser=false";
        rtwMainReload(urlHash, true);
        return true;
    } else {
        // remove highlighting from traceinfo
        rtwRemoveHighlighting();
        return false;
    }
}

function emlFileOnload(docObj) {
    var loc = docObj.location;
    if (loc.hash) {
        var line = loc.hash.substring(1);
        hiliteEmlLine(docObj, line);		            
    }	
}

function hiliteEmlLine(docObj, line) {
    var bgColor;
    if (top.HiliteCodeStatus)
        bgColor = "#66CCFF";
    else
        bgColor = "#E8D152";
    // unhighlight
    if (typeof docObj.HiliteLine != "undefined") {
	trObj = docObj.getElementById("LN_"+docObj.HiliteLine);
	if (trObj != null) {
	    trObj.style.backgroundColor = "";			
	}
    }	
    // hilighlight
    trObj = docObj.getElementById("LN_"+line);
    if (trObj != null) {
	trObj.style.backgroundColor = bgColor;
	docObj.HiliteLine = line;
    }
}

function emlLineOnClick(docObj,sid,line) {
    if (top) {
	top.HiliteCodeStatus = top.rtwChangeSysCallback(sid);        
    }
    hiliteEmlLine(docObj, line);
}

function updateCode2ModelLinks(docObj) {
    var webviewFrame = top.document.getElementById('rtw_webviewMidFrame');
    var link2model = false;
    var isTestHarness = false;
    if (top.testHarnessInfo && top.testHarnessInfo.IsTestHarness === "1") {
        isTestHarness = true;
    }
    if (webviewFrame || isTestHarness) {
        if (webviewFrame && RTW_TraceArgs.instance && 
            (RTW_TraceArgs.instance.getModel2CodeSrc() !== "model" ||
             RTW_TraceArgs.instance.getUseExternalBrowser())
           ) {
            hiliteCmd = "javascript:top.rtwHilite(";
        } else {
            hiliteCmd = "matlab:coder.internal.code2model(";
            link2model = true;
        }
        var objs = docObj.getElementsByName('code2model');
        var o = null;
        var str = '';
        var sid = '';
        var pattern = "'code2model',";
        for (var objIndex = 0; objIndex < objs.length; ++objIndex) {     
            o = objs[objIndex];
            str = o.href.substring(o.href.indexOf('(')+1);
            if (str.indexOf(pattern) > -1) {
                str = str.substring(str.indexOf(pattern) + pattern.length);
            }
            o.href = hiliteCmd + str;
            if (link2model && isTestHarness) {
                sid = str.substring(0, str.indexOf(")"));
		o.href = hiliteCmd + sid + ",'" +
                    top.testHarnessInfo.HarnessName+ "','" + 
                    top.testHarnessInfo.HarnessOwner+ "','" + 
                    top.testHarnessInfo.OwnerFileName + "');";
            }
        }
    }
}

function rtwHilite(aBlock,aParentSID) {
    if (aBlock.indexOf('-') !== -1) { 
        // remove sid range: model:sid:2-10 => model:sid 
        var s; 
        s = aBlock.split(':'); 
        if (s.length > 0) { 
            s = s[s.length-1]; 
            if (s.indexOf('-') != -1) { 
                aBlock = aBlock.substring(0, aBlock.lastIndexOf(':')); 
            } 
        } 
    } 
    if (typeof aParentSID === "undefined") {
        if (top.RTW_SidParentMap && top.RTW_SidParentMap.instance)
            aParentSID = top.RTW_SidParentMap.instance.getParentSid(aBlock);
        else
            aParentSID = aBlock;
    }
    top.HiliteCodeStatus = true;
    if (hiliteBlockForRTWReport(aBlock,aParentSID) === false) {
        if (hiliteBlockForRTWReport(aBlock, aBlock) === false) {
            rtwHilite(aParentSID);
        }
    }
}

function str2StrVar(str) {
    return str.replace(/'/g,"''");
}
window.onload=rtwMainOnLoad;

// handle incode traceability highlighting
function inCodeTraceOnload() {  
    var tocDocObj = top.rtwreport_contents_frame.document;
    if (!top.RTW_TraceArgs.instance) {
        var summaryPage = tocDocObj.getElementById("rtwIdSummaryPage");			
	top.rtwreport_document_frame.location.href = summaryPage.href;	
	return;
    }

    var files = top.RTW_TraceArgs.instance.getFile();
    if (files.length === 0) {
        if (top.RTW_TraceArgs.instance) {
          var block = top.RTW_TraceArgs.instance.getBlock();
            block = block.replace("<", "&lt;").replace(">", "&gt;");
        }
	top.rtwreport_document_frame.document.write("<pre>No traceability information for block " + block + ".</pre>");
	return;
    };

    var fileLinks = RTW_TraceInfo.getFileLinks(tocDocObj);
    RTW_TraceInfo.instance = new RTW_TraceInfo(fileLinks);

    // update filelist with num of highlighted lines
    var tocDoc = top.rtwreport_contents_frame.document;
    var tLines = 0;
    for (var i=0; i<files.length;i++) {
        var fileIdx = top.RTW_TraceArgs.instance.getFileIdx(files[i]);
        if (typeof fileIdx !== "undefined") {
            var rows = top.RTW_TraceArgs.instance.getRows(fileIdx);
            var linkNode =  tocDoc.getElementById(files[i]);
            updateNumHighlightedLines(linkNode, rows.length);
            RTW_TraceInfo.instance.setLines(files[i], rows);
            tLines += rows.length;
        }
    }
    // set number of total lines
    RTW_TraceInfo.instance.setTotalLines(tLines);
    // update highligthed from
    var node = tocDoc.getElementById("rtwIdTraceBlock");
    if (node) node.textContent = RTW_TraceArgs.instance.getBlock();
    // set the initial file and line
    fileIdx = top.RTW_TraceArgs.instance.getFileIdx(files[0]);
    rows = top.RTW_TraceArgs.instance.getRows(fileIdx);
    RTW_TraceInfo.instance.setInitLocation(files[0],rows[0]);

    // highlight first file
    top.rtwreport_document_frame.location.href = files[0];
    return;
}

function updateNumHighlightedLines(linkObj, aNumLines) {
    var parent = linkObj.parentNode;
    if (parent && parent.childNodes && parent.childNodes.length > 1) {
        var spanNodes = parent.getElementsByTagName('span');
        var len = spanNodes.length;
        if (len > 0) {
            if (aNumLines > 0) {
                /* display number of matches */
                spanNodes.item(len-1).innerHTML = "&nbsp;("+aNumLines+")";
            } else {
                /* clear number of matches */
                spanNodes.item(len-1).innerHTML = "";
            }
        }
    }
}

function setupInStudio() {
    if (top.whole) {
        var tmp = top.whole.rows.split(",");    
        tmp[0] = "35px";
        top.whole.rows = tmp.join();    
    }
    if (top.main) {
        var tmp = top.main.cols.split(",");
        tmp[0] = "0";
        top.main.cols = tmp.join();
    }
    // add file list to source file
    if (top.Html2SrcLink && top.Html2SrcLink.instance && top.fileSelector) {
        var myDoc = top.fileSelector.document;
        var fileSelector = myDoc.createElement("select");
        fileSelector.id = "fileSelector";
        fileSelector.onchange = top.fileSelectorOnChange;
        var filename;
        var filelink;
        fileSelector.innerHTML += "<option value='" + 
            top.rtwreport_contents_frame.document.getElementById('rtwIdSummaryPage').href +
            "'>Summary</option>"; 
        for (var i=0; i < top.fileList.length; i++) {
            filename = top.fileList[i];
            filelink = top.Html2SrcLink.instance.getLink2Src(filename);
            fileSelector.innerHTML += "<option value='" + filename + "'>" + filelink.substring(filelink.lastIndexOf('/')+1); + "</option>";
        }
        var bodyNode = myDoc.body;
        bodyNode.insertBefore(fileSelector, bodyNode.firstElementChild);
        var textNode = myDoc.createElement("span");
        textNode.innerHTML = "Goto: ";
        bodyNode.insertBefore(textNode, fileSelector);
        var myCss = myDoc.createElement("link");
        myCss.type = "text/css";
        myCss.rel = "stylesheet";
        myCss.href = "rtwreport.css";
        myDoc.getElementsByTagName("head")[0].appendChild(myCss);
    }
}

function toggleNavSideBar(val) {
    if (top.main) {
        var tmp = top.main.cols.split(",");    

        if (val === "on") {
            tmp[tmp.length-1] = "15px";        
        } else {
            tmp[tmp.length-1] = "0";        
        }
        top.main.cols = tmp.join();    
        if (top.rtwreport_nav_frame) 
            top.rtwreport_nav_frame.location.href = "nav.html";    
    }
};

function toggleNavToolBar(val) 
{    
    var midFrame = rtwMidFrame();
    if (midFrame) {
        var tmp1 = midFrame.rows.split(",");
        var frameIdx = getNavToolbarFrameIdx();
        if (val === "on") {
            tmp1[frameIdx] = "40px";
        } else {
            tmp1[frameIdx] = "0";
        }    
        midFrame.rows = tmp1.join();
        if (top.rtwreport_navToolbar_frame) {
            top.rtwreport_navToolbar_frame.location.href = "navToolbar.html";
        }
    }
};

var GlobalConfig = {
    navHiliteColor: "#0000ff",
    fileLinkHiliteColor: "#ffff99",
    navToolbarBgcolor: "#aaffff",
    offset: 10,
    hiliteToken: false
};
var NavSideBarState = {
    calLineHeight: 0, 
    overLink: false,
    linkTarget: null,
    lastLinkTarget: null,
    linkTargetIdx: 0
}
function drawNavSideBar() {
    var rectHeight = 1;
    if (!top || !top.rtwreport_document_frame || !top.rtwreport_nav_frame) return;
    
    if (!top.RTW_TraceArgs.instance) return;
    var fileIdx = top.RTW_TraceArgs.instance.getFileIdx();
    if (fileIdx === undefined) return;
    var rows = top.RTW_TraceArgs.instance.getRows(fileIdx);                
    if (rows.length === 0) return; // no highlighted line 
    
    var codeTbl = top.rtwreport_document_frame.document.getElementById("codeTbl");
    if (!codeTbl) return; // no code table
    
    var nRows = codeTbl.rows.length + 1;
    var canvas = top.rtwreport_nav_frame.document.getElementById("canvas");                
    canvas.width = top.rtwreport_nav_frame.innerWidth;
    canvas.height = top.rtwreport_nav_frame.innerHeight-2;
    NavSideBarState.calLineHeight = canvas.height/nRows;
    if (canvas.getContext) {
        var ctx = canvas.getContext("2d");
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        // fill background 
        ctx.fillStyle = GlobalConfig.navToolbarBgcolor;
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = GlobalConfig.navHiliteColor;
        for (var i=0;i<rows.length;i++) {
            ctx.fillRect(0, Number(rows[i])*NavSideBarState.calLineHeight, canvas.width, rectHeight);
        }
        if (canvas.addEventListener) { 
            canvas.addEventListener("mousemove", navBarOnMousemove, false);
            canvas.addEventListener("click", navBarOnClick, false);
        } else if (canvas.attachEvent) {
            canvas.attachEvent("mousemove", navBarOnMousemove);
            canvas.attachEvent("click", navBarOnClick);
        }
    }
}

function navBarOnMousemove(e) {
    var y = e.clientY;
    var tolerable_range = 5;
    if (!top.RTW_TraceArgs.instance || !top.rtwreport_nav_frame) return;
    var fileIdx = top.RTW_TraceArgs.instance.getFileIdx();
    var rows = top.RTW_TraceArgs.instance.getRows(fileIdx);
    var lineLoc,nextLineLoc;
    top.rtwreport_nav_frame.document.body.style.cursor="";
    NavSideBarState.overLink = false;
    NavSideBarState.linkTarget = null;                 
    NavSideBarState.linkTargetIdx = null;
    for (var i=0;i<rows.length;i++) {
        loc = rows[i]*NavSideBarState.calLineHeight;
        // if within the tolerable range
        if (Math.abs(y-loc) <= tolerable_range) {
            top.rtwreport_nav_frame.document.body.style.cursor="pointer";
            var canvas = top.rtwreport_nav_frame.document.getElementById("canvas");                
            canvas.title = "navigate to line " + rows[i];
            NavSideBarState.overLink = true;
            NavSideBarState.linkTarget = rows[i];
            NavSideBarState.linkTargetIdx = i;
            break;
        } 
    }
}

function navBarOnClick(e) {
    if (NavSideBarState.overLink && top.rtwreport_document_frame) {
        rmTagToCurrentLine(); // remove current line tag
        top.RTW_TraceInfo.instance.setCurrLineIdx(NavSideBarState.linkTargetIdx);
        top.rtwreport_document_frame.document.location.href=RTW_TraceInfo.instance.getCurrentHRef();
        top.addTagToCurrentLine(); // add current line tag
        RTW_TraceInfo.instance.updateNavState();
    }                
}

function removeInCodeTraceHighlight() {
    var docObj = top.rtwreport_document_frame.document;
    toggleNavSideBar("off");
    toggleNavToolBar("off");
    var nodes = docObj.getElementsByClassName("hilite");
    // nodes is a live nodeList. Changing className modifies the list.
    while(nodes.length) {
        nodes[0].className = nodes[0].className.replace("hilite", "");
    }
    var nodes = docObj.getElementsByClassName("hiliteCurrentLine");
    // nodes is a live nodeList. Changing className modifies the list.
    while(nodes.length) {
        nodes[0].className = nodes[0].className.replace("hiliteCurrentLine", "");
    }
    // reset RTW_TraceArgs.instance
    RTW_TraceArgs.instance = null;
    // remove highlight in content panel except the filelink
    if (RTW_TraceInfo && RTW_TraceInfo.instance) {
        var currFileIdx = RTW_TraceInfo.instance.getCurrFileIdx();
        RTW_TraceInfo.instance.removeHighlighting();
        RTW_TraceInfo.instance.highlightFileLink(currFileIdx);
    }
}

function getInspectWindow() {
    var divObj = document.createElement("div");
    divObj.id = "popup_window";
    return divObj;    
}
function getInspectData(file, anchorObj) {   
    var metricsData = null;
    var propObj = null;
    var type = null;
    var size = null;
    var cm; 
    if (top.rtwreport_nav_frame && top.rtwreport_nav_frame.CodeMetrics && 
        top.rtwreport_nav_frame.CodeMetrics.instance && 
        top.RTW_TraceArgs && top.RTW_TraceArgs.instance && 
        !top.RTW_TraceArgs.instance.getUseExternalBrowser()) {
        cm = top.rtwreport_nav_frame.CodeMetrics.instance;
    }
    if (cm && cm.getMetrics) {
        metricsData = cm.getMetrics(anchorObj.text);
        if (!metricsData) {
            // try static token
            metricsData =  cm.getMetrics(RTW_TraceInfo.toSrcFileName(file) + ":" + anchorObj.text);
        }
        if (metricsData) {            
            type = metricsData.type;
            if (type === "var") {
                type = "Global Variable";
                size = "(" + metricsData.size + " byte)";
            } else if (type === "fcn") {
                type = "Function";
                size = "(stack: " + metricsData.stack + " byte, total stack: "
                      + metricsData.stackTotal + " byte)";
            }            
        }
    }    
    if (type === null) {
        var defObj = top.CodeDefine.instance.def[anchorObj.text];
        if (defObj) {
            type = defObj.type;
            if (type === "var") {
                type = "Variable";
            } else if (type === "fcn") {
                type = "Function";
            } else if (type === "type") {
                type = "Type";
            }
            size = "";
        }
    }   
    var propObj = document.createElement("div");
    propObj.id = "token_property";
    
    var ulObj = document.createElement("ul");
    ulObj.className = "popup_attrib_list";
    if (type === null) {
        ulObj.innerHTML = "<li>" + anchorObj.text + "</li>";
    } else {
        ulObj.innerHTML = "<li>" + type + ": <var>" + anchorObj.text + "</var></li><li>"+
            size + "</li>";
    }
    propObj.appendChild(ulObj);   
    
    return propObj;
}
function getInspectLink(file, pathname, anchorObj) {
    var model = top.reportModel;
    var tokenId = anchorObj.id;
    var navObj = document.createElement("div");
    navObj.id = "token_usage_nav";
    ulObj = document.createElement("ul");
    ulObj.id = "token_nav_links";
    ulObj.className="popup_attrib_list";
    var defObj = top.CodeDefine.instance.def[anchorObj.text];
    var line = anchorObj.id.substring(0,anchorObj.id.indexOf("c"));
    // link to model
    if (top.TraceInfoFlag && top.TraceInfoFlag.instance && 
        top.TraceInfoFlag.instance.traceFlag[RTW_TraceInfo.toSrcFileName(file)+":"+anchorObj.id]) {
        ulObj.innerHTML +=  "<li><a href=\"matlab:rtw.report.code2model(\'" + top.reportModel 
            + "\',\'"+pathname+"\',\'" + tokenId + "');\">Navigate to model</a></li>";
    }
    // link to def/decl
    if (defObj) {
        var filename = defObj.file.split(/\//);
        filename = filename[filename.length-1];
        ulObj.innerHTML += "<li><i>" + anchorObj.text + "</i> defined at <a target='rtwreport_document_frame' onclick=\"top.tokenLinkOnClick(event)\" href='" + defObj.file + "#" + defObj.line +
            "'>" + RTW_TraceInfo.toSrcFileName(filename) + " line " + defObj.line + "</a></li>";
    }
    navObj.appendChild(ulObj);
    return navObj;
}

var LastHiliteTokenId = null;
function rmHiliteClickedToken() {
   if (LastHiliteTokenId) {
        var o = top.rtwreport_document_frame.document.getElementById(LastHiliteTokenId);
        if (o) {
            o.className = o.className.replace("hiliteToken", "");
        }
    }
}
function hiliteClickedToken(elem) {
    rmHiliteClickedToken();
    LastHiliteTokenId = elem.id;
    elem.className += " hiliteToken";
}

var initLine = null;
function scrollToInitLine() {
    if (initLine) {
        var lineElem = top.rtwreport_document_frame.document.getElementById(initLine);
        if (lineElem) {
            lineElem.scrollIntoView();
        }
    }
}

function scrollToLineBasedOnHash(hashValue) {
    // move to the current highlight line if the hash is not empty
    if (hashValue === "") {
        if (top.RTW_TraceInfo.instance && top.RTW_TraceInfo.instance.getCurrLine() !== null) {
            top.rtwreport_document_frame.document.location.href=top.RTW_TraceInfo.instance.getCurrentHRef();
            top.initLine = top.rtwreport_document_frame.document.location.hash.substr(1);
        }
    } else {
        // scroll and hilite line
        hashValue = hashValue.substr(1);
        if (isNaN(hashValue)) {
            // #fcn_name
            var pattern = "+newPage";
            if (hashValue.indexOf(pattern) != -1) {
                hashValue = hashValue.replace(pattern, '');
                var lineElem = top.rtwreport_document_frame.document.getElementById(hashValue);
                initLine = hashValue; // save initLine in case the dom is updated later by anootation
                if (lineElem) {
                    lineElem.scrollIntoView(); 
                    addTagToCurrentLine();
                }

            } else {
                var token = null;
                pattern = ["var_", "fcn_", "type_"];
                for (var i =0; i < pattern.length; i++) {
                    if (hashValue.indexOf(pattern[i]) === 0) {
                        token = hashValue.substr(pattern[i].length);
                        break;
                    }
                }
                if (token !== null && top.CodeDefine && top.CodeDefine.instance) {
                    var addr = top.CodeDefine.instance.def[token];
                    if (addr) {
                        hilite_line(addr.line);
                    }
                } else { // token id like #line"c"#col
		    if (hashValue.indexOf("c") !== -1) {
			hilite_line(hashValue.substr(0, hashValue.indexOf("c")), hashValue);
		    }
		}
            }
        } else { // #line
            hilite_line(hashValue);
        }
    }
    return false;
    // hilite line number and scroll with an offset
    function hilite_line(line, tokenId) {
        if (isNaN(line)) return;
	if (!tokenId) {
	    tokenId = line;
	}
	var elem = top.rtwreport_document_frame.document.getElementById(tokenId);		
        hiliteClickedToken(elem);
        initLine = offset_line(line);
        scrollToInitLine();
    }
}

function tokenLinkOnClick(event) {
    var alink = event.currentTarget;
    if (alink.pathname === top.rtwreport_document_frame.location.pathname) {
        event.preventDefault();
        scrollToLineBasedOnHash(alink.hash);
    }
    return false;
}
function inspectToken(file, pathname, event) {
    var height = "70px";
    // show inspect data
    if (top.rtwreport_inspect_frame) { 
        var windowObj = getInspectWindow();
        var propObj = getInspectData(file, event.currentTarget);
        var navObj = getInspectLink(file, pathname, event.currentTarget);
        if (propObj === null) {
            height = "50px";
        } else {
            windowObj.appendChild(propObj);
        }
        windowObj.appendChild(navObj);
        var data = top.rtwreport_inspect_frame.document.getElementById("popup_window");
        if (data) {
            data.parentNode.replaceChild(windowObj.cloneNode(true), data);
        }
    }
    setInspectWindow(height);
    return false;
}
function setInspectWindow(height) {
    // show inspect code frame
    var midFrame = rtwMidFrame();
    var tmp = midFrame.rows.split(",");
    tmp[getInspectFrameIdx()] = height;    
    midFrame.rows = tmp.join();
}
function closeInspectWindow() {
    setInspectWindow(0);
    return false;
}

// set the trace number in the navigation toolbar
function setTraceNumber() {
    if (RTW_TraceInfo.instance) {
        var aFrame = rtwNavToolbarFrame();
        if (aFrame) {
            var node = aFrame.document.getElementById("rtwIdTraceNumber");
            // calculate current line index over total highlighted lines
            var currNum = RTW_TraceInfo.instance.getCurrLineIdx();
            for (var idx=0;idx<RTW_TraceInfo.instance.getCurrFileIdx();idx++) {
                currNum += RTW_TraceInfo.instance.getNumLines(idx);
            }
            if (node) {
                node.innerHTML = String(currNum+1) + " of " + String(RTW_TraceInfo.instance.getTotalLines());
            }
        }
    }
}

function offset_line(line, offset) {
    if (offset == undefined)
        offset = GlobalConfig.offset;
    if (offset > 0)
        line = (line > GlobalConfig.offset ? line - GlobalConfig.offset : 1);
    return line;
}

function load_js(frame, file) {
    var h = frame.document.getElementsByTagName("head")[0];
    var o = h.getElementsByTagName('script');
    for (var i=0;i<o.length;++i) {
        if (o[i].getAttribute("src") === file) {
            h.removeChild(o[i]);
        }
    }
    var s = top.document.createElement("script");
    s.type = "text/javascript";
    s.src = file;
    h.appendChild(s);
}

function reqOnClick(event) {
    top.hiliteClickedToken(event.currentTarget);
    return true;
}
function resize_NavToolbar_frame() {
    resize_frame(getNavToolbarFrameIdx(), rtwNavToolbarFrame().document.height);
}
function resize_Inspect_frame() {
    resize_frame(getInspectFrameIdx(), rtwInspectFrame().document.height);
}
function resize_frame(id, height) {
    if (height) {
        var midFrame = top.rtwMidFrame();
        var tmp = midFrame.rows.split(",");
        if (tmp[id] !== "0%" && tmp[id] !== "0") {
            tmp[id] = "" + height - 8 + "px";
            midFrame.rows = tmp.join();
        }
    }
}
function getNavToolbarFrameIdx() {
    return 0;
}
function getInspectFrameIdx() {
    return 2;
}
function load_metrics() {
    var alink = top.document.createElement("a");
    alink.href = "metrics.js";
    if (top.RTW_TraceArgs && top.RTW_TraceArgs.instance && !top.RTW_TraceArgs.instance.getUseExternalBrowser()) {
        try {
            load_js(top.rtwreport_nav_frame, alink.href);
        } catch (err) {};
    }
}

function getNavFrame() {
    if (hasWebviewFrame()) {
        return rtwTocFrame();
    } else {
        return rtwNavToolbarFrame();
    }
}

function hasWebviewFrame() {
    if (top.document.getElementById('rtw_webviewMidFrame')) {
        return true;
    } else {
        return  false;
    }
}
function hasInCodeTrace() {
    return (typeof(Html2SrcLink) === "function") && !hasWebviewFrame();
}
function uniqueRows(rows) {
    return rows.sort(function(a,b) {return a-b}).filter(
        function(el,idx, arr) {
            if (idx===arr.indexOf(el)) return true; return false;
        }
    );
}
function fileSelectorOnChange(event) {
    var o = top.Html2SrcLink.instance.getLinkFromRoot(event.currentTarget.value)
    if (o) {
        top.rtwreport_document_frame.location.href = o;
    } else {
        top.rtwreport_document_frame.location.href = event.currentTarget.value;
    }
}
<html><head><title>Block-to-Code Highlighting Message</title>
<link rel="stylesheet" type="text/css" href="rtwreport.css" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
</head><body onload="if (top.rtwDisplayMessage) top.rtwDisplayMessage();">
<h1>Block-to-Code Highlighting Message</h1>
<p id="rtwMsg_notTraceable" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />Code for '%s' cannot be traced because traceability information is not found.</p><p id="rtwMsg_virtualBlock" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />'%s' is a virtual block. Code is not generated for virtual blocks.</p><p id="rtwMsg_reducedBlock" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />'%s' is reduced during model compilation. Code is not generated for reduced blocks.</p><p id="rtwMsg_reusableFunction" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />Code for '%s' is from reusable function and cannot be traced.</p><p id="rtwMsg_blockOutsideSystem" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />'%s' is outside of source subsystem and cannot be traced.</p><p id="rtwMsg_illegalCharacter" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />'%s' contains illegal character (single quote) that disables model-to-code navigation. Remove single quote from block name and rebuild model.</p><p id="rtwMsg_maskedSubSystem" style="display: none"><img src="hilite_warning.png" vspace="3px" align="top" />'%s' is a masked subsystem and cannot be traced at the subsystem block level. Traceability information is available for individual blocks under the mask.</p>
</body></html>/* Copyright 2011-2014 The MathWorks, Inc. */
body,p,table {font-family: calibri, verdana, sans-serif;}
button,.buton {font-family: calibri, verdana, sans-serif;}  
button,.button {font-size: small;}
.small_font {font-size: small;}
h1 { font-weight: normal; color: #000066; }
td { vertical-align: top }
th { background-color: #eeeeee; text-align: left; }
a:link { color: #0033cc; }
a:visited { color: #666666; }
input { font-family: sans-serif, verdana, calibri; }
table {
  background-color: #ffffff;
  width: 100%;
}

table.toc, table.button, table.panel {
  border-style: none;
}

.highlighted {
    background-color: yellow;
}

.highlightedCurrent {
    background-color: #819FF7;
}

input.search {
    background-color: #ffffff;
}

input.failedSearch {
    background-color: #F78181;
}

/* ensure that code2model links are comment green */
a.code2model:link {
    color: #117755;
    font-style: italic;
}
a.code2model:visited{
    color: #117755;
    font-style: italic;
}

.toc td, .button td, .panel td {
  border-style: none;
  padding: 4px;
}

h1 { font-weight: normal; color: #000066; }
td { vertical-align: top }
th { background-color: #eeeeee; text-align: left; }
a:link { color: #0033cc; }
a:visited { color: #666666; }

/******* table *******/
/* default table style */
table.AltRow {
    border-collapse: collapse; border: none; border-spacing: 0pt;
    border-top: solid #4F81BD 1.0pt; border-bottom: solid #4F81BD 1.0pt;
}
table.AltRow th, table.AltRow td { padding: 2pt 8pt 2pt 2pt }
/* default alternating row style */
table.AltRow tr.even td { background-color:#D3DFEE; border:none;}
table.AltRow tr.odd td { background-color:#FFFFFF; border:none;}
/* tr class="heading" */
table.AltRow tr.heading td, table.AltRow th {
  background-color:#FFFFFF; font-weight:bold; border:none;
  border-bottom: solid #4F81BD 1.0pt;
}
/* table class="FirstColumn" */
table.FirstColumn td:first-child { font-weight:bold }
/* table class="TotalRow" */
table.TotalRow tr:last-child { font-weight:bold }
table.TotalRow tr:last-child td { border-top: solid #4F81BD 1.0pt }

a.closeButton {
	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #f9f9f9), color-stop(1, #e9e9e9) );
	background:-moz-linear-gradient( center top, #f9f9f9 5%, #e9e9e9 100% );
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f9f9f9', endColorstr='#e9e9e9');
	background-color:#f9f9f9;
	-webkit-border-top-left-radius:20px;
	-moz-border-radius-topleft:20px;
	border-top-left-radius:20px;
	-webkit-border-top-right-radius:20px;
	-moz-border-radius-topright:20px;
	border-top-right-radius:20px;
	-webkit-border-bottom-right-radius:20px;
	-moz-border-radius-bottomright:20px;
	border-bottom-right-radius:20px;
	-webkit-border-bottom-left-radius:20px;
	-moz-border-radius-bottomleft:20px;
	border-bottom-left-radius:20px;
	text-indent:0;
	border:2px solid #dcdcdc;
	display:inline-block;
	color:#454143;
	font-family:Arial;
	font-size:15px;
	font-weight:bold;
	font-style:normal;
	height:20px;
	line-height:20px;
	width:20px;
	text-decoration:none;
	text-align:center;
        cursor: pointer;
}
a.closeButton:hover {
	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #e9e9e9), color-stop(1, #f9f9f9) );
	background:-moz-linear-gradient( center top, #e9e9e9 5%, #f9f9f9 100% );
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#e9e9e9', endColorstr='#f9f9f9');
	background-color:#e9e9e9;
}
a.closeButton:active {
	position:relative;
	top:1px;
}

.button {
	-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;
	-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;
	box-shadow:inset 0px 1px 0px 0px #ffffff;
	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #ededed), color-stop(1, #dfdfdf) );
	background:-moz-linear-gradient( center top, #ededed 5%, #dfdfdf 100% );
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#dfdfdf');
	background-color:#ededed;
	-webkit-border-top-left-radius:5px;
	-moz-border-radius-topleft:5px;
	border-top-left-radius:5px;
	-webkit-border-top-right-radius:5px;
	-moz-border-radius-topright:5px;
	border-top-right-radius:5px;
	-webkit-border-bottom-right-radius:5px;
	-moz-border-radius-bottomright:5px;
	border-bottom-right-radius:5px;
	-webkit-border-bottom-left-radius:5px;
	-moz-border-radius-bottomleft:5px;
	border-bottom-left-radius:5px;
	text-indent:0px;
	border:1px solid #dcdcdc;
	display:inline-block;
	color:black;
	font-family:Arial;
	font-size:12px;
	font-weight:bold;
	font-style:normal;
	height:12px;
	line-height:12px;
	width:45px;
	text-decoration:none;
	text-align:center;
	text-shadow:1px 1px 0px #ffffff;
}
.button:hover {
	background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #dfdfdf), color-stop(1, #ededed) );
	background:-moz-linear-gradient( center top, #dfdfdf 5%, #ededed 100% );
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#dfdfdf', endColorstr='#ededed');
	background-color:#dfdfdf;
}.button:active {
	position:relative;
	top:1px;
}.button:disabled {
	color:#777777;
}

ul.nav_list {
        list-style-type:none; 
        display: block;		
	margin: 0;
	padding: 0;
}
ul.nav_list li {
        list-style-type:none; 
	display: inline;
	margin: 0 18px 0 0;
	padding: 0;
}

.nav_toolbar {
    background-color: #aff;
    margin-top: 0;
}

.inspect_body {
    margin-top: 0;
    margin-bottom: 0;
    display: inline;
    vertical-align:middle; 
}

table.nav_table {
    background-color: #aff;
    border: none;
    width: 100%;
    display: inline;
    vertical-align:middle;    
}

table#rtwIdTracePanel > tr > td {
    white-space: nowrap;
    table-layout:fixed;
    vertical-align:middle; 
}

table.nav_table > button {
  height: 20px;
}
select#fileSelector {
   padding: 5px;
   font-size: 16px;
   line-height: 1;
   border-radius: 0;
   height: 34px;
}
// Copyright 2011-2013 The MathWorks, Inc.


function local_onload() {
    if (typeof top.rtwreport_document_frame !== "undefined") {
        var docObj = window.document;
        var alink =  docObj.getElementById("linkToText_plain");
        if (alink) {
            alink.href = "matlab:coder.internal.editUrlTextFile('" + alink.href + "')";
        }
        alink = docObj.getElementById("linkToCS");
        if (alink) {
            alink.href = "matlab:coder.internal.viewCodeConfigsetFromReport('" + alink.href + "');";
        }
    }
}

var utils = (function() {

    // Load via Microsoft.XMLDOM--for older versions of IE
    function loadXML_MSXMLDOM(filename, callback, async) {
        if (navigator.appName == "Microsoft Internet Explorer") {
            // Internet Explorer 5/6 
            try {
                var xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
                xmlDoc.async = async;
                xmlDoc.onreadystatechange = function() {
                    if (xmlDoc.readyState == 4) {
                        callback(xmlDoc);
                    }
                }
                xmlDoc.load(filename);
                return true;
            } catch(e) {
            }
        }
        return false;
    }

    // Load via XMLHttpRequest
    function loadXML_XHR(filename, callback, async) {
        if (window.XMLHttpRequest) {
            try {
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function() {
                    if (this.readyState == 4) {
                        callback(this.responseXML);
                    }
                }
                xhr.open("GET", filename, async);
                xhr.send("");
                return true;
            } catch(e) {
                if (navigator.appName === "Netscape" && e.code === 1012) {
                    // file not found: ignore
                    return true;
                }
            }
        }
        return false;
    }

    return {
        trimText: function(s) {
            // In IE9, String.trim not present
            if (s && s.trim) {
                return s.trim();
            }
            else {
                return s;
            }
        },
        getText: function(elt) {
            // In IE9, use 'text' property rather than 'textContent'
            return elt.textContent ? elt.textContent : elt.text;
        },
        loadXML: function(filename, callback, options) {
            var async = !!options && typeof(options["async"]) !== "undefined" ? options.async : true;
            if (!loadXML_XHR(filename, callback, async)) {
                if (!loadXML_MSXMLDOM(filename, callback, async)) {
                    return false;
                }
            }
            return true;
        }
    };
})();

function code2model(sid) {
    utils.loadXML("http://localhost:31415/matlab/feval/coder.internal.code2model?arguments=[\"" + sid + "\"]", function() {});
    //window.location.href = "matlab:coder.internal.code2model('" + sid + "')";
}
// Copyright 2011-2012 The MathWorks, Inc.

function RTW_STRUCT(prop, value) {
    this.prop = prop;
    if (typeof(value) == 'undefined')
        this.value = "";
    else
        this.value = value;
}

// initialize the cache when code generation report is first loaded
function RTW_BOOK()
{
    this.length = 0;    
    this.rtw_pages = new Array();
    this.getPage = function(file) {
        return this.rtw_pages[file];
    }
    this.addPage = function(file) {        
        var page;
        if (this.hasPage(file)) {
            page = this.rtw_pages[file];
        } else {
            page = new RTW_PAGE(file);
            this.rtw_pages[file] = page;
        }        
        return page;
    }
    this.hasPage = function(file) {
        return typeof(this.rtw_pages[file]) != 'undefined';
    }
    this.removePage = function(file)
        {
            var tmp;
            if (typeof(this.rtw_pages[file]) != 'undefined') {
                tmp = this.rtw_pages[file];
                delete this.rtw_pages[file];
                this.length--;
            }
            return tmp;
        }
}

if (!RTW_BOOK.instance) {
    RTW_BOOK.instance = new RTW_BOOK();
}

function RTW_PAGE()
{
    this.length = 0;
    this.items = new Array();    
    this.pagename = '';
    if (arguments.length > 0 && typeof(arguments[1])!='undefined') {
        this.pagename = arguments[1];
    }
    
    this.getItem = function(id) {
        return this.items[id];
    }
    this.getItems = function() {
        return this.items;
    }
    this.addItem = function(id, value) {
        var tmp;
        if (typeof(value) != 'undefined') {
            if (typeof(this.items[id]) != 'undefined') {
                this.length++;
            } else {
                tmp = this.items[id];
            }
            this.items[id] = value;
            this.length++;
        }
        return tmp;
    }
    this.hasItem = function(id) {        
        return typeof(this.items[id]) != 'undefined';
    }
    this.removeItem = function(id) {
        var tmp;
        if (typeof(this.items[id]) != 'undefined') {
            tmp = this.items[id];
            delete this.items[id];
            this.length--;
        }
          return tmp;
    }
}

function rtwTableShrink(doc, obj, id, isSymbol){
    if (isSymbol) {
        hide = "[-]";
        hide_text = hide;
        show = "[+]";
        show_text = show;
    } else {
        hide = "[<u>hide</u>]";
        hide_text  = "[hide]";
        show = "[<u>show</u>]";
        show_text = "[show]";
    }
    hide = "<span class='shrink-button'>" + hide + "</span>";
    show = "<span class='shrink-button'>" + show + "</span>";
    if (doc.getElementsByName) {
        var o = doc.getElementsByName(id);
        for (var oid = 0; oid < o.length; ++oid) {
            if (o[oid].style.display == "none") {
                o[oid].style.display =  "";
            } else {
                o[oid].style.display = "none";
            }
        }
        if (o.length >= 0 && top && top.addToPage)
            top.addToPage(doc, o[0], 'display');
    }

    // IE supports innerText while other browsers support textContent
    if (obj.textContent)
      var objText = obj.textContent;
    else
      var objText = obj.innerText;

    if (objText.toLowerCase() == show_text.toLowerCase())
        obj.innerHTML = hide; 
    else 
        obj.innerHTML = show; 

    if (top && top.addToPage)
        top.addToPage(doc, obj, 'innerHTML');
}

function rtwTableExpand(doc, controlObj, id) 
{
    if (doc.getElementById) {
        var obj = doc.getElementById(id);
        if (obj && obj.style.display == "none") {
            rtwTableShrink(doc, controlObj, id, false);
        }
    }            
}

function restoreState(docObj) {
    var filename = docObj.location.href;
    if (RTW_BOOK.instance && RTW_BOOK.instance.hasPage(filename)) {
        var page = RTW_BOOK.instance.getPage(filename);
        var items = page.getItems();
        var elem;
        if (docObj.getElementsByName) {
            for (var i in items) {
                o = docObj.getElementsByName(i);
                for (var oid = 0; oid < o.length; ++oid) {
                    elem = o[oid];
                    if (items[i].prop == 'display') {
                        if (elem.style.display == 'none')
                            elem.style.display = '';
                        else
                            elem.style.display = 'none';
                    } else if (items[i].prop == 'innerHTML') {
                        elem.innerHTML = items[i].value;
                    }
                }
            }
        }
    }
}

function addToPage(docObj, Obj, prop) {
    var filename = docObj.location.href;
    if (RTW_BOOK.instance) {
        var page;
        if (RTW_BOOK.instance.hasPage(filename))
            page = RTW_BOOK.instance.getPage(filename);
        else
            page = RTW_BOOK.instance.addPage(filename);
        if (page.hasItem(Obj.id))
            page.removeItem(Obj.id);
        else {            
            if (prop == "display")
                my_struct = new RTW_STRUCT(prop, Obj.style.display);
            else
                my_struct = new RTW_STRUCT(prop, Obj.innerHTML);                                
            page.addItem(Obj.id, my_struct);
        }
    }
}

function rtwSwitchView(doc, obj1, obj2) {
    if (doc.getElementsByName) {
        var o = doc.getElementsByName(obj1);
        for (var oid = 0; oid < o.length; ++oid) {
            o[oid].style.display =  "none"; 
        } 
        if (o.length >= 0 && top && top.addToPage)
            top.addToPage(doc, o[0], 'display');
        var o = doc.getElementsByName(obj2);
        for (var oid = 0; oid < o.length; ++oid) {                 
            o[oid].style.display =  ""; 
        }
        if (o.length >= 0 && top && top.addToPage)
            top.addToPage(doc, o[0], 'display');
    } 
}
<!DOCTYPE html>
<html>
<head>
<script type="text/javascript" src="./js/coder_app.js"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="./rtwreport_utils.js"></script>
<script type="text/javascript" src="./rtwannotate.js"></script>
<link rel="stylesheet" type="text/css" href="./css/coder_app.css"/>
</head>
<body onload="srcFileOnload();">
<pre id="code">
<table class="code" id="codeTbl">
<tr name="1" id="1">
<td>1</td><td><span class="ct">/*</span></td></tr>
<tr name="2" id="2">
<td>2</td><td><span class="ct"> * File: rtwtypes.h</span></td></tr>
<tr name="3" id="3">
<td>3</td><td><span class="ct"> *</span></td></tr>
<tr name="4" id="4">
<td>4</td><td><span class="ct"> * Code generated for Simulink model 'inverted_pendulum'.</span></td></tr>
<tr name="5" id="5">
<td>5</td><td><span class="ct"> *</span></td></tr>
<tr name="6" id="6">
<td>6</td><td><span class="ct"> * Model version                  : 1.48</span></td></tr>
<tr name="7" id="7">
<td>7</td><td><span class="ct"> * Simulink Coder version         : 8.8 (R2015a) 09-Feb-2015</span></td></tr>
<tr name="8" id="8">
<td>8</td><td><span class="ct"> * C/C++ source code generated on : Thu Jan 28 21:02:07 2016</span></td></tr>
<tr name="9" id="9">
<td>9</td><td><span class="ct"> *</span></td></tr>
<tr name="10" id="10">
<td>10</td><td><span class="ct"> * Target selection: ert.tlc</span></td></tr>
<tr name="11" id="11">
<td>11</td><td><span class="ct"> * Embedded hardware selection: ARM Compatible-&gt;ARM Cortex</span></td></tr>
<tr name="12" id="12">
<td>12</td><td><span class="ct"> * Code generation objectives: Unspecified</span></td></tr>
<tr name="13" id="13">
<td>13</td><td><span class="ct"> * Validation result: Not run</span></td></tr>
<tr name="14" id="14">
<td>14</td><td><span class="ct"> */</span></td></tr>
<tr name="15" id="15">
<td>15</td><td></td></tr>
<tr name="16" id="16">
<td>16</td><td><span class="pp">#ifndef</span> <a id="16c9" class="tk">__RTWTYPES_H__</a></td></tr>
<tr name="17" id="17">
<td>17</td><td><span class="pp">#define</span> <a id="17c9" class="tk">__RTWTYPES_H__</a></td></tr>
<tr name="18" id="18">
<td>18</td><td></td></tr>
<tr name="19" id="19">
<td>19</td><td><span class="ct">/* Logical type definitions */</span></td></tr>
<tr name="20" id="20">
<td>20</td><td><span class="pp">#if</span> (!<a id="20c7" class="tk">defined</a>(<a id="20c15" class="tk">__cplusplus</a>))</td></tr>
<tr name="21" id="21">
<td>21</td><td><span class="pp">#  ifndef</span> false</td></tr>
<tr name="22" id="22">
<td>22</td><td><span class="pp">#   define</span> false                       (0U)</td></tr>
<tr name="23" id="23">
<td>23</td><td><span class="pp">#  endif</span></td></tr>
<tr name="24" id="24">
<td>24</td><td></td></tr>
<tr name="25" id="25">
<td>25</td><td><span class="pp">#  ifndef</span> true</td></tr>
<tr name="26" id="26">
<td>26</td><td><span class="pp">#   define</span> true                        (1U)</td></tr>
<tr name="27" id="27">
<td>27</td><td><span class="pp">#  endif</span></td></tr>
<tr name="28" id="28">
<td>28</td><td><span class="pp">#endif</span></td></tr>
<tr name="29" id="29">
<td>29</td><td></td></tr>
<tr name="30" id="30">
<td>30</td><td><span class="ct">/*=======================================================================*</span></td></tr>
<tr name="31" id="31">
<td>31</td><td><span class="ct"> * Target hardware information</span></td></tr>
<tr name="32" id="32">
<td>32</td><td><span class="ct"> *   Device type: ARM Compatible-&gt;ARM Cortex</span></td></tr>
<tr name="33" id="33">
<td>33</td><td><span class="ct"> *   Number of bits:     char:   8    short:   16    int:  32</span></td></tr>
<tr name="34" id="34">
<td>34</td><td><span class="ct"> *                       long:  32</span></td></tr>
<tr name="35" id="35">
<td>35</td><td><span class="ct"> *                       native word size:  32</span></td></tr>
<tr name="36" id="36">
<td>36</td><td><span class="ct"> *   Byte ordering: LittleEndian</span></td></tr>
<tr name="37" id="37">
<td>37</td><td><span class="ct"> *   Signed integer division rounds to: Undefined</span></td></tr>
<tr name="38" id="38">
<td>38</td><td><span class="ct"> *   Shift right on a signed integer as arithmetic shift: on</span></td></tr>
<tr name="39" id="39">
<td>39</td><td><span class="ct"> *=======================================================================*/</span></td></tr>
<tr name="40" id="40">
<td>40</td><td></td></tr>
<tr name="41" id="41">
<td>41</td><td><span class="ct">/*=======================================================================*</span></td></tr>
<tr name="42" id="42">
<td>42</td><td><span class="ct"> * Fixed width word size data types:                                     *</span></td></tr>
<tr name="43" id="43">
<td>43</td><td><span class="ct"> *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *</span></td></tr>
<tr name="44" id="44">
<td>44</td><td><span class="ct"> *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *</span></td></tr>
<tr name="45" id="45">
<td>45</td><td><span class="ct"> *   real32_T, real64_T           - 32 and 64 bit floating point numbers *</span></td></tr>
<tr name="46" id="46">
<td>46</td><td><span class="ct"> *=======================================================================*/</span></td></tr>
<tr name="47" id="47">
<td>47</td><td><span class="kw">typedef</span> <span class="kw">signed</span> <span class="kw">char</span> <a id="47c21" class="tk">int8_T</a>;</td></tr>
<tr name="48" id="48">
<td>48</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">char</span> <a id="48c23" class="tk">uint8_T</a>;</td></tr>
<tr name="49" id="49">
<td>49</td><td><span class="kw">typedef</span> <span class="kw">short</span> <a id="49c15" class="tk">int16_T</a>;</td></tr>
<tr name="50" id="50">
<td>50</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">short</span> <a id="50c24" class="tk">uint16_T</a>;</td></tr>
<tr name="51" id="51">
<td>51</td><td><span class="kw">typedef</span> <span class="kw">int</span> <a id="51c13" class="tk">int32_T</a>;</td></tr>
<tr name="52" id="52">
<td>52</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">int</span> <a id="52c22" class="tk">uint32_T</a>;</td></tr>
<tr name="53" id="53">
<td>53</td><td><span class="kw">typedef</span> <span class="kw">float</span> <a id="53c15" class="tk">real32_T</a>;</td></tr>
<tr name="54" id="54">
<td>54</td><td><span class="kw">typedef</span> <span class="kw">double</span> <a id="54c16" class="tk">real64_T</a>;</td></tr>
<tr name="55" id="55">
<td>55</td><td></td></tr>
<tr name="56" id="56">
<td>56</td><td><span class="ct">/*===========================================================================*</span></td></tr>
<tr name="57" id="57">
<td>57</td><td><span class="ct"> * Generic type definitions: real_T, time_T, boolean_T, int_T, uint_T,       *</span></td></tr>
<tr name="58" id="58">
<td>58</td><td><span class="ct"> *                           ulong_T, char_T and byte_T.                     *</span></td></tr>
<tr name="59" id="59">
<td>59</td><td><span class="ct"> *===========================================================================*/</span></td></tr>
<tr name="60" id="60">
<td>60</td><td><span class="kw">typedef</span> <span class="kw">double</span> <a id="60c16" class="tk">real_T</a>;</td></tr>
<tr name="61" id="61">
<td>61</td><td><span class="kw">typedef</span> <span class="kw">double</span> <a id="61c16" class="tk">time_T</a>;</td></tr>
<tr name="62" id="62">
<td>62</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">char</span> <a id="62c23" class="tk">boolean_T</a>;</td></tr>
<tr name="63" id="63">
<td>63</td><td><span class="kw">typedef</span> <span class="kw">int</span> <a id="63c13" class="tk">int_T</a>;</td></tr>
<tr name="64" id="64">
<td>64</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">int</span> <a id="64c22" class="tk">uint_T</a>;</td></tr>
<tr name="65" id="65">
<td>65</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">long</span> <a id="65c23" class="tk">ulong_T</a>;</td></tr>
<tr name="66" id="66">
<td>66</td><td><span class="kw">typedef</span> <span class="kw">char</span> <a id="66c14" class="tk">char_T</a>;</td></tr>
<tr name="67" id="67">
<td>67</td><td><span class="kw">typedef</span> <span class="kw">unsigned</span> <span class="kw">char</span> <a id="67c23" class="tk">uchar_T</a>;</td></tr>
<tr name="68" id="68">
<td>68</td><td><span class="kw">typedef</span> <a id="68c9" class="tk">char_T</a> <a id="68c16" class="tk">byte_T</a>;</td></tr>
<tr name="69" id="69">
<td>69</td><td></td></tr>
<tr name="70" id="70">
<td>70</td><td><span class="ct">/*===========================================================================*</span></td></tr>
<tr name="71" id="71">
<td>71</td><td><span class="ct"> * Complex number type definitions                                           *</span></td></tr>
<tr name="72" id="72">
<td>72</td><td><span class="ct"> *===========================================================================*/</span></td></tr>
<tr name="73" id="73">
<td>73</td><td><span class="pp">#define</span> <a id="73c9" class="tk">CREAL_T</a></td></tr>
<tr name="74" id="74">
<td>74</td><td></td></tr>
<tr name="75" id="75">
<td>75</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="76" id="76">
<td>76</td><td>  <a id="76c3" class="tk">real32_T</a> <a id="76c12" class="tk">re</a>;</td></tr>
<tr name="77" id="77">
<td>77</td><td>  <a id="77c3" class="tk">real32_T</a> <a id="77c12" class="tk">im</a>;</td></tr>
<tr name="78" id="78">
<td>78</td><td><span class="br">}</span> <a id="78c3" class="tk">creal32_T</a>;</td></tr>
<tr name="79" id="79">
<td>79</td><td></td></tr>
<tr name="80" id="80">
<td>80</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="81" id="81">
<td>81</td><td>  <a id="81c3" class="tk">real64_T</a> <a id="81c12" class="tk">re</a>;</td></tr>
<tr name="82" id="82">
<td>82</td><td>  <a id="82c3" class="tk">real64_T</a> <a id="82c12" class="tk">im</a>;</td></tr>
<tr name="83" id="83">
<td>83</td><td><span class="br">}</span> <a id="83c3" class="tk">creal64_T</a>;</td></tr>
<tr name="84" id="84">
<td>84</td><td></td></tr>
<tr name="85" id="85">
<td>85</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="86" id="86">
<td>86</td><td>  <a id="86c3" class="tk">real_T</a> <a id="86c10" class="tk">re</a>;</td></tr>
<tr name="87" id="87">
<td>87</td><td>  <a id="87c3" class="tk">real_T</a> <a id="87c10" class="tk">im</a>;</td></tr>
<tr name="88" id="88">
<td>88</td><td><span class="br">}</span> <a id="88c3" class="tk">creal_T</a>;</td></tr>
<tr name="89" id="89">
<td>89</td><td></td></tr>
<tr name="90" id="90">
<td>90</td><td><span class="pp">#define</span> <a id="90c9" class="tk">CINT8_T</a></td></tr>
<tr name="91" id="91">
<td>91</td><td></td></tr>
<tr name="92" id="92">
<td>92</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="93" id="93">
<td>93</td><td>  <a id="93c3" class="tk">int8_T</a> <a id="93c10" class="tk">re</a>;</td></tr>
<tr name="94" id="94">
<td>94</td><td>  <a id="94c3" class="tk">int8_T</a> <a id="94c10" class="tk">im</a>;</td></tr>
<tr name="95" id="95">
<td>95</td><td><span class="br">}</span> <a id="95c3" class="tk">cint8_T</a>;</td></tr>
<tr name="96" id="96">
<td>96</td><td></td></tr>
<tr name="97" id="97">
<td>97</td><td><span class="pp">#define</span> <a id="97c9" class="tk">CUINT8_T</a></td></tr>
<tr name="98" id="98">
<td>98</td><td></td></tr>
<tr name="99" id="99">
<td>99</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="100" id="100">
<td>100</td><td>  <a id="100c3" class="tk">uint8_T</a> <a id="100c11" class="tk">re</a>;</td></tr>
<tr name="101" id="101">
<td>101</td><td>  <a id="101c3" class="tk">uint8_T</a> <a id="101c11" class="tk">im</a>;</td></tr>
<tr name="102" id="102">
<td>102</td><td><span class="br">}</span> <a id="102c3" class="tk">cuint8_T</a>;</td></tr>
<tr name="103" id="103">
<td>103</td><td></td></tr>
<tr name="104" id="104">
<td>104</td><td><span class="pp">#define</span> <a id="104c9" class="tk">CINT16_T</a></td></tr>
<tr name="105" id="105">
<td>105</td><td></td></tr>
<tr name="106" id="106">
<td>106</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="107" id="107">
<td>107</td><td>  <a id="107c3" class="tk">int16_T</a> <a id="107c11" class="tk">re</a>;</td></tr>
<tr name="108" id="108">
<td>108</td><td>  <a id="108c3" class="tk">int16_T</a> <a id="108c11" class="tk">im</a>;</td></tr>
<tr name="109" id="109">
<td>109</td><td><span class="br">}</span> <a id="109c3" class="tk">cint16_T</a>;</td></tr>
<tr name="110" id="110">
<td>110</td><td></td></tr>
<tr name="111" id="111">
<td>111</td><td><span class="pp">#define</span> <a id="111c9" class="tk">CUINT16_T</a></td></tr>
<tr name="112" id="112">
<td>112</td><td></td></tr>
<tr name="113" id="113">
<td>113</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="114" id="114">
<td>114</td><td>  <a id="114c3" class="tk">uint16_T</a> <a id="114c12" class="tk">re</a>;</td></tr>
<tr name="115" id="115">
<td>115</td><td>  <a id="115c3" class="tk">uint16_T</a> <a id="115c12" class="tk">im</a>;</td></tr>
<tr name="116" id="116">
<td>116</td><td><span class="br">}</span> <a id="116c3" class="tk">cuint16_T</a>;</td></tr>
<tr name="117" id="117">
<td>117</td><td></td></tr>
<tr name="118" id="118">
<td>118</td><td><span class="pp">#define</span> <a id="118c9" class="tk">CINT32_T</a></td></tr>
<tr name="119" id="119">
<td>119</td><td></td></tr>
<tr name="120" id="120">
<td>120</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="121" id="121">
<td>121</td><td>  <a id="121c3" class="tk">int32_T</a> <a id="121c11" class="tk">re</a>;</td></tr>
<tr name="122" id="122">
<td>122</td><td>  <a id="122c3" class="tk">int32_T</a> <a id="122c11" class="tk">im</a>;</td></tr>
<tr name="123" id="123">
<td>123</td><td><span class="br">}</span> <a id="123c3" class="tk">cint32_T</a>;</td></tr>
<tr name="124" id="124">
<td>124</td><td></td></tr>
<tr name="125" id="125">
<td>125</td><td><span class="pp">#define</span> <a id="125c9" class="tk">CUINT32_T</a></td></tr>
<tr name="126" id="126">
<td>126</td><td></td></tr>
<tr name="127" id="127">
<td>127</td><td><span class="kw">typedef</span> <span class="kw">struct</span> <span class="br">{</span></td></tr>
<tr name="128" id="128">
<td>128</td><td>  <a id="128c3" class="tk">uint32_T</a> <a id="128c12" class="tk">re</a>;</td></tr>
<tr name="129" id="129">
<td>129</td><td>  <a id="129c3" class="tk">uint32_T</a> <a id="129c12" class="tk">im</a>;</td></tr>
<tr name="130" id="130">
<td>130</td><td><span class="br">}</span> <a id="130c3" class="tk">cuint32_T</a>;</td></tr>
<tr name="131" id="131">
<td>131</td><td></td></tr>
<tr name="132" id="132">
<td>132</td><td><span class="ct">/*=======================================================================*</span></td></tr>
<tr name="133" id="133">
<td>133</td><td><span class="ct"> * Min and Max:                                                          *</span></td></tr>
<tr name="134" id="134">
<td>134</td><td><span class="ct"> *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *</span></td></tr>
<tr name="135" id="135">
<td>135</td><td><span class="ct"> *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *</span></td></tr>
<tr name="136" id="136">
<td>136</td><td><span class="ct"> *=======================================================================*/</span></td></tr>
<tr name="137" id="137">
<td>137</td><td><span class="pp">#define</span> <a id="137c9" class="tk">MAX_int8_T</a>                     ((<a id="137c42" class="tk">int8_T</a>)(127))</td></tr>
<tr name="138" id="138">
<td>138</td><td><span class="pp">#define</span> <a id="138c9" class="tk">MIN_int8_T</a>                     ((<a id="138c42" class="tk">int8_T</a>)(-128))</td></tr>
<tr name="139" id="139">
<td>139</td><td><span class="pp">#define</span> <a id="139c9" class="tk">MAX_uint8_T</a>                    ((<a id="139c42" class="tk">uint8_T</a>)(255U))</td></tr>
<tr name="140" id="140">
<td>140</td><td><span class="pp">#define</span> <a id="140c9" class="tk">MAX_int16_T</a>                    ((<a id="140c42" class="tk">int16_T</a>)(32767))</td></tr>
<tr name="141" id="141">
<td>141</td><td><span class="pp">#define</span> <a id="141c9" class="tk">MIN_int16_T</a>                    ((<a id="141c42" class="tk">int16_T</a>)(-32768))</td></tr>
<tr name="142" id="142">
<td>142</td><td><span class="pp">#define</span> <a id="142c9" class="tk">MAX_uint16_T</a>                   ((<a id="142c42" class="tk">uint16_T</a>)(65535U))</td></tr>
<tr name="143" id="143">
<td>143</td><td><span class="pp">#define</span> <a id="143c9" class="tk">MAX_int32_T</a>                    ((<a id="143c42" class="tk">int32_T</a>)(2147483647))</td></tr>
<tr name="144" id="144">
<td>144</td><td><span class="pp">#define</span> <a id="144c9" class="tk">MIN_int32_T</a>                    ((<a id="144c42" class="tk">int32_T</a>)(-2147483647-1))</td></tr>
<tr name="145" id="145">
<td>145</td><td><span class="pp">#define</span> <a id="145c9" class="tk">MAX_uint32_T</a>                   ((<a id="145c42" class="tk">uint32_T</a>)(0xFFFFFFFFU))</td></tr>
<tr name="146" id="146">
<td>146</td><td></td></tr>
<tr name="147" id="147">
<td>147</td><td><span class="ct">/* Block D-Work pointer type */</span></td></tr>
<tr name="148" id="148">
<td>148</td><td><span class="kw">typedef</span> <span class="kw">void</span> * <a id="148c16" class="tk">pointer_T</a>;</td></tr>
<tr name="149" id="149">
<td>149</td><td></td></tr>
<tr name="150" id="150">
<td>150</td><td><span class="pp">#endif</span>                                 <span class="ct">/* __RTWTYPES_H__ */</span></td></tr>
<tr name="151" id="151">
<td>151</td><td></td></tr>
<tr name="152" id="152">
<td>152</td><td><span class="ct">/*</span></td></tr>
<tr name="153" id="153">
<td>153</td><td><span class="ct"> * File trailer for generated code.</span></td></tr>
<tr name="154" id="154">
<td>154</td><td><span class="ct"> *</span></td></tr>
<tr name="155" id="155">
<td>155</td><td><span class="ct"> * [EOF]</span></td></tr>
<tr name="156" id="156">
<td>156</td><td><span class="ct"> */</span></td></tr>
<tr name="157" id="157">
<td>157</td><td></td></tr>
</table>
</pre>
</body>
</html>
// Copyright 2007-2012 The MathWorks, Inc.

function createHighlightSpanStart(num)
{
    return "<span class=\"highlighted\" name=\"highlight" + num + "\">";
}

var str2pos;   // This is a map between a tag stripped string and the original string. 
function getTagStrippedStringAndMap(aString)
{
    var tagStrippedString = new String();

    str2pos = new Array();

    var inTag = false;
    var inScript = false;
    
    for (var strPos = 0; strPos < aString.length; strPos++) {
        if (inTag && aString.charAt(strPos) == '>') {
            inTag = false;
            if (inScript && (strPos > 8) && (aString.slice(strPos, strPos - 8) == '/script>')) {
                inScript = false;
            }            
            continue;
        } else if (!inTag && aString.charAt(strPos) == '<') {
            inTag = true;
            if (!inScript && aString.slice(strPos, strPos + 7) == '<script') {
                inScript = true;
                strPos += 7;
            }
            continue;
        }        
        
        if (inTag == false && inScript == false) {
            tagStrippedString += aString.charAt(strPos);
            str2pos.push(strPos);
        }
    }
    return tagStrippedString;
}

function escapeSpecialChars(string)
{
    // let the browser handle the escaping rather than doing a String.replace
    // call
    var div = document.createElement("div");
    var text = document.createTextNode(string);
    div.appendChild(text);
    var escapedString = div.innerHTML;
    delete div;
    return escapedString;
}

// insert highlight tags into the body. Split it up into multiple sections if necessary
// (i.e. if there is a tag in the middle).
function insertHighlighting(bodyText, previ, i, length, highlightStartTag, highlightEndTag)
{
    var newText = "";    
    newText = bodyText.slice(previ, str2pos[i]);
    
    // insert start
    newText += highlightStartTag;
    
    var str2posprev = str2pos[i];    
    // deal with intermediate tags
    for(var cnt = i; cnt < i+length; cnt++)
    {
        if (str2pos[cnt] > str2posprev+1) // we have jumped some text, so there must be a tag
        {
            // insert end tag
            newText += highlightEndTag;
            
            // insert intermediate body text tags
            newText += bodyText.slice(str2posprev+1, str2pos[cnt]);
            
            // insert start tag
            newText += highlightStartTag;
        }
        newText += bodyText.charAt(str2pos[cnt]);
        str2posprev=str2pos[cnt];
    }
    
    // insert end
    newText += highlightEndTag;
    return newText;
    
}

// check to see if the sequence at position 'i' in taglessString is actually in
// the middle of an escape sequence. We assume escape sequences follow the pattern
// &<sequenceText>;. We check for &nbsp;, &lt;, &gt; and &amp;
function isInEscapedSequence(i, taglessString, searchTerm)
{
    var escapeSeq = /&nbsp;|&lt;|&gt;|&amp;/gi;
    var maxEscapeSeqLength = 6;
    var startPos = 0; 
    var endPos = 0;
    
    // exit if the search term has an escape sequence inside it
    if (escapeSeq.test(searchTerm)) {
        return false;
    }

    // reset the escape sequence
    escapeSeq = /&nbsp;|&lt;|&gt;|&amp;/gi;

    // go back in the string until we find an ampersand or we hit maxEscapeSeqLength characters
    tempI = i;
    var bFound = false;
    while (tempI >= 0 && tempI > (i-maxEscapeSeqLength)) {
        if (taglessString.charAt(tempI) == "&") {
            startPos = tempI;
            bFound = true;
            break;
        } 
        tempI = tempI-1;
        
        // if we hit a ';' in any position other than the first while searching
        // for an ampersand, then we cannot be inside an escape sequence
        if (tempI >= 0 && taglessString.charAt(tempI) == ";") {
            return false;
        }        
    }
    if (!bFound) {
        return false;
    }
    // reset the escape sequence
    escapeSeq = /&nbsp;|&lt;|&gt;|&amp;/gi;

    var subString = taglessString.substring(startPos, startPos + maxEscapeSeqLength);
    return escapeSeq.test(subString);
}

// Adds highlighting to bodyText around searchTerm. Case sensitivity is optional.
// hitCount is used to a) count the number of search matches and b) Generate unique
// name strings for each highlighting SPAN element.
function addHighlight(bodyText, searchTerm, caseSensitive, hitCount) 
{
    var highlightStartTag = ""; 
    var highlightEndTag = "</span>";
  
    var newText = "";
    var i = 0;
    var previ = 0;
    var bodyTextUC = bodyText.toUpperCase();
    
    if (caseSensitive) {
        var taglessString = getTagStrippedStringAndMap(bodyText);
    } else {
        var taglessString = getTagStrippedStringAndMap(bodyTextUC);
    }

    // escape the search term in case the user input '<' or '>' etc
    searchTerm = escapeSpecialChars(searchTerm);

    if (!caseSensitive) {
        var searchTermUC = searchTerm.toUpperCase();
    } 

    // search for subsequent matches
    while (true) {
        if (caseSensitive) {
            i = taglessString.indexOf(searchTerm, i);
        } else {
            i = taglessString.indexOf(searchTermUC, i);
        }
        if (i < 0) break;
        
        // we have a match!
        
        // make sure that the match is not inside an escaped sequence of text
        // such as &nbsp;
        if (isInEscapedSequence(i, taglessString, searchTerm)) {
            i=i+1;
            continue;
        }
        
        // insert highlight tags that cross tag boundaries
        highlightStartTag = createHighlightSpanStart(hitCount);
        hitCount = hitCount+1;
        newText += insertHighlighting(bodyText, previ, i, searchTerm.length, highlightStartTag, highlightEndTag);        
        previ = str2pos[i+searchTerm.length-1]+1;
        
        i = i + searchTerm.length;
    }
    
    newText += bodyText.slice(previ, bodyText.length);
    return [newText, hitCount];
}

function removeHighlight(bodyText) 
{
    // We use regular expressions here rather than a straight text search because 
    // some browsers actually insert double quotes and capitalize.  Also, each highlight
    // name is uniquely numbered in order of discovery
    var highlightStartTag = /<span class=[\"]*highlighted(Current)*[\"]* name=[\"]*highlight[0-9]*[\"]*>/i;
    var highlightEndTag = /<\/span>/i;
    
    var newText = "";

    var startPatternFirstIndex = -1;
    var startPatternLastIndex = -1;
    
    var endPatternFirstIndex = -1;
    var endPatternLastIndex = -1;

    while (highlightStartTag.test(bodyText) === true) {
        startPatternFirstIndex = bodyText.search(highlightStartTag);
        newText += bodyText.substring(0, startPatternFirstIndex);        
        startPatternLastIndex = bodyText.indexOf('>', startPatternFirstIndex+1);
        
        bodyText = bodyText.substr(startPatternLastIndex+1);
        endPatternFirstIndex = bodyText.search(highlightEndTag);
        newText += bodyText.substring(0, endPatternFirstIndex);
        endPatternLastIndex = endPatternFirstIndex+7;
        
        bodyText = bodyText.substr(endPatternLastIndex);
    }
    if (startPatternFirstIndex < 0) {
        return bodyText;
    } else {
        return newText+bodyText;
    }
}

function removeHighlightInAllDocs()
{
    if (top) {
        for (var i = 0; i < top.frames.length; i++) {
            if (top.frames[i].name === "rtwreport_contents_frame" || top.frames[i].name === "rtwreport_document_frame") {
                var currentDoc = top.frames[i].document;
                if (typeof currentDoc.body !== "undefined" && currentDoc.body !== null)
                    currentDoc.body.innerHTML=removeHighlight(currentDoc.body.innerHTML);
            }
        }
    }
}

function findInDoc(searchStringFromSubmitBox, doc, caseSensitive, hitCount) 
{
    var searchBody = doc.body.innerHTML;
    // if the document is empty, or the documents is invalid, return
    if (!doc.body || typeof(searchBody) === "undefined") {
        return [false, hitCount];
    }
        
    // inject highlighting code into html
    var result = addHighlight(searchBody, searchStringFromSubmitBox, caseSensitive, hitCount);
    doc.body.innerHTML = result[0];

    return [true, result[1]];
}

var currentlyHighlightedHit;

function getSpansByName(name)
{
    var allSpans = [];
    for (i = 0; i < top.frames.length; i++) {
        if (top.frames[i].name === "rtwreport_contents_frame" || top.frames[i].name === "rtwreport_document_frame") {
            var currentDoc = top.frames[i].document; 
            var highlightedSpans = currentDoc.getElementsByName(name);
            if (highlightedSpans && highlightedSpans.length && highlightedSpans.length > 0) {
            for (j = 0; j < highlightedSpans.length; j++) {
            allSpans = allSpans.concat(highlightedSpans[j]);
            }
            }
        }
    }
    return allSpans;
}

function isVisibleElement(elementID)
{
    if (elementID)
        return elementID.offsetWidth > 0 || elementID.offsetHeight > 0;
    else 
        return false;
}

function areAllSpansVisible(spans)
{
    isVisible = true;
    for (i = 0; i < highlightedSpans.length; i++) {
        isVisible = isVisible && isVisibleElement(highlightedSpans[i]);
    }
    return isVisible;
}

function getNextVisible()
{
    var isVisible = false;
    var foundVisible = false;
    while (!isVisible) {
        currentlyHighlightedHit = currentlyHighlightedHit + 1;
        highlightedSpans = setCurrentSearchMatchIfVisible(currentlyHighlightedHit);
        if (highlightedSpans && highlightedSpans.length > 0) {
            isVisible = true;
        } else if (currentlyHighlightedHit < totalHits) {
            continue;
        } else {
            // we have reached the end
            isVisible = false;
            currentlyHighlightedHit = 0;
            highlightedSpans = null;
            break;
        }
    }
    
    return highlightedSpans;    
}

function clearCurrentSearchMatch()
{
    // clear prior highlighting
    spanName = "highlight" + currentlyHighlightedHit;
    highlightedSpans = getSpansByName(spanName);
    if (highlightedSpans && highlightedSpans.length) {
        for (i = 0; i < highlightedSpans.length; i++) {
            if (highlightedSpans[i]) {
                highlightedSpans[i].setAttribute("class", "highlighted");
            }           
        }
    }
}

function setCurrentSearchMatchIfVisible(hitNum){
    currentlyHighlightedHit = hitNum;
    var spanName = "highlight" + currentlyHighlightedHit;
    var highlightedSpans = getSpansByName(spanName);
    if (highlightedSpans && highlightedSpans.length) {
        for (i = 0; i < highlightedSpans.length; i++) {
            if (!isVisibleElement(highlightedSpans[i])) {
                highlightedSpans = null;
                break;
            }
        }
    }
    return highlightedSpans;
}

// this takes in an option integer 'hitNum'. If not specified, it scrolls
// to the next hit
function scrollToNextHit(hitNum)
{
    var i = 0;
    var found = false;
    var spanName = "";
    var highlightedSpans;
    var searchBox = findElement('searchTxtBox');
    
    clearCurrentSearchMatch();
    
    if (hitNum) {
        // if a number is provided, use it
        highlightedSpans = setCurrentSearchMatchIfVisible(hitNum);
    } else {        
        // start working on next element to highlight
        highlightedSpans = getNextVisible();
    }    
    
    // we found the current 
    if (highlightedSpans && highlightedSpans.length > 0) {
        highlightedSpans[0].scrollIntoView();
        for (i = 0; i < highlightedSpans.length; i++) {
            highlightedSpans[i].setAttribute("class", "highlightedCurrent");
        }
        searchBox.setAttribute("class", "search");
        
    // if highlightedSpans is invalid, then we did not find any valid, visible subsequent matches
    // wrap to beginning or indicate no matches
    } else {
        // Element not found. Scroll to first visible element        
        currentlyHighlightedHit = 0;
        var highlightedSpans = getNextVisible(currentlyHighlightedHit);
        if (highlightedSpans && highlightedSpans.length > 0) {
            highlightedSpans[0].scrollIntoView();
            for (i = 0; i < highlightedSpans.length; i++) {
                highlightedSpans[i].setAttribute("class", "highlightedCurrent");
            }
            searchBox.setAttribute("class", "search");
        } else {
            // there aren't any matches
            searchBox.setAttribute("class", "failedSearch");
        }
    }
}

// find search box
function findElement(element)
{
    var i = 0;
    for (i = 0; i < top.frames.length; i++) {
        if (top.frames[i].name === "rtwreport_contents_frame" || top.frames[i].name === "rtwreport_document_frame") {
            var elem = top.frames[i].document.getElementById(element);
            if (elem) { 
                return elem;
            }
        }
    }
}

// Restore search term once form is submitted
function initSearchBox(strInitValue)
{
    var txtBox = findElement('searchTxtBox');
    if (txtBox) {
        txtBox.value = strInitValue;
    }
}

// Sets focus back on to the text box
function setFocusOnTxtBox()
{
    var txtBox = findElement('searchTxtBox');
    if (txtBox) {
        txtBox.focus();
        txtBox.select();
    }
    return txtBox;
}

var previousSearchString;
var totalHits;
function findInAllDocs(searchStringFromSubmitBox, caseSensitive)
{
    if (previousSearchString != searchStringFromSubmitBox) {
        // If the search string has changed or a new page has been loaded, do a new search
        var hitCount = 1;
        var i = 0;        
        var success = false;
        previousSearchString = searchStringFromSubmitBox;
               
        // start by removing traceinfo highlighting
        rtwRemoveHighlighting();
        
        // remove all previous search highlighting
        removeHighlightInAllDocs();

        // 1. Iterate through all frames in window and search
        for (i = 0; i < top.frames.length; i++) {
            var currentDoc = top.frames[i].document;    
            
            // if we have no search term, restore
            if (searchStringFromSubmitBox !== "") {
                // search and highlight in all frames
                var srchResult = findInDoc(searchStringFromSubmitBox, currentDoc, caseSensitive, hitCount);
                hitCount = srchResult[1];
                totalHits = srchResult[1];
            }
        }

        // 2. Restore search term once form is submitted and text highlighted        
        if (searchStringFromSubmitBox != "") {
            strInitValue = searchStringFromSubmitBox;
        }    
        initSearchBox(strInitValue);

        // 3. Scroll to the first hit encountered
        scrollToNextHit(1);
        
        // 4. Set focus back to text box and select text
        var txtBox = setFocusOnTxtBox();
        if (txtBox) {
            txtBox.select();
        }
                
    } else {
        // If the search string is the same, then scroll to the next 
        // hit if the hit is valid. Else wrap back.        
        scrollToNextHit();
    }
    return false;
}

// if the search box is empty, clear highlighting
function clearIfEmpty()
{
    txtBox = findElement('searchTxtBox');
    if (txtBox.value == "") {
        txtBox.setAttribute("class", "search");
        removeHighlightInAllDocs();
        previousSearchString="";
        setFocusOnTxtBox();
    }
}

function keyPressSwitchyard(keyPressEvent)
{ 
    var kc;
    keyPressEvent = (keyPressEvent == null ? window.keyPressEvent : keyPressEvent);

    // typically IE does not support this
    if (!keyPressEvent || (typeof keyPressEvent == "undefined")) {
        return;
    }
    
    if (keyPressEvent.keyCode) {    
        kc=keyPressEvent.keyCode;
    } else if (keyPressEvent.which) {
        kc=keyPressEvent.which;   
    } else {
        return;
    }

    // we do not care about the browser find appearing. If it does appear, then 
    // we are running an external browser and that is okay.
    
    // handle Ctrl-Key combinations
    if (keyPressEvent.ctrlKey) {
        switch (kc) {
            case 70: // Ctrl-F
            { 
              setFocusOnTxtBox();
              break;
            }
            
            default: break;
        }
    } 
}

function installDocumentKeyPressHandler()
{
    var i = 0;
    for (i = 0; i < top.frames.length; i++) {
        var currentDoc = top.frames[i].document;    
        currentDoc.onkeydown = keyPressSwitchyard;
    }    
    top.document.onkeydown = keyPressSwitchyard;
    
    // This also clears search related highlighting
    removeHighlightInAllDocs();
    currentlyHighlightedHit = 0;
    if (previousSearchString) initSearchBox(previousSearchString);
    previousSearchString = "";
}

// This function is a onresize callback for the rtwreport_contents_frame
// It is used to dynamically resize the searchbox based on the size of the frame.
function setWidthDynamic(frameID, elementID, extraSpace, minSize)
{
    var frame = document.getElementById(frameID);
    
    // sanity check input args
    if (frame && extraSpace > 0 && minSize > 0) {
        var frameWidth = frame.scrollWidth;
        var newSize = extraSpace + minSize + 40; // 40 is the extra whitespace
        var element = findElement(elementID);
        if (element)
        {
            if (frameWidth < newSize) {
                element.style.width = minSize;
            } else {
                element.style.width = frameWidth - extraSpace - 40;
            }
        }
    }
}
GIF89a    ı  ˇˇˇxxx˚˚˚ﬂﬂﬂÚÚÚˆˆˆÂÂÂ∫∫∫………˘˘˘ÒÒÒ¸¸¸≈≈≈æææÔÔÔŸŸŸÃÃÃÙÙÙ”””ÏÏÏòòò•••™™™πππ–––ıııüüü∞∞∞~~~xxx‰‰‰···ÈÈÈèèè©©©ááá†††‘‘‘                                                                              !ˇNETSCAPE2.0   !˛MATLAB 5.0 MAT-file, Platform: PCWIN64, Created on: Thu Jan 28 21:02:12 2016                                        N"       IM   ∆!  xúÏòMk1«”∫-Z§T(‘CÀ}Ah∑≈∫≤›.µiï‚*xY“ôÏnh&2ôñ˙%º˚	<zˆ‰—£w˝^MÊmóÏ‘ÅYi;Å0yí<ˇI~yí03 ËØMÄi˘º+Û$”TdOÂô1Ì≤∂‡æ%‚~0µëYph°#Ÿ)“IÏ6∂è°zà"≤_bÇ< 8≤}Ÿ˚ÑYg^†Ô!.ÛπÖ⁄óû@N†Á∏«ÃF$í^–¢î√‰B$	{oê'!ß»S’˝§¶YôWÉ+ÁáÊœw&≤õ2SË†∞Öãã»p°Ëá≈˛•ã8¡Ù»È@Åï#∆ˆ`x¡˚üÅ¡˚+)¸ßÜﬁ?Ÿêˆä¸˜2¸Ôk˛ næfL¥6bô@Á0CgA”Y÷Î<XØéã®Ìﬂâ$ïﬁ∑Ωèöû≤õ∞⁄Á®ªk8Px⁄∞‰bÛuL‚íuen9* VWF^›®?]Y3™
˝Æ1Ëi¥ö]FE’bÑÒ]„—ÊfΩæΩ-kqkôàbπ'v¬Å77p´π°˙ÀlÛ¯^π:>Ó¸%>∂dÓb≈áÉ®$‚;Tï<ãπaÂ RqÒ9ÉüØÒSˆA√|+wêgû@ \riæ`ñÔ *<Ûî	≥Õ∫‚rdÓC©ÖiØöTÖƒÕ`{ô#p;“Ï»mY∑¢Ò÷Ü∆;ù2ﬁaNì≤Ù+ß_ÃÁüƒkGûn-–ª‹+í‡Ãƒx‹O2¯,i|ñRπÀ}çœÂôxÆÆÅk…øüÉø‚¯5ßHÒ”˘ƒiòOÏ?≥ˆÕºÊ?ü∂~Ú∞çıˆ2ÙÊ4=ïü´√∂z œYŒA<Ô~éÓ1].◊ª=C”3“Ê9*ùp¸ë°ˇI”Wˆx˜[mú˚Müà~’%ÛZ}xı}˜ î˜]ﬁ˚n9ßHÒÀ≥Ôo:ﬂ«%ﬂB˘÷JæÖÚ}RÚ-îoΩ‰[(ﬂücÚ-øÁÚ}œ›+øÁ˛+ˇ˜Û_‘¯,¶Ú«	˛ê¸œªn¸Û~OÂÙ)~7˘\œÀ˜U…∑PæÌío°|q…∑Pæ§‰[(_VÚ-î/ø≈|ˇ   ˇˇÏôÕN€@«Q†U[@BB·´=îêÑ!B%™∏Tç